;;; Mappings from Adobe glyph names to Unicode characters.
;;;
;;; In some CMap tables, Adobe glyph names are used for specifying
;;; Unicode characters instead of using decimal/hex character code.
;;; 
;;; The following data was taken by

;;; $ wget http://www.adobe.com/devnet/opentype/archives/glyphlist.txt
;;; $ python tools/conv_glyphlist.py glyphlist.txt > glyphlist.py
;;; vim :s/'\([^']*\)':/(lit "\1\")
;;;     :s/\\u\([^'\]*\)/(code-char #x\1)/g
;;;     :s/u'/(format nil "~@{~C~}"
;;;     :$s/',/)


; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Copyright (c) 1997,1998,2002,2007 Adobe Systems Incorporated
;
; Permission is hereby granted, free of charge, to any person obtaining a
; copy of this documentation file to use, copy, publish, distribute,
; sublicense, and/or sell copies of the documentation, and to permit
; others to do the same, provided that:
; - No modification, editing or other alteration of this document is
; allowed; and
; - The above copyright notice and this permission notice shall be
; included in all copies of the documentation.
;
; Permission is hereby granted, free of charge, to any person obtaining a
; copy of this documentation file, to create their own derivative works
; from the content of this document to use, copy, publish, distribute,
; sublicense, and/or sell the derivative works, and to permit others to do
; the same, provided that the derived work is not represented as being a
; copy or version of this document.
;
; Adobe shall not be liable to any party for any loss of revenue or profit
; or for indirect, incidental, special, consequential, or other similar
; damages, whether based on tort (including without limitation negligence
; or strict liability), contract or other legal or equitable grounds even
; if Adobe has been advised or had reason to know of the possibility of
; such damages. The Adobe materials are provided on an "AS IS" basis.
; Adobe specifically disclaims all express, statutory, or implied
; warranties relating to the Adobe materials, including but not limited to
; those concerning merchantability or fitness for a particular purpose or
; non-infringement of any third party rights regarding the Adobe
; materials.
; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; Name:          Adobe Glyph List
; Table version: 2.0
; Date:          September 20, 2002
;
; See http://partners.adobe.com/asn/developer/typeforum/unicodegn.html
;
; Format: Semicolon-delimited fields:
;            (1) glyph name
;            (2) Unicode scalar value

(in-package :encoding-db)

(defvar +glyphname2unicode+ (make-hash-table))

 (setf (gethash (lit "A") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0041)))
 (SETF (GETHASH (LIT "AE") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x00C6)))
 (setf (gethash (lit "AEacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FC)))
 (setf (gethash (lit "AEmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E2)))
 (setf (gethash (lit "AEsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E6)))
 (setf (gethash (lit "Aacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C1)))
 (setf (gethash (lit "Aacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E1)))
 (setf (gethash (lit "Abreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0102)))
 (setf (gethash (lit "Abreveacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAE)))
 (setf (gethash (lit "Abrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D0)))
 (setf (gethash (lit "Abrevedotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB6)))
 (setf (gethash (lit "Abrevegrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB0)))
 (setf (gethash (lit "Abrevehookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB2)))
 (setf (gethash (lit "Abrevetilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB4)))
 (setf (gethash (lit "Acaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01CD)))
 (setf (gethash (lit "Acircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B6)))
 (setf (gethash (lit "Acircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C2)))
 (setf (gethash (lit "Acircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA4)))
 (setf (gethash (lit "Acircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAC)))
 (setf (gethash (lit "Acircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA6)))
 (setf (gethash (lit "Acircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA8)))
 (setf (gethash (lit "Acircumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E2)))
 (setf (gethash (lit "Acircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAA)))
 (setf (gethash (lit "Acute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C9)))
 (setf (gethash (lit "Acutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7B4)))
 (setf (gethash (lit "Acyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0410)))
 (setf (gethash (lit "Adblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0200)))
 (setf (gethash (lit "Adieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C4)))
 (setf (gethash (lit "Adieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D2)))
 (setf (gethash (lit "Adieresismacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DE)))
 (setf (gethash (lit "Adieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E4)))
 (setf (gethash (lit "Adotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA0)))
 (setf (gethash (lit "Adotmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E0)))
 (setf (gethash (lit "Agrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C0)))
 (setf (gethash (lit "Agravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E0)))
 (setf (gethash (lit "Ahookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA2)))
 (setf (gethash (lit "Aiecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D4)))
 (setf (gethash (lit "Ainvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0202)))
 (setf (gethash (lit "Alpha") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0391)))
 (setf (gethash (lit "Alphatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0386)))
 (setf (gethash (lit "Amacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0100)))
 (setf (gethash (lit "Amonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF21)))
 (setf (gethash (lit "Aogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0104)))
 (setf (gethash (lit "Aring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C5)))
 (setf (gethash (lit "Aringacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FA)))
 (setf (gethash (lit "Aringbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E00)))
 (setf (gethash (lit "Aringsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E5)))
 (setf (gethash (lit "Asmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF761)))
 (setf (gethash (lit "Atilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C3)))
 (setf (gethash (lit "Atildesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E3)))
 (setf (gethash (lit "Aybarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0531)))
 (setf (gethash (lit "B") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0042)))
 (setf (gethash (lit "Bcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B7)))
 (setf (gethash (lit "Bdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E02)))
 (setf (gethash (lit "Bdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E04)))
 (setf (gethash (lit "Becyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0411)))
 (setf (gethash (lit "Benarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0532)))
 (setf (gethash (lit "Beta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0392)))
 (setf (gethash (lit "Bhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0181)))
 (setf (gethash (lit "Blinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E06)))
 (setf (gethash (lit "Bmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF22)))
 (setf (gethash (lit "Brevesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F4)))
 (setf (gethash (lit "Bsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF762)))
 (setf (gethash (lit "Btopbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0182)))
 (setf (gethash (lit "C") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0043)))
 (setf (gethash (lit "Caarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053E)))
 (setf (gethash (lit "Cacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0106)))
 (setf (gethash (lit "Caron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CA)))
 (setf (gethash (lit "Caronsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F5)))
 (setf (gethash (lit "Ccaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010C)))
 (setf (gethash (lit "Ccedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C7)))
 (setf (gethash (lit "Ccedillaacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E08)))
 (setf (gethash (lit "Ccedillasmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E7)))
 (setf (gethash (lit "Ccircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B8)))
 (setf (gethash (lit "Ccircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0108)))
 (setf (gethash (lit "Cdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010A)))
 (setf (gethash (lit "Cdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010A)))
 (setf (gethash (lit "Cedillasmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7B8)))
 (setf (gethash (lit "Chaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0549)))
 (setf (gethash (lit "Cheabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BC)))
 (setf (gethash (lit "Checyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0427)))
 (setf (gethash (lit "Chedescenderabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BE)))
 (setf (gethash (lit "Chedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B6)))
 (setf (gethash (lit "Chedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F4)))
 (setf (gethash (lit "Cheharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0543)))
 (setf (gethash (lit "Chekhakassiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04CB)))
 (setf (gethash (lit "Cheverticalstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B8)))
 (setf (gethash (lit "Chi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A7)))
 (setf (gethash (lit "Chook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0187)))
 (setf (gethash (lit "Circumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F6)))
 (setf (gethash (lit "Cmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF23)))
 (setf (gethash (lit "Coarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0551)))
 (setf (gethash (lit "Csmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF763)))
 (setf (gethash (lit "D") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0044)))
 (SETF (GETHASH (LIT "DZ") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x01F1)))
 (setf (gethash (lit "DZcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C4)))
 (setf (gethash (lit "Daarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0534)))
 (setf (gethash (lit "Dafrican") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0189)))
 (setf (gethash (lit "Dcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010E)))
 (setf (gethash (lit "Dcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E10)))
 (setf (gethash (lit "Dcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B9)))
 (setf (gethash (lit "Dcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E12)))
 (setf (gethash (lit "Dcroat") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0110)))
 (setf (gethash (lit "Ddotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0A)))
 (setf (gethash (lit "Ddotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0C)))
 (setf (gethash (lit "Decyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0414)))
 (setf (gethash (lit "Deicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03EE)))
 (setf (gethash (lit "Delta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2206)))
 (setf (gethash (lit "Deltagreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0394)))
 (setf (gethash (lit "Dhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018A)))
 (setf (gethash (lit "Dieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CB)))
 (setf (gethash (lit "DieresisAcute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CC)))
 (setf (gethash (lit "DieresisGrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CD)))
 (setf (gethash (lit "Dieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7A8)))
 (setf (gethash (lit "Digammagreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03DC)))
 (setf (gethash (lit "Djecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0402)))
 (setf (gethash (lit "Dlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0E)))
 (setf (gethash (lit "Dmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF24)))
 (setf (gethash (lit "Dotaccentsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F7)))
 (setf (gethash (lit "Dslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0110)))
 (setf (gethash (lit "Dsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF764)))
 (setf (gethash (lit "Dtopbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018B)))
 (setf (gethash (lit "Dz") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01F2)))
 (setf (gethash (lit "Dzcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C5)))
 (setf (gethash (lit "Dzeabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E0)))
 (setf (gethash (lit "Dzecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0405)))
 (setf (gethash (lit "Dzhecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040F)))
 (setf (gethash (lit "E") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0045)))
 (setf (gethash (lit "Eacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C9)))
 (setf (gethash (lit "Eacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E9)))
 (setf (gethash (lit "Ebreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0114)))
 (setf (gethash (lit "Ecaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011A)))
 (setf (gethash (lit "Ecedillabreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1C)))
 (setf (gethash (lit "Echarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0535)))
 (setf (gethash (lit "Ecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BA)))
 (setf (gethash (lit "Ecircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CA)))
 (setf (gethash (lit "Ecircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBE)))
 (setf (gethash (lit "Ecircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E18)))
 (setf (gethash (lit "Ecircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC6)))
 (setf (gethash (lit "Ecircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC0)))
 (setf (gethash (lit "Ecircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC2)))
 (setf (gethash (lit "Ecircumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7EA)))
 (setf (gethash (lit "Ecircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC4)))
 (setf (gethash (lit "Ecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0404)))
 (setf (gethash (lit "Edblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0204)))
 (setf (gethash (lit "Edieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CB)))
 (setf (gethash (lit "Edieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7EB)))
 (setf (gethash (lit "Edot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0116)))
 (setf (gethash (lit "Edotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0116)))
 (setf (gethash (lit "Edotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB8)))
 (setf (gethash (lit "Efcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0424)))
 (setf (gethash (lit "Egrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00C8)))
 (setf (gethash (lit "Egravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7E8)))
 (setf (gethash (lit "Eharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0537)))
 (setf (gethash (lit "Ehookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBA)))
 (setf (gethash (lit "Eightroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2167)))
 (setf (gethash (lit "Einvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0206)))
 (setf (gethash (lit "Eiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0464)))
 (setf (gethash (lit "Elcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041B)))
 (setf (gethash (lit "Elevenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x216A)))
 (setf (gethash (lit "Emacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0112)))
 (setf (gethash (lit "Emacronacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E16)))
 (setf (gethash (lit "Emacrongrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E14)))
 (setf (gethash (lit "Emcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041C)))
 (setf (gethash (lit "Emonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF25)))
 (setf (gethash (lit "Encyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041D)))
 (setf (gethash (lit "Endescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A2)))
 (setf (gethash (lit "Eng") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014A)))
 (setf (gethash (lit "Enghecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A4)))
 (setf (gethash (lit "Enhookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C7)))
 (setf (gethash (lit "Eogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0118)))
 (setf (gethash (lit "Eopen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0190)))
 (setf (gethash (lit "Epsilon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0395)))
 (setf (gethash (lit "Epsilontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0388)))
 (setf (gethash (lit "Ercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0420)))
 (setf (gethash (lit "Ereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018E)))
 (setf (gethash (lit "Ereversedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042D)))
 (setf (gethash (lit "Escyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0421)))
 (setf (gethash (lit "Esdescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AA)))
 (setf (gethash (lit "Esh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A9)))
 (setf (gethash (lit "Esmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF765)))
 (setf (gethash (lit "Eta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0397)))
 (setf (gethash (lit "Etarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0538)))
 (setf (gethash (lit "Etatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0389)))
 (setf (gethash (lit "Eth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D0)))
 (setf (gethash (lit "Ethsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F0)))
 (setf (gethash (lit "Etilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBC)))
 (setf (gethash (lit "Etildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1A)))
 (setf (gethash (lit "Euro") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AC)))
 (setf (gethash (lit "Ezh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B7)))
 (setf (gethash (lit "Ezhcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01EE)))
 (setf (gethash (lit "Ezhreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B8)))
 (setf (gethash (lit "F") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0046)))
 (setf (gethash (lit "Fcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BB)))
 (setf (gethash (lit "Fdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1E)))
 (setf (gethash (lit "Feharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0556)))
 (setf (gethash (lit "Feicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E4)))
 (setf (gethash (lit "Fhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0191)))
 (setf (gethash (lit "Fitacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0472)))
 (setf (gethash (lit "Fiveroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2164)))
 (setf (gethash (lit "Fmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF26)))
 (setf (gethash (lit "Fourroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2163)))
 (setf (gethash (lit "Fsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF766)))
 (setf (gethash (lit "G") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0047)))
 (setf (gethash (lit "GBsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3387)))
 (setf (gethash (lit "Gacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01F4)))
 (setf (gethash (lit "Gamma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0393)))
 (setf (gethash (lit "Gammaafrican") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0194)))
 (setf (gethash (lit "Gangiacoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03EA)))
 (setf (gethash (lit "Gbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011E)))
 (setf (gethash (lit "Gcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E6)))
 (setf (gethash (lit "Gcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0122)))
 (setf (gethash (lit "Gcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BC)))
 (setf (gethash (lit "Gcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011C)))
 (setf (gethash (lit "Gcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0122)))
 (setf (gethash (lit "Gdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0120)))
 (setf (gethash (lit "Gdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0120)))
 (setf (gethash (lit "Gecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0413)))
 (setf (gethash (lit "Ghadarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0542)))
 (setf (gethash (lit "Ghemiddlehookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0494)))
 (setf (gethash (lit "Ghestrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0492)))
 (setf (gethash (lit "Gheupturncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0490)))
 (setf (gethash (lit "Ghook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0193)))
 (setf (gethash (lit "Gimarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0533)))
 (setf (gethash (lit "Gjecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0403)))
 (setf (gethash (lit "Gmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E20)))
 (setf (gethash (lit "Gmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF27)))
 (setf (gethash (lit "Grave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CE)))
 (setf (gethash (lit "Gravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF760)))
 (setf (gethash (lit "Gsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF767)))
 (setf (gethash (lit "Gsmallhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x029B)))
 (setf (gethash (lit "Gstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E4)))
 (setf (gethash (lit "H") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0048)))
 (setf (gethash (lit "H18533") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CF)))
 (setf (gethash (lit "H18543") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AA)))
 (setf (gethash (lit "H18551") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AB)))
 (setf (gethash (lit "H22073") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A1)))
 (setf (gethash (lit "HPsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33CB)))
 (setf (gethash (lit "Haabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A8)))
 (setf (gethash (lit "Hadescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B2)))
 (setf (gethash (lit "Hardsigncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042A)))
 (setf (gethash (lit "Hbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0126)))
 (setf (gethash (lit "Hbrevebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2A)))
 (setf (gethash (lit "Hcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E28)))
 (setf (gethash (lit "Hcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BD)))
 (setf (gethash (lit "Hcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0124)))
 (setf (gethash (lit "Hdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E26)))
 (setf (gethash (lit "Hdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E22)))
 (setf (gethash (lit "Hdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E24)))
 (setf (gethash (lit "Hmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF28)))
 (setf (gethash (lit "Hoarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0540)))
 (setf (gethash (lit "Horicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E8)))
 (setf (gethash (lit "Hsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF768)))
 (setf (gethash (lit "Hungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6CF)))
 (setf (gethash (lit "Hungarumlautsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F8)))
 (setf (gethash (lit "Hzsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3390)))
 (setf (gethash (lit "I") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0049)))
 (setf (gethash (lit "IAcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042F)))
 (SETF (GETHASH (LIT "IJ") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x0132)))
 (setf (gethash (lit "IUcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042E)))
 (setf (gethash (lit "Iacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CD)))
 (setf (gethash (lit "Iacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7ED)))
 (setf (gethash (lit "Ibreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012C)))
 (setf (gethash (lit "Icaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01CF)))
 (setf (gethash (lit "Icircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BE)))
 (setf (gethash (lit "Icircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CE)))
 (setf (gethash (lit "Icircumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7EE)))
 (setf (gethash (lit "Icyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0406)))
 (setf (gethash (lit "Idblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0208)))
 (setf (gethash (lit "Idieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CF)))
 (setf (gethash (lit "Idieresisacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2E)))
 (setf (gethash (lit "Idieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E4)))
 (setf (gethash (lit "Idieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7EF)))
 (setf (gethash (lit "Idot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0130)))
 (setf (gethash (lit "Idotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0130)))
 (setf (gethash (lit "Idotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECA)))
 (setf (gethash (lit "Iebrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D6)))
 (setf (gethash (lit "Iecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0415)))
 (setf (gethash (lit "Ifraktur") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2111)))
 (setf (gethash (lit "Igrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00CC)))
 (setf (gethash (lit "Igravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7EC)))
 (setf (gethash (lit "Ihookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC8)))
 (setf (gethash (lit "Iicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0418)))
 (setf (gethash (lit "Iinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020A)))
 (setf (gethash (lit "Iishortcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0419)))
 (setf (gethash (lit "Imacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012A)))
 (setf (gethash (lit "Imacroncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E2)))
 (setf (gethash (lit "Imonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF29)))
 (setf (gethash (lit "Iniarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053B)))
 (setf (gethash (lit "Iocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0401)))
 (setf (gethash (lit "Iogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012E)))
 (setf (gethash (lit "Iota") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0399)))
 (setf (gethash (lit "Iotaafrican") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0196)))
 (setf (gethash (lit "Iotadieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AA)))
 (setf (gethash (lit "Iotatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x038A)))
 (setf (gethash (lit "Ismall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF769)))
 (setf (gethash (lit "Istroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0197)))
 (setf (gethash (lit "Itilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0128)))
 (setf (gethash (lit "Itildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2C)))
 (setf (gethash (lit "Izhitsacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0474)))
 (setf (gethash (lit "Izhitsadblgravecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0476)))
 (setf (gethash (lit "J") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004A)))
 (setf (gethash (lit "Jaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0541)))
 (setf (gethash (lit "Jcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24BF)))
 (setf (gethash (lit "Jcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0134)))
 (setf (gethash (lit "Jecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0408)))
 (setf (gethash (lit "Jheharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054B)))
 (setf (gethash (lit "Jmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2A)))
 (setf (gethash (lit "Jsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76A)))
 (setf (gethash (lit "K") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004B)))
 (setf (gethash (lit "KBsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3385)))
 (setf (gethash (lit "KKsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33CD)))
 (setf (gethash (lit "Kabashkircyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A0)))
 (setf (gethash (lit "Kacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E30)))
 (setf (gethash (lit "Kacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041A)))
 (setf (gethash (lit "Kadescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049A)))
 (setf (gethash (lit "Kahookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C3)))
 (setf (gethash (lit "Kappa") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039A)))
 (setf (gethash (lit "Kastrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049E)))
 (setf (gethash (lit "Kaverticalstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049C)))
 (setf (gethash (lit "Kcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E8)))
 (setf (gethash (lit "Kcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0136)))
 (setf (gethash (lit "Kcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C0)))
 (setf (gethash (lit "Kcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0136)))
 (setf (gethash (lit "Kdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E32)))
 (setf (gethash (lit "Keharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0554)))
 (setf (gethash (lit "Kenarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053F)))
 (setf (gethash (lit "Khacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0425)))
 (setf (gethash (lit "Kheicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E6)))
 (setf (gethash (lit "Khook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0198)))
 (setf (gethash (lit "Kjecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040C)))
 (setf (gethash (lit "Klinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E34)))
 (setf (gethash (lit "Kmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2B)))
 (setf (gethash (lit "Koppacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0480)))
 (setf (gethash (lit "Koppagreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03DE)))
 (setf (gethash (lit "Ksicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046E)))
 (setf (gethash (lit "Ksmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76B)))
 (setf (gethash (lit "L") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004C)))
 (SETF (GETHASH (LIT "LJ") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x01C7)))
 (SETF (GETHASH (LIT "LL") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #xF6BF)))
 (setf (gethash (lit "Lacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0139)))
 (setf (gethash (lit "Lambda") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039B)))
 (setf (gethash (lit "Lcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013D)))
 (setf (gethash (lit "Lcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013B)))
 (setf (gethash (lit "Lcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C1)))
 (setf (gethash (lit "Lcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3C)))
 (setf (gethash (lit "Lcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013B)))
 (setf (gethash (lit "Ldot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013F)))
 (setf (gethash (lit "Ldotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013F)))
 (setf (gethash (lit "Ldotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E36)))
 (setf (gethash (lit "Ldotbelowmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E38)))
 (setf (gethash (lit "Liwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053C)))
 (setf (gethash (lit "Lj") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C8)))
 (setf (gethash (lit "Ljecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0409)))
 (setf (gethash (lit "Llinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3A)))
 (setf (gethash (lit "Lmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2C)))
 (setf (gethash (lit "Lslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0141)))
 (setf (gethash (lit "Lslashsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F9)))
 (setf (gethash (lit "Lsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76C)))
 (setf (gethash (lit "M") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004D)))
 (setf (gethash (lit "MBsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3386)))
 (setf (gethash (lit "Macron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D0)))
 (setf (gethash (lit "Macronsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7AF)))
 (setf (gethash (lit "Macute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3E)))
 (setf (gethash (lit "Mcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C2)))
 (setf (gethash (lit "Mdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E40)))
 (setf (gethash (lit "Mdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E42)))
 (setf (gethash (lit "Menarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0544)))
 (setf (gethash (lit "Mmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2D)))
 (setf (gethash (lit "Msmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76D)))
 (setf (gethash (lit "Mturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019C)))
 (setf (gethash (lit "Mu") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039C)))
 (setf (gethash (lit "N") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004E)))
 (SETF (GETHASH (LIT "NJ") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x01CA)))
 (setf (gethash (lit "Nacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0143)))
 (setf (gethash (lit "Ncaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0147)))
 (setf (gethash (lit "Ncedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0145)))
 (setf (gethash (lit "Ncircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C3)))
 (setf (gethash (lit "Ncircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4A)))
 (setf (gethash (lit "Ncommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0145)))
 (setf (gethash (lit "Ndotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E44)))
 (setf (gethash (lit "Ndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E46)))
 (setf (gethash (lit "Nhookleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019D)))
 (setf (gethash (lit "Nineroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2168)))
 (setf (gethash (lit "Nj") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01CB)))
 (setf (gethash (lit "Njecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040A)))
 (setf (gethash (lit "Nlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E48)))
 (setf (gethash (lit "Nmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2E)))
 (setf (gethash (lit "Nowarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0546)))
 (setf (gethash (lit "Nsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76E)))
 (setf (gethash (lit "Ntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D1)))
 (setf (gethash (lit "Ntildesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F1)))
 (setf (gethash (lit "Nu") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039D)))
 (setf (gethash (lit "O") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x004F)))
 (SETF (GETHASH (LIT "OE") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x0152)))
 (setf (gethash (lit "OEsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FA)))
 (setf (gethash (lit "Oacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D3)))
 (setf (gethash (lit "Oacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F3)))
 (setf (gethash (lit "Obarredcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E8)))
 (setf (gethash (lit "Obarreddieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04EA)))
 (setf (gethash (lit "Obreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014E)))
 (setf (gethash (lit "Ocaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D1)))
 (setf (gethash (lit "Ocenteredtilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019F)))
 (setf (gethash (lit "Ocircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C4)))
 (setf (gethash (lit "Ocircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D4)))
 (setf (gethash (lit "Ocircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED0)))
 (setf (gethash (lit "Ocircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED8)))
 (setf (gethash (lit "Ocircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED2)))
 (setf (gethash (lit "Ocircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED4)))
 (setf (gethash (lit "Ocircumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F4)))
 (setf (gethash (lit "Ocircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED6)))
 (setf (gethash (lit "Ocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041E)))
 (setf (gethash (lit "Odblacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0150)))
 (setf (gethash (lit "Odblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020C)))
 (setf (gethash (lit "Odieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D6)))
 (setf (gethash (lit "Odieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E6)))
 (setf (gethash (lit "Odieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F6)))
 (setf (gethash (lit "Odotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECC)))
 (setf (gethash (lit "Ogoneksmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FB)))
 (setf (gethash (lit "Ograve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D2)))
 (setf (gethash (lit "Ogravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F2)))
 (setf (gethash (lit "Oharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0555)))
 (setf (gethash (lit "Ohm") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2126)))
 (setf (gethash (lit "Ohookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECE)))
 (setf (gethash (lit "Ohorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A0)))
 (setf (gethash (lit "Ohornacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDA)))
 (setf (gethash (lit "Ohorndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE2)))
 (setf (gethash (lit "Ohorngrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDC)))
 (setf (gethash (lit "Ohornhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDE)))
 (setf (gethash (lit "Ohorntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE0)))
 (setf (gethash (lit "Ohungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0150)))
 (setf (gethash (lit "Oi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A2)))
 (setf (gethash (lit "Oinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020E)))
 (setf (gethash (lit "Omacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014C)))
 (setf (gethash (lit "Omacronacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E52)))
 (setf (gethash (lit "Omacrongrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E50)))
 (setf (gethash (lit "Omega") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2126)))
 (setf (gethash (lit "Omegacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0460)))
 (setf (gethash (lit "Omegagreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A9)))
 (setf (gethash (lit "Omegaroundcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047A)))
 (setf (gethash (lit "Omegatitlocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047C)))
 (setf (gethash (lit "Omegatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x038F)))
 (setf (gethash (lit "Omicron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039F)))
 (setf (gethash (lit "Omicrontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x038C)))
 (setf (gethash (lit "Omonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF2F)))
 (setf (gethash (lit "Oneroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2160)))
 (setf (gethash (lit "Oogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01EA)))
 (setf (gethash (lit "Oogonekmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01EC)))
 (setf (gethash (lit "Oopen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0186)))
 (setf (gethash (lit "Oslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D8)))
 (setf (gethash (lit "Oslashacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FE)))
 (setf (gethash (lit "Oslashsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F8)))
 (setf (gethash (lit "Osmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF76F)))
 (setf (gethash (lit "Ostrokeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FE)))
 (setf (gethash (lit "Otcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047E)))
 (setf (gethash (lit "Otilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D5)))
 (setf (gethash (lit "Otildeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4C)))
 (setf (gethash (lit "Otildedieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4E)))
 (setf (gethash (lit "Otildesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F5)))
 (setf (gethash (lit "P") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0050)))
 (setf (gethash (lit "Pacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E54)))
 (setf (gethash (lit "Pcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C5)))
 (setf (gethash (lit "Pdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E56)))
 (setf (gethash (lit "Pecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041F)))
 (setf (gethash (lit "Peharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054A)))
 (setf (gethash (lit "Pemiddlehookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A6)))
 (setf (gethash (lit "Phi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A6)))
 (setf (gethash (lit "Phook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A4)))
 (setf (gethash (lit "Pi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A0)))
 (setf (gethash (lit "Piwrarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0553)))
 (setf (gethash (lit "Pmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF30)))
 (setf (gethash (lit "Psi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A8)))
 (setf (gethash (lit "Psicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0470)))
 (setf (gethash (lit "Psmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF770)))
 (setf (gethash (lit "Q") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0051)))
 (setf (gethash (lit "Qcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C6)))
 (setf (gethash (lit "Qmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF31)))
 (setf (gethash (lit "Qsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF771)))
 (setf (gethash (lit "R") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0052)))
 (setf (gethash (lit "Raarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054C)))
 (setf (gethash (lit "Racute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0154)))
 (setf (gethash (lit "Rcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0158)))
 (setf (gethash (lit "Rcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0156)))
 (setf (gethash (lit "Rcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C7)))
 (setf (gethash (lit "Rcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0156)))
 (setf (gethash (lit "Rdblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0210)))
 (setf (gethash (lit "Rdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E58)))
 (setf (gethash (lit "Rdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5A)))
 (setf (gethash (lit "Rdotbelowmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5C)))
 (setf (gethash (lit "Reharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0550)))
 (setf (gethash (lit "Rfraktur") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x211C)))
 (setf (gethash (lit "Rho") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A1)))
 (setf (gethash (lit "Ringsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FC)))
 (setf (gethash (lit "Rinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0212)))
 (setf (gethash (lit "Rlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5E)))
 (setf (gethash (lit "Rmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF32)))
 (setf (gethash (lit "Rsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF772)))
 (setf (gethash (lit "Rsmallinverted") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0281)))
 (setf (gethash (lit "Rsmallinvertedsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B6)))
 (setf (gethash (lit "S") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0053)))
 (SETF (GETHASH (LIT "SF010000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x250C)))
 (SETF (GETHASH (LIT "SF020000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2514)))
 (SETF (GETHASH (LIT "SF030000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2510)))
 (SETF (GETHASH (LIT "SF040000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2518)))
 (SETF (GETHASH (LIT "SF050000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x253C)))
 (SETF (GETHASH (LIT "SF060000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x252C)))
 (SETF (GETHASH (LIT "SF070000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2534)))
 (SETF (GETHASH (LIT "SF080000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x251C)))
 (SETF (GETHASH (LIT "SF090000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2524)))
 (SETF (GETHASH (LIT "SF100000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2500)))
 (SETF (GETHASH (LIT "SF110000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2502)))
 (SETF (GETHASH (LIT "SF190000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2561)))
 (SETF (GETHASH (LIT "SF200000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2562)))
 (SETF (GETHASH (LIT "SF210000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2556)))
 (SETF (GETHASH (LIT "SF220000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2555)))
 (SETF (GETHASH (LIT "SF230000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2563)))
 (SETF (GETHASH (LIT "SF240000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2551)))
 (SETF (GETHASH (LIT "SF250000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2557)))
 (SETF (GETHASH (LIT "SF260000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255D)))
 (SETF (GETHASH (LIT "SF270000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255C)))
 (SETF (GETHASH (LIT "SF280000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255B)))
 (SETF (GETHASH (LIT "SF360000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255E)))
 (SETF (GETHASH (LIT "SF370000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255F)))
 (SETF (GETHASH (LIT "SF380000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x255A)))
 (SETF (GETHASH (LIT "SF390000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2554)))
 (SETF (GETHASH (LIT "SF400000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2569)))
 (SETF (GETHASH (LIT "SF410000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2566)))
 (SETF (GETHASH (LIT "SF420000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2560)))
 (SETF (GETHASH (LIT "SF430000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2550)))
 (SETF (GETHASH (LIT "SF440000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x256C)))
 (SETF (GETHASH (LIT "SF450000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2567)))
 (SETF (GETHASH (LIT "SF460000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2568)))
 (SETF (GETHASH (LIT "SF470000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2564)))
 (SETF (GETHASH (LIT "SF480000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2565)))
 (SETF (GETHASH (LIT "SF490000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2559)))
 (SETF (GETHASH (LIT "SF500000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2558)))
 (SETF (GETHASH (LIT "SF510000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2552)))
 (SETF (GETHASH (LIT "SF520000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x2553)))
 (SETF (GETHASH (LIT "SF530000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x256B)))
 (SETF (GETHASH (LIT "SF540000") +GLYPHNAME2UNICODE+) (format nil "~@{~C~}"(code-char #x256A)))
 (setf (gethash (lit "Sacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015A)))
 (setf (gethash (lit "Sacutedotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E64)))
 (setf (gethash (lit "Sampigreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E0)))
 (setf (gethash (lit "Scaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0160)))
 (setf (gethash (lit "Scarondotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E66)))
 (setf (gethash (lit "Scaronsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FD)))
 (setf (gethash (lit "Scedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015E)))
 (setf (gethash (lit "Schwa") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018F)))
 (setf (gethash (lit "Schwacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D8)))
 (setf (gethash (lit "Schwadieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DA)))
 (setf (gethash (lit "Scircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C8)))
 (setf (gethash (lit "Scircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015C)))
 (setf (gethash (lit "Scommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0218)))
 (setf (gethash (lit "Sdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E60)))
 (setf (gethash (lit "Sdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E62)))
 (setf (gethash (lit "Sdotbelowdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E68)))
 (setf (gethash (lit "Seharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054D)))
 (setf (gethash (lit "Sevenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2166)))
 (setf (gethash (lit "Shaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0547)))
 (setf (gethash (lit "Shacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0428)))
 (setf (gethash (lit "Shchacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0429)))
 (setf (gethash (lit "Sheicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E2)))
 (setf (gethash (lit "Shhacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BA)))
 (setf (gethash (lit "Shimacoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03EC)))
 (setf (gethash (lit "Sigma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A3)))
 (setf (gethash (lit "Sixroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2165)))
 (setf (gethash (lit "Smonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF33)))
 (setf (gethash (lit "Softsigncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042C)))
 (setf (gethash (lit "Ssmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF773)))
 (setf (gethash (lit "Stigmagreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03DA)))
 (setf (gethash (lit "T") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0054)))
 (setf (gethash (lit "Tau") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A4)))
 (setf (gethash (lit "Tbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0166)))
 (setf (gethash (lit "Tcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0164)))
 (setf (gethash (lit "Tcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0162)))
 (setf (gethash (lit "Tcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24C9)))
 (setf (gethash (lit "Tcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E70)))
 (setf (gethash (lit "Tcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0162)))
 (setf (gethash (lit "Tdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6A)))
 (setf (gethash (lit "Tdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6C)))
 (setf (gethash (lit "Tecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0422)))
 (setf (gethash (lit "Tedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AC)))
 (setf (gethash (lit "Tenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2169)))
 (setf (gethash (lit "Tetsecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B4)))
 (setf (gethash (lit "Theta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0398)))
 (setf (gethash (lit "Thook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AC)))
 (setf (gethash (lit "Thorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DE)))
 (setf (gethash (lit "Thornsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FE)))
 (setf (gethash (lit "Threeroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2162)))
 (setf (gethash (lit "Tildesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FE)))
 (setf (gethash (lit "Tiwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054F)))
 (setf (gethash (lit "Tlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6E)))
 (setf (gethash (lit "Tmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF34)))
 (setf (gethash (lit "Toarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0539)))
 (setf (gethash (lit "Tonefive") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BC)))
 (setf (gethash (lit "Tonesix") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0184)))
 (setf (gethash (lit "Tonetwo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A7)))
 (setf (gethash (lit "Tretroflexhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AE)))
 (setf (gethash (lit "Tsecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0426)))
 (setf (gethash (lit "Tshecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040B)))
 (setf (gethash (lit "Tsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF774)))
 (setf (gethash (lit "Twelveroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x216B)))
 (setf (gethash (lit "Tworoman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2161)))
 (setf (gethash (lit "U") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0055)))
 (setf (gethash (lit "Uacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DA)))
 (setf (gethash (lit "Uacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FA)))
 (setf (gethash (lit "Ubreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016C)))
 (setf (gethash (lit "Ucaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D3)))
 (setf (gethash (lit "Ucircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CA)))
 (setf (gethash (lit "Ucircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DB)))
 (setf (gethash (lit "Ucircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E76)))
 (setf (gethash (lit "Ucircumflexsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FB)))
 (setf (gethash (lit "Ucyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0423)))
 (setf (gethash (lit "Udblacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0170)))
 (setf (gethash (lit "Udblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0214)))
 (setf (gethash (lit "Udieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DC)))
 (setf (gethash (lit "Udieresisacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D7)))
 (setf (gethash (lit "Udieresisbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E72)))
 (setf (gethash (lit "Udieresiscaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D9)))
 (setf (gethash (lit "Udieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F0)))
 (setf (gethash (lit "Udieresisgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DB)))
 (setf (gethash (lit "Udieresismacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D5)))
 (setf (gethash (lit "Udieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FC)))
 (setf (gethash (lit "Udotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE4)))
 (setf (gethash (lit "Ugrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D9)))
 (setf (gethash (lit "Ugravesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7F9)))
 (setf (gethash (lit "Uhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE6)))
 (setf (gethash (lit "Uhorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AF)))
 (setf (gethash (lit "Uhornacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE8)))
 (setf (gethash (lit "Uhorndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF0)))
 (setf (gethash (lit "Uhorngrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EEA)))
 (setf (gethash (lit "Uhornhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EEC)))
 (setf (gethash (lit "Uhorntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EEE)))
 (setf (gethash (lit "Uhungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0170)))
 (setf (gethash (lit "Uhungarumlautcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F2)))
 (setf (gethash (lit "Uinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0216)))
 (setf (gethash (lit "Ukcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0478)))
 (setf (gethash (lit "Umacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016A)))
 (setf (gethash (lit "Umacroncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04EE)))
 (setf (gethash (lit "Umacrondieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7A)))
 (setf (gethash (lit "Umonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF35)))
 (setf (gethash (lit "Uogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0172)))
 (setf (gethash (lit "Upsilon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03A5)))
 (setf (gethash (lit "Upsilon1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D2)))
 (setf (gethash (lit "Upsilonacutehooksymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D3)))
 (setf (gethash (lit "Upsilonafrican") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B1)))
 (setf (gethash (lit "Upsilondieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AB)))
 (setf (gethash (lit "Upsilondieresishooksymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D4)))
 (setf (gethash (lit "Upsilonhooksymbol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D2)))
 (setf (gethash (lit "Upsilontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x038E)))
 (setf (gethash (lit "Uring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016E)))
 (setf (gethash (lit "Ushortcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040E)))
 (setf (gethash (lit "Usmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF775)))
 (setf (gethash (lit "Ustraightcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AE)))
 (setf (gethash (lit "Ustraightstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B0)))
 (setf (gethash (lit "Utilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0168)))
 (setf (gethash (lit "Utildeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E78)))
 (setf (gethash (lit "Utildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E74)))
 (setf (gethash (lit "V") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0056)))
 (setf (gethash (lit "Vcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CB)))
 (setf (gethash (lit "Vdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7E)))
 (setf (gethash (lit "Vecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0412)))
 (setf (gethash (lit "Vewarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x054E)))
 (setf (gethash (lit "Vhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B2)))
 (setf (gethash (lit "Vmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF36)))
 (setf (gethash (lit "Voarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0548)))
 (setf (gethash (lit "Vsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF776)))
 (setf (gethash (lit "Vtilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7C)))
 (setf (gethash (lit "W") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0057)))
 (setf (gethash (lit "Wacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E82)))
 (setf (gethash (lit "Wcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CC)))
 (setf (gethash (lit "Wcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0174)))
 (setf (gethash (lit "Wdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E84)))
 (setf (gethash (lit "Wdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E86)))
 (setf (gethash (lit "Wdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E88)))
 (setf (gethash (lit "Wgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E80)))
 (setf (gethash (lit "Wmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF37)))
 (setf (gethash (lit "Wsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF777)))
 (setf (gethash (lit "X") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0058)))
 (setf (gethash (lit "Xcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CD)))
 (setf (gethash (lit "Xdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8C)))
 (setf (gethash (lit "Xdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8A)))
 (setf (gethash (lit "Xeharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053D)))
 (setf (gethash (lit "Xi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x039E)))
 (setf (gethash (lit "Xmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF38)))
 (setf (gethash (lit "Xsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF778)))
 (setf (gethash (lit "Y") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0059)))
 (setf (gethash (lit "Yacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DD)))
 (setf (gethash (lit "Yacutesmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FD)))
 (setf (gethash (lit "Yatcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0462)))
 (setf (gethash (lit "Ycircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CE)))
 (setf (gethash (lit "Ycircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0176)))
 (setf (gethash (lit "Ydieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0178)))
 (setf (gethash (lit "Ydieresissmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7FF)))
 (setf (gethash (lit "Ydotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8E)))
 (setf (gethash (lit "Ydotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF4)))
 (setf (gethash (lit "Yericyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042B)))
 (setf (gethash (lit "Yerudieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F8)))
 (setf (gethash (lit "Ygrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF2)))
 (setf (gethash (lit "Yhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B3)))
 (setf (gethash (lit "Yhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF6)))
 (setf (gethash (lit "Yiarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0545)))
 (setf (gethash (lit "Yicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0407)))
 (setf (gethash (lit "Yiwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0552)))
 (setf (gethash (lit "Ymonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF39)))
 (setf (gethash (lit "Ysmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF779)))
 (setf (gethash (lit "Ytilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF8)))
 (setf (gethash (lit "Yusbigcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046A)))
 (setf (gethash (lit "Yusbigiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046C)))
 (setf (gethash (lit "Yuslittlecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0466)))
 (setf (gethash (lit "Yuslittleiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0468)))
 (setf (gethash (lit "Z") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005A)))
 (setf (gethash (lit "Zaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0536)))
 (setf (gethash (lit "Zacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0179)))
 (setf (gethash (lit "Zcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017D)))
 (setf (gethash (lit "Zcaronsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6FF)))
 (setf (gethash (lit "Zcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24CF)))
 (setf (gethash (lit "Zcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E90)))
 (setf (gethash (lit "Zdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017B)))
 (setf (gethash (lit "Zdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017B)))
 (setf (gethash (lit "Zdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E92)))
 (setf (gethash (lit "Zecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0417)))
 (setf (gethash (lit "Zedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0498)))
 (setf (gethash (lit "Zedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DE)))
 (setf (gethash (lit "Zeta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0396)))
 (setf (gethash (lit "Zhearmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x053A)))
 (setf (gethash (lit "Zhebrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C1)))
 (setf (gethash (lit "Zhecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0416)))
 (setf (gethash (lit "Zhedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0496)))
 (setf (gethash (lit "Zhedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DC)))
 (setf (gethash (lit "Zlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E94)))
 (setf (gethash (lit "Zmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3A)))
 (setf (gethash (lit "Zsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF77A)))
 (setf (gethash (lit "Zstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B5)))
 (setf (gethash (lit "a") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0061)))
 (setf (gethash (lit "aabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0986)))
 (setf (gethash (lit "aacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E1)))
 (setf (gethash (lit "aadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0906)))
 (setf (gethash (lit "aagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A86)))
 (setf (gethash (lit "aagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A06)))
 (setf (gethash (lit "aamatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A3E)))
 (setf (gethash (lit "aarusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3303)))
 (setf (gethash (lit "aavowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09BE)))
 (setf (gethash (lit "aavowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x093E)))
 (setf (gethash (lit "aavowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ABE)))
 (setf (gethash (lit "abbreviationmarkarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055F)))
 (setf (gethash (lit "abbreviationsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0970)))
 (setf (gethash (lit "abengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0985)))
 (setf (gethash (lit "abopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311A)))
 (setf (gethash (lit "abreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0103)))
 (setf (gethash (lit "abreveacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAF)))
 (setf (gethash (lit "abrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D1)))
 (setf (gethash (lit "abrevedotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB7)))
 (setf (gethash (lit "abrevegrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB1)))
 (setf (gethash (lit "abrevehookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB3)))
 (setf (gethash (lit "abrevetilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB5)))
 (setf (gethash (lit "acaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01CE)))
 (setf (gethash (lit "acircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D0)))
 (setf (gethash (lit "acircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E2)))
 (setf (gethash (lit "acircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA5)))
 (setf (gethash (lit "acircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAD)))
 (setf (gethash (lit "acircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA7)))
 (setf (gethash (lit "acircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA9)))
 (setf (gethash (lit "acircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EAB)))
 (setf (gethash (lit "acute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B4)))
 (setf (gethash (lit "acutebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0317)))
 (setf (gethash (lit "acutecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0301)))
 (setf (gethash (lit "acutecomb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0301)))
 (setf (gethash (lit "acutedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0954)))
 (setf (gethash (lit "acutelowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CF)))
 (setf (gethash (lit "acutetonecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0341)))
 (setf (gethash (lit "acyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0430)))
 (setf (gethash (lit "adblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0201)))
 (setf (gethash (lit "addakgurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A71)))
 (setf (gethash (lit "adeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0905)))
 (setf (gethash (lit "adieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E4)))
 (setf (gethash (lit "adieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D3)))
 (setf (gethash (lit "adieresismacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DF)))
 (setf (gethash (lit "adotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA1)))
 (setf (gethash (lit "adotmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E1)))
 (setf (gethash (lit "ae") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E6)))
 (setf (gethash (lit "aeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FD)))
 (setf (gethash (lit "aekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3150)))
 (setf (gethash (lit "aemacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E3)))
 (setf (gethash (lit "afii00208") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2015)))
 (setf (gethash (lit "afii08941") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A4)))
 (setf (gethash (lit "afii10017") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0410)))
 (setf (gethash (lit "afii10018") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0411)))
 (setf (gethash (lit "afii10019") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0412)))
 (setf (gethash (lit "afii10020") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0413)))
 (setf (gethash (lit "afii10021") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0414)))
 (setf (gethash (lit "afii10022") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0415)))
 (setf (gethash (lit "afii10023") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0401)))
 (setf (gethash (lit "afii10024") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0416)))
 (setf (gethash (lit "afii10025") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0417)))
 (setf (gethash (lit "afii10026") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0418)))
 (setf (gethash (lit "afii10027") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0419)))
 (setf (gethash (lit "afii10028") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041A)))
 (setf (gethash (lit "afii10029") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041B)))
 (setf (gethash (lit "afii10030") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041C)))
 (setf (gethash (lit "afii10031") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041D)))
 (setf (gethash (lit "afii10032") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041E)))
 (setf (gethash (lit "afii10033") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x041F)))
 (setf (gethash (lit "afii10034") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0420)))
 (setf (gethash (lit "afii10035") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0421)))
 (setf (gethash (lit "afii10036") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0422)))
 (setf (gethash (lit "afii10037") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0423)))
 (setf (gethash (lit "afii10038") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0424)))
 (setf (gethash (lit "afii10039") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0425)))
 (setf (gethash (lit "afii10040") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0426)))
 (setf (gethash (lit "afii10041") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0427)))
 (setf (gethash (lit "afii10042") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0428)))
 (setf (gethash (lit "afii10043") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0429)))
 (setf (gethash (lit "afii10044") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042A)))
 (setf (gethash (lit "afii10045") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042B)))
 (setf (gethash (lit "afii10046") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042C)))
 (setf (gethash (lit "afii10047") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042D)))
 (setf (gethash (lit "afii10048") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042E)))
 (setf (gethash (lit "afii10049") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x042F)))
 (setf (gethash (lit "afii10050") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0490)))
 (setf (gethash (lit "afii10051") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0402)))
 (setf (gethash (lit "afii10052") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0403)))
 (setf (gethash (lit "afii10053") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0404)))
 (setf (gethash (lit "afii10054") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0405)))
 (setf (gethash (lit "afii10055") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0406)))
 (setf (gethash (lit "afii10056") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0407)))
 (setf (gethash (lit "afii10057") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0408)))
 (setf (gethash (lit "afii10058") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0409)))
 (setf (gethash (lit "afii10059") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040A)))
 (setf (gethash (lit "afii10060") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040B)))
 (setf (gethash (lit "afii10061") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040C)))
 (setf (gethash (lit "afii10062") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040E)))
 (setf (gethash (lit "afii10063") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C4)))
 (setf (gethash (lit "afii10064") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C5)))
 (setf (gethash (lit "afii10065") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0430)))
 (setf (gethash (lit "afii10066") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0431)))
 (setf (gethash (lit "afii10067") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0432)))
 (setf (gethash (lit "afii10068") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0433)))
 (setf (gethash (lit "afii10069") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0434)))
 (setf (gethash (lit "afii10070") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0435)))
 (setf (gethash (lit "afii10071") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0451)))
 (setf (gethash (lit "afii10072") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0436)))
 (setf (gethash (lit "afii10073") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0437)))
 (setf (gethash (lit "afii10074") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0438)))
 (setf (gethash (lit "afii10075") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0439)))
 (setf (gethash (lit "afii10076") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043A)))
 (setf (gethash (lit "afii10077") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043B)))
 (setf (gethash (lit "afii10078") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043C)))
 (setf (gethash (lit "afii10079") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043D)))
 (setf (gethash (lit "afii10080") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043E)))
 (setf (gethash (lit "afii10081") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043F)))
 (setf (gethash (lit "afii10082") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0440)))
 (setf (gethash (lit "afii10083") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0441)))
 (setf (gethash (lit "afii10084") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0442)))
 (setf (gethash (lit "afii10085") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0443)))
 (setf (gethash (lit "afii10086") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0444)))
 (setf (gethash (lit "afii10087") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0445)))
 (setf (gethash (lit "afii10088") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0446)))
 (setf (gethash (lit "afii10089") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0447)))
 (setf (gethash (lit "afii10090") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0448)))
 (setf (gethash (lit "afii10091") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0449)))
 (setf (gethash (lit "afii10092") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044A)))
 (setf (gethash (lit "afii10093") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044B)))
 (setf (gethash (lit "afii10094") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044C)))
 (setf (gethash (lit "afii10095") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044D)))
 (setf (gethash (lit "afii10096") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044E)))
 (setf (gethash (lit "afii10097") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044F)))
 (setf (gethash (lit "afii10098") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0491)))
 (setf (gethash (lit "afii10099") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0452)))
 (setf (gethash (lit "afii10100") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0453)))
 (setf (gethash (lit "afii10101") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0454)))
 (setf (gethash (lit "afii10102") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0455)))
 (setf (gethash (lit "afii10103") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0456)))
 (setf (gethash (lit "afii10104") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0457)))
 (setf (gethash (lit "afii10105") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0458)))
 (setf (gethash (lit "afii10106") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0459)))
 (setf (gethash (lit "afii10107") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045A)))
 (setf (gethash (lit "afii10108") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045B)))
 (setf (gethash (lit "afii10109") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045C)))
 (setf (gethash (lit "afii10110") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045E)))
 (setf (gethash (lit "afii10145") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x040F)))
 (setf (gethash (lit "afii10146") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0462)))
 (setf (gethash (lit "afii10147") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0472)))
 (setf (gethash (lit "afii10148") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0474)))
 (setf (gethash (lit "afii10192") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C6)))
 (setf (gethash (lit "afii10193") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045F)))
 (setf (gethash (lit "afii10194") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0463)))
 (setf (gethash (lit "afii10195") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0473)))
 (setf (gethash (lit "afii10196") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0475)))
 (setf (gethash (lit "afii10831") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C7)))
 (setf (gethash (lit "afii10832") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C8)))
 (setf (gethash (lit "afii10846") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D9)))
 (setf (gethash (lit "afii299") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200E)))
 (setf (gethash (lit "afii300") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200F)))
 (setf (gethash (lit "afii301") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200D)))
 (setf (gethash (lit "afii57381") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066A)))
 (setf (gethash (lit "afii57388") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x060C)))
 (setf (gethash (lit "afii57392") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0660)))
 (setf (gethash (lit "afii57393") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0661)))
 (setf (gethash (lit "afii57394") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0662)))
 (setf (gethash (lit "afii57395") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0663)))
 (setf (gethash (lit "afii57396") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0664)))
 (setf (gethash (lit "afii57397") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0665)))
 (setf (gethash (lit "afii57398") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0666)))
 (setf (gethash (lit "afii57399") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0667)))
 (setf (gethash (lit "afii57400") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0668)))
 (setf (gethash (lit "afii57401") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0669)))
 (setf (gethash (lit "afii57403") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x061B)))
 (setf (gethash (lit "afii57407") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x061F)))
 (setf (gethash (lit "afii57409") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)))
 (setf (gethash (lit "afii57410") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0622)))
 (setf (gethash (lit "afii57411") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0623)))
 (setf (gethash (lit "afii57412") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0624)))
 (setf (gethash (lit "afii57413") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0625)))
 (setf (gethash (lit "afii57414") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0626)))
 (setf (gethash (lit "afii57415") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0627)))
 (setf (gethash (lit "afii57416") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0628)))
 (setf (gethash (lit "afii57417") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0629)))
 (setf (gethash (lit "afii57418") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062A)))
 (setf (gethash (lit "afii57419") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062B)))
 (setf (gethash (lit "afii57420") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062C)))
 (setf (gethash (lit "afii57421") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062D)))
 (setf (gethash (lit "afii57422") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062E)))
 (setf (gethash (lit "afii57423") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062F)))
 (setf (gethash (lit "afii57424") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0630)))
 (setf (gethash (lit "afii57425") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0631)))
 (setf (gethash (lit "afii57426") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0632)))
 (setf (gethash (lit "afii57427") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0633)))
 (setf (gethash (lit "afii57428") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0634)))
 (setf (gethash (lit "afii57429") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0635)))
 (setf (gethash (lit "afii57430") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0636)))
 (setf (gethash (lit "afii57431") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0637)))
 (setf (gethash (lit "afii57432") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0638)))
 (setf (gethash (lit "afii57433") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0639)))
 (setf (gethash (lit "afii57434") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x063A)))
 (setf (gethash (lit "afii57440") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0640)))
 (setf (gethash (lit "afii57441") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0641)))
 (setf (gethash (lit "afii57442") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0642)))
 (setf (gethash (lit "afii57443") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0643)))
 (setf (gethash (lit "afii57444") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0644)))
 (setf (gethash (lit "afii57445") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0645)))
 (setf (gethash (lit "afii57446") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0646)))
 (setf (gethash (lit "afii57448") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0648)))
 (setf (gethash (lit "afii57449") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0649)))
 (setf (gethash (lit "afii57450") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064A)))
 (setf (gethash (lit "afii57451") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064B)))
 (setf (gethash (lit "afii57452") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064C)))
 (setf (gethash (lit "afii57453") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064D)))
 (setf (gethash (lit "afii57454") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064E)))
 (setf (gethash (lit "afii57455") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064F)))
 (setf (gethash (lit "afii57456") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0650)))
 (setf (gethash (lit "afii57457") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0651)))
 (setf (gethash (lit "afii57458") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0652)))
 (setf (gethash (lit "afii57470") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0647)))
 (setf (gethash (lit "afii57505") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06A4)))
 (setf (gethash (lit "afii57506") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x067E)))
 (setf (gethash (lit "afii57507") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0686)))
 (setf (gethash (lit "afii57508") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0698)))
 (setf (gethash (lit "afii57509") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06AF)))
 (setf (gethash (lit "afii57511") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0679)))
 (setf (gethash (lit "afii57512") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0688)))
 (setf (gethash (lit "afii57513") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0691)))
 (setf (gethash (lit "afii57514") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06BA)))
 (setf (gethash (lit "afii57519") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06D2)))
 (setf (gethash (lit "afii57534") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06D5)))
 (setf (gethash (lit "afii57636") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AA)))
 (setf (gethash (lit "afii57645") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BE)))
 (setf (gethash (lit "afii57658") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C3)))
 (setf (gethash (lit "afii57664") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D0)))
 (setf (gethash (lit "afii57665") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D1)))
 (setf (gethash (lit "afii57666") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D2)))
 (setf (gethash (lit "afii57667") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)))
 (setf (gethash (lit "afii57668") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D4)))
 (setf (gethash (lit "afii57669") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D5)))
 (setf (gethash (lit "afii57670") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D6)))
 (setf (gethash (lit "afii57671") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D7)))
 (setf (gethash (lit "afii57672") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D8)))
 (setf (gethash (lit "afii57673") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D9)))
 (setf (gethash (lit "afii57674") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)))
 (setf (gethash (lit "afii57675") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DB)))
 (setf (gethash (lit "afii57676") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)))
 (setf (gethash (lit "afii57677") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DD)))
 (setf (gethash (lit "afii57678") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DE)))
 (setf (gethash (lit "afii57679") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DF)))
 (setf (gethash (lit "afii57680") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E0)))
 (setf (gethash (lit "afii57681") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E1)))
 (setf (gethash (lit "afii57682") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E2)))
 (setf (gethash (lit "afii57683") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E3)))
 (setf (gethash (lit "afii57684") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E4)))
 (setf (gethash (lit "afii57685") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E5)))
 (setf (gethash (lit "afii57686") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E6)))
 (setf (gethash (lit "afii57687") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)))
 (setf (gethash (lit "afii57688") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)))
 (setf (gethash (lit "afii57689") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E9)))
 (setf (gethash (lit "afii57690") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05EA)))
 (setf (gethash (lit "afii57694") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2A)))
 (setf (gethash (lit "afii57695") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2B)))
 (setf (gethash (lit "afii57700") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4B)))
 (setf (gethash (lit "afii57705") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB1F)))
 (setf (gethash (lit "afii57716") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F0)))
 (setf (gethash (lit "afii57717") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F1)))
 (setf (gethash (lit "afii57718") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F2)))
 (setf (gethash (lit "afii57723") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB35)))
 (setf (gethash (lit "afii57793") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "afii57794") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "afii57795") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "afii57796") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "afii57797") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "afii57798") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "afii57799") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "afii57800") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "afii57801") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "afii57802") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "afii57803") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C2)))
 (setf (gethash (lit "afii57804") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C1)))
 (setf (gethash (lit "afii57806") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "afii57807") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BC)))
 (setf (gethash (lit "afii57839") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BD)))
 (setf (gethash (lit "afii57841") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BF)))
 (setf (gethash (lit "afii57842") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C0)))
 (setf (gethash (lit "afii57929") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BC)))
 (setf (gethash (lit "afii61248") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2105)))
 (setf (gethash (lit "afii61289") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2113)))
 (setf (gethash (lit "afii61352") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2116)))
 (setf (gethash (lit "afii61573") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x202C)))
 (setf (gethash (lit "afii61574") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x202D)))
 (setf (gethash (lit "afii61575") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x202E)))
 (setf (gethash (lit "afii61664") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200C)))
 (setf (gethash (lit "afii63167") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066D)))
 (setf (gethash (lit "afii64937") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BD)))
 (setf (gethash (lit "agrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E0)))
 (setf (gethash (lit "agujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A85)))
 (setf (gethash (lit "agurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A05)))
 (setf (gethash (lit "ahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3042)))
 (setf (gethash (lit "ahookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EA3)))
 (setf (gethash (lit "aibengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0990)))
 (setf (gethash (lit "aibopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311E)))
 (setf (gethash (lit "aideva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0910)))
 (setf (gethash (lit "aiecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D5)))
 (setf (gethash (lit "aigujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A90)))
 (setf (gethash (lit "aigurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A10)))
 (setf (gethash (lit "aimatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A48)))
 (setf (gethash (lit "ainarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0639)))
 (setf (gethash (lit "ainfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFECA)))
 (setf (gethash (lit "aininitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFECB)))
 (setf (gethash (lit "ainmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFECC)))
 (setf (gethash (lit "ainvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0203)))
 (setf (gethash (lit "aivowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C8)))
 (setf (gethash (lit "aivowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0948)))
 (setf (gethash (lit "aivowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC8)))
 (setf (gethash (lit "akatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A2)))
 (setf (gethash (lit "akatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF71)))
 (setf (gethash (lit "akorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314F)))
 (setf (gethash (lit "alef") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D0)))
 (setf (gethash (lit "alefarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0627)))
 (setf (gethash (lit "alefdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB30)))
 (setf (gethash (lit "aleffinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE8E)))
 (setf (gethash (lit "alefhamzaabovearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0623)))
 (setf (gethash (lit "alefhamzaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE84)))
 (setf (gethash (lit "alefhamzabelowarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0625)))
 (setf (gethash (lit "alefhamzabelowfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE88)))
 (setf (gethash (lit "alefhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D0)))
 (setf (gethash (lit "aleflamedhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4F)))
 (setf (gethash (lit "alefmaddaabovearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0622)))
 (setf (gethash (lit "alefmaddaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE82)))
 (setf (gethash (lit "alefmaksuraarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0649)))
 (setf (gethash (lit "alefmaksurafinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF0)))
 (setf (gethash (lit "alefmaksurainitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF3)))
 (setf (gethash (lit "alefmaksuramedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF4)))
 (setf (gethash (lit "alefpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2E)))
 (setf (gethash (lit "alefqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2F)))
 (setf (gethash (lit "aleph") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2135)))
 (setf (gethash (lit "allequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x224C)))
 (setf (gethash (lit "alpha") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B1)))
 (setf (gethash (lit "alphatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AC)))
 (setf (gethash (lit "amacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0101)))
 (setf (gethash (lit "amonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF41)))
 (setf (gethash (lit "ampersand") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0026)))
 (setf (gethash (lit "ampersandmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF06)))
 (setf (gethash (lit "ampersandsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF726)))
 (setf (gethash (lit "amsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C2)))
 (setf (gethash (lit "anbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3122)))
 (setf (gethash (lit "angbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3124)))
 (setf (gethash (lit "angkhankhuthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E5A)))
 (setf (gethash (lit "angle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2220)))
 (setf (gethash (lit "anglebracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3008)))
 (setf (gethash (lit "anglebracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3F)))
 (setf (gethash (lit "anglebracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3009)))
 (setf (gethash (lit "anglebracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE40)))
 (setf (gethash (lit "angleleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2329)))
 (setf (gethash (lit "angleright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x232A)))
 (setf (gethash (lit "angstrom") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x212B)))
 (setf (gethash (lit "anoteleia") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0387)))
 (setf (gethash (lit "anudattadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0952)))
 (setf (gethash (lit "anusvarabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0982)))
 (setf (gethash (lit "anusvaradeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0902)))
 (setf (gethash (lit "anusvaragujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A82)))
 (setf (gethash (lit "aogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0105)))
 (setf (gethash (lit "apaatosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3300)))
 (setf (gethash (lit "aparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249C)))
 (setf (gethash (lit "apostrophearmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055A)))
 (setf (gethash (lit "apostrophemod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BC)))
 (setf (gethash (lit "apple") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FF)))
 (setf (gethash (lit "approaches") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2250)))
 (setf (gethash (lit "approxequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2248)))
 (setf (gethash (lit "approxequalorimage") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2252)))
 (setf (gethash (lit "approximatelyequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2245)))
 (setf (gethash (lit "araeaekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x318E)))
 (setf (gethash (lit "araeakorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x318D)))
 (setf (gethash (lit "arc") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2312)))
 (setf (gethash (lit "arighthalfring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E9A)))
 (setf (gethash (lit "aring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E5)))
 (setf (gethash (lit "aringacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FB)))
 (setf (gethash (lit "aringbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E01)))
 (setf (gethash (lit "arrowboth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2194)))
 (setf (gethash (lit "arrowdashdown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E3)))
 (setf (gethash (lit "arrowdashleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E0)))
 (setf (gethash (lit "arrowdashright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E2)))
 (setf (gethash (lit "arrowdashup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E1)))
 (setf (gethash (lit "arrowdblboth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D4)))
 (setf (gethash (lit "arrowdbldown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D3)))
 (setf (gethash (lit "arrowdblleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D0)))
 (setf (gethash (lit "arrowdblright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D2)))
 (setf (gethash (lit "arrowdblup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D1)))
 (setf (gethash (lit "arrowdown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2193)))
 (setf (gethash (lit "arrowdownleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2199)))
 (setf (gethash (lit "arrowdownright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2198)))
 (setf (gethash (lit "arrowdownwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E9)))
 (setf (gethash (lit "arrowheaddownmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C5)))
 (setf (gethash (lit "arrowheadleftmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C2)))
 (setf (gethash (lit "arrowheadrightmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C3)))
 (setf (gethash (lit "arrowheadupmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C4)))
 (setf (gethash (lit "arrowhorizex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8E7)))
 (setf (gethash (lit "arrowleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2190)))
 (setf (gethash (lit "arrowleftdbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D0)))
 (setf (gethash (lit "arrowleftdblstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21CD)))
 (setf (gethash (lit "arrowleftoverright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21C6)))
 (setf (gethash (lit "arrowleftwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E6)))
 (setf (gethash (lit "arrowright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2192)))
 (setf (gethash (lit "arrowrightdblstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21CF)))
 (setf (gethash (lit "arrowrightheavy") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x279E)))
 (setf (gethash (lit "arrowrightoverleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21C4)))
 (setf (gethash (lit "arrowrightwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E8)))
 (setf (gethash (lit "arrowtableft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E4)))
 (setf (gethash (lit "arrowtabright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E5)))
 (setf (gethash (lit "arrowup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2191)))
 (setf (gethash (lit "arrowupdn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2195)))
 (setf (gethash (lit "arrowupdnbse") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21A8)))
 (setf (gethash (lit "arrowupdownbase") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21A8)))
 (setf (gethash (lit "arrowupleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2196)))
 (setf (gethash (lit "arrowupleftofdown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21C5)))
 (setf (gethash (lit "arrowupright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2197)))
 (setf (gethash (lit "arrowupwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21E7)))
 (setf (gethash (lit "arrowvertex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8E6)))
 (setf (gethash (lit "asciicircum") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005E)))
 (setf (gethash (lit "asciicircummonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3E)))
 (setf (gethash (lit "asciitilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007E)))
 (setf (gethash (lit "asciitildemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF5E)))
 (setf (gethash (lit "ascript") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0251)))
 (setf (gethash (lit "ascriptturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0252)))
 (setf (gethash (lit "asmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3041)))
 (setf (gethash (lit "asmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A1)))
 (setf (gethash (lit "asmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF67)))
 (setf (gethash (lit "asterisk") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002A)))
 (setf (gethash (lit "asteriskaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066D)))
 (setf (gethash (lit "asteriskarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066D)))
 (setf (gethash (lit "asteriskmath") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2217)))
 (setf (gethash (lit "asteriskmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0A)))
 (setf (gethash (lit "asterisksmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE61)))
 (setf (gethash (lit "asterism") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2042)))
 (setf (gethash (lit "asuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E9)))
 (setf (gethash (lit "asymptoticallyequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2243)))
 (setf (gethash (lit "at") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0040)))
 (setf (gethash (lit "atilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E3)))
 (setf (gethash (lit "atmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF20)))
 (setf (gethash (lit "atsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE6B)))
 (setf (gethash (lit "aturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0250)))
 (setf (gethash (lit "aubengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0994)))
 (setf (gethash (lit "aubopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3120)))
 (setf (gethash (lit "audeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0914)))
 (setf (gethash (lit "augujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A94)))
 (setf (gethash (lit "augurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A14)))
 (setf (gethash (lit "aulengthmarkbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09D7)))
 (setf (gethash (lit "aumatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A4C)))
 (setf (gethash (lit "auvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09CC)))
 (setf (gethash (lit "auvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x094C)))
 (setf (gethash (lit "auvowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ACC)))
 (setf (gethash (lit "avagrahadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x093D)))
 (setf (gethash (lit "aybarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0561)))
 (setf (gethash (lit "ayin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E2)))
 (setf (gethash (lit "ayinaltonehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB20)))
 (setf (gethash (lit "ayinhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E2)))
 (setf (gethash (lit "b") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0062)))
 (setf (gethash (lit "babengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AC)))
 (setf (gethash (lit "backslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005C)))
 (setf (gethash (lit "backslashmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3C)))
 (setf (gethash (lit "badeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092C)))
 (setf (gethash (lit "bagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAC)))
 (setf (gethash (lit "bagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2C)))
 (setf (gethash (lit "bahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3070)))
 (setf (gethash (lit "bahtthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E3F)))
 (setf (gethash (lit "bakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D0)))
 (setf (gethash (lit "bar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007C)))
 (setf (gethash (lit "barmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF5C)))
 (setf (gethash (lit "bbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3105)))
 (setf (gethash (lit "bcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D1)))
 (setf (gethash (lit "bdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E03)))
 (setf (gethash (lit "bdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E05)))
 (setf (gethash (lit "beamedsixteenthnotes") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266C)))
 (setf (gethash (lit "because") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2235)))
 (setf (gethash (lit "becyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0431)))
 (setf (gethash (lit "beharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0628)))
 (setf (gethash (lit "behfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE90)))
 (setf (gethash (lit "behinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE91)))
 (setf (gethash (lit "behiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3079)))
 (setf (gethash (lit "behmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE92)))
 (setf (gethash (lit "behmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC9F)))
 (setf (gethash (lit "behmeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC08)))
 (setf (gethash (lit "behnoonfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC6D)))
 (setf (gethash (lit "bekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D9)))
 (setf (gethash (lit "benarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0562)))
 (setf (gethash (lit "bet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D1)))
 (setf (gethash (lit "beta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B2)))
 (setf (gethash (lit "betasymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D0)))
 (setf (gethash (lit "betdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB31)))
 (setf (gethash (lit "betdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB31)))
 (setf (gethash (lit "bethebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D1)))
 (setf (gethash (lit "betrafehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4C)))
 (setf (gethash (lit "bhabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AD)))
 (setf (gethash (lit "bhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092D)))
 (setf (gethash (lit "bhagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAD)))
 (setf (gethash (lit "bhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2D)))
 (setf (gethash (lit "bhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0253)))
 (setf (gethash (lit "bihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3073)))
 (setf (gethash (lit "bikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D3)))
 (setf (gethash (lit "bilabialclick") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0298)))
 (setf (gethash (lit "bindigurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A02)))
 (setf (gethash (lit "birusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3331)))
 (setf (gethash (lit "blackcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CF)))
 (setf (gethash (lit "blackdiamond") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C6)))
 (setf (gethash (lit "blackdownpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BC)))
 (setf (gethash (lit "blackleftpointingpointer") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C4)))
 (setf (gethash (lit "blackleftpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C0)))
 (setf (gethash (lit "blacklenticularbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3010)))
 (setf (gethash (lit "blacklenticularbracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3B)))
 (setf (gethash (lit "blacklenticularbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3011)))
 (setf (gethash (lit "blacklenticularbracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3C)))
 (setf (gethash (lit "blacklowerlefttriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E3)))
 (setf (gethash (lit "blacklowerrighttriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E2)))
 (setf (gethash (lit "blackrectangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AC)))
 (setf (gethash (lit "blackrightpointingpointer") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BA)))
 (setf (gethash (lit "blackrightpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B6)))
 (setf (gethash (lit "blacksmallsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AA)))
 (setf (gethash (lit "blacksmilingface") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263B)))
 (setf (gethash (lit "blacksquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A0)))
 (setf (gethash (lit "blackstar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2605)))
 (setf (gethash (lit "blackupperlefttriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E4)))
 (setf (gethash (lit "blackupperrighttriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E5)))
 (setf (gethash (lit "blackuppointingsmalltriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B4)))
 (setf (gethash (lit "blackuppointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B2)))
 (setf (gethash (lit "blank") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2423)))
 (setf (gethash (lit "blinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E07)))
 (setf (gethash (lit "block") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2588)))
 (setf (gethash (lit "bmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF42)))
 (setf (gethash (lit "bobaimaithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1A)))
 (setf (gethash (lit "bohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307C)))
 (setf (gethash (lit "bokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DC)))
 (setf (gethash (lit "bparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249D)))
 (setf (gethash (lit "bqsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C3)))
 (setf (gethash (lit "braceex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F4)))
 (setf (gethash (lit "braceleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007B)))
 (setf (gethash (lit "braceleftbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F3)))
 (setf (gethash (lit "braceleftmid") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F2)))
 (setf (gethash (lit "braceleftmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF5B)))
 (setf (gethash (lit "braceleftsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5B)))
 (setf (gethash (lit "bracelefttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F1)))
 (setf (gethash (lit "braceleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE37)))
 (setf (gethash (lit "braceright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007D)))
 (setf (gethash (lit "bracerightbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FE)))
 (setf (gethash (lit "bracerightmid") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FD)))
 (setf (gethash (lit "bracerightmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF5D)))
 (setf (gethash (lit "bracerightsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5C)))
 (setf (gethash (lit "bracerighttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FC)))
 (setf (gethash (lit "bracerightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE38)))
 (setf (gethash (lit "bracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005B)))
 (setf (gethash (lit "bracketleftbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F0)))
 (setf (gethash (lit "bracketleftex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8EF)))
 (setf (gethash (lit "bracketleftmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3B)))
 (setf (gethash (lit "bracketlefttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8EE)))
 (setf (gethash (lit "bracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005D)))
 (setf (gethash (lit "bracketrightbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FB)))
 (setf (gethash (lit "bracketrightex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8FA)))
 (setf (gethash (lit "bracketrightmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3D)))
 (setf (gethash (lit "bracketrighttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F9)))
 (setf (gethash (lit "breve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D8)))
 (setf (gethash (lit "brevebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032E)))
 (setf (gethash (lit "brevecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0306)))
 (setf (gethash (lit "breveinvertedbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032F)))
 (setf (gethash (lit "breveinvertedcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0311)))
 (setf (gethash (lit "breveinverteddoublecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0361)))
 (setf (gethash (lit "bridgebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032A)))
 (setf (gethash (lit "bridgeinvertedbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033A)))
 (setf (gethash (lit "brokenbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A6)))
 (setf (gethash (lit "bstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0180)))
 (setf (gethash (lit "bsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6EA)))
 (setf (gethash (lit "btopbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0183)))
 (setf (gethash (lit "buhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3076)))
 (setf (gethash (lit "bukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D6)))
 (setf (gethash (lit "bullet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2022)))
 (setf (gethash (lit "bulletinverse") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D8)))
 (setf (gethash (lit "bulletoperator") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2219)))
 (setf (gethash (lit "bullseye") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CE)))
 (setf (gethash (lit "c") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0063)))
 (setf (gethash (lit "caarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056E)))
 (setf (gethash (lit "cabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099A)))
 (setf (gethash (lit "cacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0107)))
 (setf (gethash (lit "cadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091A)))
 (setf (gethash (lit "cagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9A)))
 (setf (gethash (lit "cagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1A)))
 (setf (gethash (lit "calsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3388)))
 (setf (gethash (lit "candrabindubengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0981)))
 (setf (gethash (lit "candrabinducmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0310)))
 (setf (gethash (lit "candrabindudeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0901)))
 (setf (gethash (lit "candrabindugujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A81)))
 (setf (gethash (lit "capslock") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21EA)))
 (setf (gethash (lit "careof") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2105)))
 (setf (gethash (lit "caron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C7)))
 (setf (gethash (lit "caronbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032C)))
 (setf (gethash (lit "caroncmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030C)))
 (setf (gethash (lit "carriagereturn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21B5)))
 (setf (gethash (lit "cbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3118)))
 (setf (gethash (lit "ccaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010D)))
 (setf (gethash (lit "ccedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E7)))
 (setf (gethash (lit "ccedillaacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E09)))
 (setf (gethash (lit "ccircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D2)))
 (setf (gethash (lit "ccircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0109)))
 (setf (gethash (lit "ccurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0255)))
 (setf (gethash (lit "cdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010B)))
 (setf (gethash (lit "cdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010B)))
 (setf (gethash (lit "cdsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C5)))
 (setf (gethash (lit "cedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B8)))
 (setf (gethash (lit "cedillacmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0327)))
 (setf (gethash (lit "cent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A2)))
 (setf (gethash (lit "centigrade") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2103)))
 (setf (gethash (lit "centinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DF)))
 (setf (gethash (lit "centmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFFE0)))
 (setf (gethash (lit "centoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7A2)))
 (setf (gethash (lit "centsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E0)))
 (setf (gethash (lit "chaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0579)))
 (setf (gethash (lit "chabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099B)))
 (setf (gethash (lit "chadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091B)))
 (setf (gethash (lit "chagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9B)))
 (setf (gethash (lit "chagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1B)))
 (setf (gethash (lit "chbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3114)))
 (setf (gethash (lit "cheabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BD)))
 (setf (gethash (lit "checkmark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2713)))
 (setf (gethash (lit "checyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0447)))
 (setf (gethash (lit "chedescenderabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BF)))
 (setf (gethash (lit "chedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B7)))
 (setf (gethash (lit "chedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F5)))
 (setf (gethash (lit "cheharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0573)))
 (setf (gethash (lit "chekhakassiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04CC)))
 (setf (gethash (lit "cheverticalstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B9)))
 (setf (gethash (lit "chi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C7)))
 (setf (gethash (lit "chieuchacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3277)))
 (setf (gethash (lit "chieuchaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3217)))
 (setf (gethash (lit "chieuchcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3269)))
 (setf (gethash (lit "chieuchkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314A)))
 (setf (gethash (lit "chieuchparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3209)))
 (setf (gethash (lit "chochangthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0A)))
 (setf (gethash (lit "chochanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E08)))
 (setf (gethash (lit "chochingthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E09)))
 (setf (gethash (lit "chochoethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0C)))
 (setf (gethash (lit "chook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0188)))
 (setf (gethash (lit "cieucacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3276)))
 (setf (gethash (lit "cieucaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3216)))
 (setf (gethash (lit "cieuccirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3268)))
 (setf (gethash (lit "cieuckorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3148)))
 (setf (gethash (lit "cieucparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3208)))
 (setf (gethash (lit "cieucuparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x321C)))
 (setf (gethash (lit "circle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CB)))
 (setf (gethash (lit "circlemultiply") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2297)))
 (setf (gethash (lit "circleot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2299)))
 (setf (gethash (lit "circleplus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2295)))
 (setf (gethash (lit "circlepostalmark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3036)))
 (setf (gethash (lit "circlewithlefthalfblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D0)))
 (setf (gethash (lit "circlewithrighthalfblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D1)))
 (setf (gethash (lit "circumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C6)))
 (setf (gethash (lit "circumflexbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032D)))
 (setf (gethash (lit "circumflexcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0302)))
 (setf (gethash (lit "clear") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2327)))
 (setf (gethash (lit "clickalveolar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C2)))
 (setf (gethash (lit "clickdental") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C0)))
 (setf (gethash (lit "clicklateral") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C1)))
 (setf (gethash (lit "clickretroflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C3)))
 (setf (gethash (lit "club") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2663)))
 (setf (gethash (lit "clubsuitblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2663)))
 (setf (gethash (lit "clubsuitwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2667)))
 (setf (gethash (lit "cmcubedsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A4)))
 (setf (gethash (lit "cmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF43)))
 (setf (gethash (lit "cmsquaredsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A0)))
 (setf (gethash (lit "coarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0581)))
 (setf (gethash (lit "colon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003A)))
 (setf (gethash (lit "colonmonetary") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A1)))
 (setf (gethash (lit "colonmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1A)))
 (setf (gethash (lit "colonsign") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A1)))
 (setf (gethash (lit "colonsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE55)))
 (setf (gethash (lit "colontriangularhalfmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D1)))
 (setf (gethash (lit "colontriangularmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D0)))
 (setf (gethash (lit "comma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002C)))
 (setf (gethash (lit "commaabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0313)))
 (setf (gethash (lit "commaaboverightcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0315)))
 (setf (gethash (lit "commaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C3)))
 (setf (gethash (lit "commaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x060C)))
 (setf (gethash (lit "commaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055D)))
 (setf (gethash (lit "commainferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E1)))
 (setf (gethash (lit "commamonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0C)))
 (setf (gethash (lit "commareversedabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0314)))
 (setf (gethash (lit "commareversedmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BD)))
 (setf (gethash (lit "commasmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE50)))
 (setf (gethash (lit "commasuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E2)))
 (setf (gethash (lit "commaturnedabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0312)))
 (setf (gethash (lit "commaturnedmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BB)))
 (setf (gethash (lit "compass") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263C)))
 (setf (gethash (lit "congruent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2245)))
 (setf (gethash (lit "contourintegral") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x222E)))
 (setf (gethash (lit "control") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2303)))
 (setf (gethash (lit "controlACK") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0006)))
 (setf (gethash (lit "controlBEL") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0007)))
 (setf (gethash (lit "controlBS") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0008)))
 (setf (gethash (lit "controlCAN") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0018)))
 (setf (gethash (lit "controlCR") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000D)))
 (setf (gethash (lit "controlDC1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0011)))
 (setf (gethash (lit "controlDC2") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0012)))
 (setf (gethash (lit "controlDC3") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0013)))
 (setf (gethash (lit "controlDC4") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0014)))
 (setf (gethash (lit "controlDEL") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007F)))
 (setf (gethash (lit "controlDLE") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0010)))
 (setf (gethash (lit "controlEM") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0019)))
 (setf (gethash (lit "controlENQ") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0005)))
 (setf (gethash (lit "controlEOT") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0004)))
 (setf (gethash (lit "controlESC") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001B)))
 (setf (gethash (lit "controlETB") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0017)))
 (setf (gethash (lit "controlETX") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0003)))
 (setf (gethash (lit "controlFF") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000C)))
 (setf (gethash (lit "controlFS") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001C)))
 (setf (gethash (lit "controlGS") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001D)))
 (setf (gethash (lit "controlHT") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0009)))
 (setf (gethash (lit "controlLF") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000A)))
 (setf (gethash (lit "controlNAK") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0015)))
 (setf (gethash (lit "controlRS") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001E)))
 (setf (gethash (lit "controlSI") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000F)))
 (setf (gethash (lit "controlSO") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000E)))
 (setf (gethash (lit "controlSOT") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0002)))
 (setf (gethash (lit "controlSTX") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0001)))
 (setf (gethash (lit "controlSUB") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001A)))
 (setf (gethash (lit "controlSYN") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0016)))
 (setf (gethash (lit "controlUS") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x001F)))
 (setf (gethash (lit "controlVT") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x000B)))
 (setf (gethash (lit "copyright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A9)))
 (setf (gethash (lit "copyrightsans") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8E9)))
 (setf (gethash (lit "copyrightserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D9)))
 (setf (gethash (lit "cornerbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300C)))
 (setf (gethash (lit "cornerbracketlefthalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF62)))
 (setf (gethash (lit "cornerbracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE41)))
 (setf (gethash (lit "cornerbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300D)))
 (setf (gethash (lit "cornerbracketrighthalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF63)))
 (setf (gethash (lit "cornerbracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE42)))
 (setf (gethash (lit "corporationsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x337F)))
 (setf (gethash (lit "cosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C7)))
 (setf (gethash (lit "coverkgsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C6)))
 (setf (gethash (lit "cparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249E)))
 (setf (gethash (lit "cruzeiro") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A2)))
 (setf (gethash (lit "cstretched") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0297)))
 (setf (gethash (lit "curlyand") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22CF)))
 (setf (gethash (lit "curlyor") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22CE)))
 (setf (gethash (lit "currency") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A4)))
 (setf (gethash (lit "cyrBreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D1)))
 (setf (gethash (lit "cyrFlex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D2)))
 (setf (gethash (lit "cyrbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D4)))
 (setf (gethash (lit "cyrflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D5)))
 (setf (gethash (lit "d") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0064)))
 (setf (gethash (lit "daarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0564)))
 (setf (gethash (lit "dabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A6)))
 (setf (gethash (lit "dadarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0636)))
 (setf (gethash (lit "dadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0926)))
 (setf (gethash (lit "dadfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEBE)))
 (setf (gethash (lit "dadinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEBF)))
 (setf (gethash (lit "dadmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC0)))
 (setf (gethash (lit "dagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BC)))
 (setf (gethash (lit "dageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BC)))
 (setf (gethash (lit "dagger") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2020)))
 (setf (gethash (lit "daggerdbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2021)))
 (setf (gethash (lit "dagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA6)))
 (setf (gethash (lit "dagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A26)))
 (setf (gethash (lit "dahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3060)))
 (setf (gethash (lit "dakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C0)))
 (setf (gethash (lit "dalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062F)))
 (setf (gethash (lit "dalet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)))
 (setf (gethash (lit "daletdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB33)))
 (setf (gethash (lit "daletdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB33)))
 (setf (gethash (lit "dalethatafpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B2)))
 (setf (gethash (lit "dalethatafpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B2)))
 (setf (gethash (lit "dalethatafsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B1)))
 (setf (gethash (lit "dalethatafsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B1)))
 (setf (gethash (lit "dalethebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)))
 (setf (gethash (lit "dalethiriq") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B4)))
 (setf (gethash (lit "dalethiriqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B4)))
 (setf (gethash (lit "daletholam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B9)))
 (setf (gethash (lit "daletholamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B9)))
 (setf (gethash (lit "daletpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B7)))
 (setf (gethash (lit "daletpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B7)))
 (setf (gethash (lit "daletqamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B8)))
 (setf (gethash (lit "daletqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B8)))
 (setf (gethash (lit "daletqubuts") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05BB)))
 (setf (gethash (lit "daletqubutshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05BB)))
 (setf (gethash (lit "daletsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B6)))
 (setf (gethash (lit "daletsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B6)))
 (setf (gethash (lit "daletsheva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B0)))
 (setf (gethash (lit "daletshevahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B0)))
 (setf (gethash (lit "dalettsere") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B5)))
 (setf (gethash (lit "dalettserehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D3)(code-char #x05B5)))
 (setf (gethash (lit "dalfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEAA)))
 (setf (gethash (lit "dammaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064F)))
 (setf (gethash (lit "dammalowarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064F)))
 (setf (gethash (lit "dammatanaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064C)))
 (setf (gethash (lit "dammatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064C)))
 (setf (gethash (lit "danda") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0964)))
 (setf (gethash (lit "dargahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A7)))
 (setf (gethash (lit "dargalefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A7)))
 (setf (gethash (lit "dasiapneumatacyrilliccmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0485)))
 (setf (gethash (lit "dblGrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D3)))
 (setf (gethash (lit "dblanglebracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300A)))
 (setf (gethash (lit "dblanglebracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3D)))
 (setf (gethash (lit "dblanglebracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300B)))
 (setf (gethash (lit "dblanglebracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3E)))
 (setf (gethash (lit "dblarchinvertedbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x032B)))
 (setf (gethash (lit "dblarrowleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D4)))
 (setf (gethash (lit "dblarrowright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21D2)))
 (setf (gethash (lit "dbldanda") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0965)))
 (setf (gethash (lit "dblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D6)))
 (setf (gethash (lit "dblgravecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030F)))
 (setf (gethash (lit "dblintegral") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x222C)))
 (setf (gethash (lit "dbllowline") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2017)))
 (setf (gethash (lit "dbllowlinecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0333)))
 (setf (gethash (lit "dbloverlinecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033F)))
 (setf (gethash (lit "dblprimemod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BA)))
 (setf (gethash (lit "dblverticalbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2016)))
 (setf (gethash (lit "dblverticallineabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030E)))
 (setf (gethash (lit "dbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3109)))
 (setf (gethash (lit "dbsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C8)))
 (setf (gethash (lit "dcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x010F)))
 (setf (gethash (lit "dcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E11)))
 (setf (gethash (lit "dcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D3)))
 (setf (gethash (lit "dcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E13)))
 (setf (gethash (lit "dcroat") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0111)))
 (setf (gethash (lit "ddabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A1)))
 (setf (gethash (lit "ddadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0921)))
 (setf (gethash (lit "ddagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA1)))
 (setf (gethash (lit "ddagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A21)))
 (setf (gethash (lit "ddalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0688)))
 (setf (gethash (lit "ddalfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB89)))
 (setf (gethash (lit "dddhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095C)))
 (setf (gethash (lit "ddhabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A2)))
 (setf (gethash (lit "ddhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0922)))
 (setf (gethash (lit "ddhagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA2)))
 (setf (gethash (lit "ddhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A22)))
 (setf (gethash (lit "ddotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0B)))
 (setf (gethash (lit "ddotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0D)))
 (setf (gethash (lit "decimalseparatorarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066B)))
 (setf (gethash (lit "decimalseparatorpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066B)))
 (setf (gethash (lit "decyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0434)))
 (setf (gethash (lit "degree") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B0)))
 (setf (gethash (lit "dehihebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AD)))
 (setf (gethash (lit "dehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3067)))
 (setf (gethash (lit "deicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03EF)))
 (setf (gethash (lit "dekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C7)))
 (setf (gethash (lit "deleteleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x232B)))
 (setf (gethash (lit "deleteright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2326)))
 (setf (gethash (lit "delta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B4)))
 (setf (gethash (lit "deltaturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018D)))
 (setf (gethash (lit "denominatorminusonenumeratorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F8)))
 (setf (gethash (lit "dezh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A4)))
 (setf (gethash (lit "dhabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A7)))
 (setf (gethash (lit "dhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0927)))
 (setf (gethash (lit "dhagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA7)))
 (setf (gethash (lit "dhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A27)))
 (setf (gethash (lit "dhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0257)))
 (setf (gethash (lit "dialytikatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0385)))
 (setf (gethash (lit "dialytikatonoscmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0344)))
 (setf (gethash (lit "diamond") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2666)))
 (setf (gethash (lit "diamondsuitwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2662)))
 (setf (gethash (lit "dieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A8)))
 (setf (gethash (lit "dieresisacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D7)))
 (setf (gethash (lit "dieresisbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0324)))
 (setf (gethash (lit "dieresiscmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0308)))
 (setf (gethash (lit "dieresisgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6D8)))
 (setf (gethash (lit "dieresistonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0385)))
 (setf (gethash (lit "dihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3062)))
 (setf (gethash (lit "dikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C2)))
 (setf (gethash (lit "dittomark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3003)))
 (setf (gethash (lit "divide") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F7)))
 (setf (gethash (lit "divides") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2223)))
 (setf (gethash (lit "divisionslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2215)))
 (setf (gethash (lit "djecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0452)))
 (setf (gethash (lit "dkshade") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2593)))
 (setf (gethash (lit "dlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E0F)))
 (setf (gethash (lit "dlsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3397)))
 (setf (gethash (lit "dmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0111)))
 (setf (gethash (lit "dmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF44)))
 (setf (gethash (lit "dnblock") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2584)))
 (setf (gethash (lit "dochadathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0E)))
 (setf (gethash (lit "dodekthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E14)))
 (setf (gethash (lit "dohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3069)))
 (setf (gethash (lit "dokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C9)))
 (setf (gethash (lit "dollar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0024)))
 (setf (gethash (lit "dollarinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E3)))
 (setf (gethash (lit "dollarmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF04)))
 (setf (gethash (lit "dollaroldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF724)))
 (setf (gethash (lit "dollarsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE69)))
 (setf (gethash (lit "dollarsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E4)))
 (setf (gethash (lit "dong") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AB)))
 (setf (gethash (lit "dorusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3326)))
 (setf (gethash (lit "dotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D9)))
 (setf (gethash (lit "dotaccentcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0307)))
 (setf (gethash (lit "dotbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0323)))
 (setf (gethash (lit "dotbelowcomb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0323)))
 (setf (gethash (lit "dotkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30FB)))
 (setf (gethash (lit "dotlessi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0131)))
 (setf (gethash (lit "dotlessj") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6BE)))
 (setf (gethash (lit "dotlessjstrokehook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0284)))
 (setf (gethash (lit "dotmath") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22C5)))
 (setf (gethash (lit "dottedcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CC)))
 (setf (gethash (lit "doubleyodpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB1F)))
 (setf (gethash (lit "doubleyodpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB1F)))
 (setf (gethash (lit "downtackbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031E)))
 (setf (gethash (lit "downtackmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D5)))
 (setf (gethash (lit "dparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249F)))
 (setf (gethash (lit "dsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6EB)))
 (setf (gethash (lit "dtail") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0256)))
 (setf (gethash (lit "dtopbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x018C)))
 (setf (gethash (lit "duhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3065)))
 (setf (gethash (lit "dukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C5)))
 (setf (gethash (lit "dz") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01F3)))
 (setf (gethash (lit "dzaltone") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A3)))
 (setf (gethash (lit "dzcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C6)))
 (setf (gethash (lit "dzcurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A5)))
 (setf (gethash (lit "dzeabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E1)))
 (setf (gethash (lit "dzecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0455)))
 (setf (gethash (lit "dzhecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045F)))
 (setf (gethash (lit "e") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0065)))
 (setf (gethash (lit "eacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E9)))
 (setf (gethash (lit "earth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2641)))
 (setf (gethash (lit "ebengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x098F)))
 (setf (gethash (lit "ebopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311C)))
 (setf (gethash (lit "ebreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0115)))
 (setf (gethash (lit "ecandradeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090D)))
 (setf (gethash (lit "ecandragujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A8D)))
 (setf (gethash (lit "ecandravowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0945)))
 (setf (gethash (lit "ecandravowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC5)))
 (setf (gethash (lit "ecaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011B)))
 (setf (gethash (lit "ecedillabreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1D)))
 (setf (gethash (lit "echarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0565)))
 (setf (gethash (lit "echyiwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0587)))
 (setf (gethash (lit "ecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D4)))
 (setf (gethash (lit "ecircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00EA)))
 (setf (gethash (lit "ecircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBF)))
 (setf (gethash (lit "ecircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E19)))
 (setf (gethash (lit "ecircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC7)))
 (setf (gethash (lit "ecircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC1)))
 (setf (gethash (lit "ecircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC3)))
 (setf (gethash (lit "ecircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC5)))
 (setf (gethash (lit "ecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0454)))
 (setf (gethash (lit "edblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0205)))
 (setf (gethash (lit "edeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090F)))
 (setf (gethash (lit "edieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00EB)))
 (setf (gethash (lit "edot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0117)))
 (setf (gethash (lit "edotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0117)))
 (setf (gethash (lit "edotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EB9)))
 (setf (gethash (lit "eegurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A0F)))
 (setf (gethash (lit "eematragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A47)))
 (setf (gethash (lit "efcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0444)))
 (setf (gethash (lit "egrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00E8)))
 (setf (gethash (lit "egujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A8F)))
 (setf (gethash (lit "eharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0567)))
 (setf (gethash (lit "ehbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311D)))
 (setf (gethash (lit "ehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3048)))
 (setf (gethash (lit "ehookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBB)))
 (setf (gethash (lit "eibopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311F)))
 (setf (gethash (lit "eight") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0038)))
 (setf (gethash (lit "eightarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0668)))
 (setf (gethash (lit "eightbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09EE)))
 (setf (gethash (lit "eightcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2467)))
 (setf (gethash (lit "eightcircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2791)))
 (setf (gethash (lit "eightdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096E)))
 (setf (gethash (lit "eighteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2471)))
 (setf (gethash (lit "eighteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2485)))
 (setf (gethash (lit "eighteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2499)))
 (setf (gethash (lit "eightgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AEE)))
 (setf (gethash (lit "eightgurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6E)))
 (setf (gethash (lit "eighthackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0668)))
 (setf (gethash (lit "eighthangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3028)))
 (setf (gethash (lit "eighthnotebeamed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266B)))
 (setf (gethash (lit "eightideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3227)))
 (setf (gethash (lit "eightinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2088)))
 (setf (gethash (lit "eightmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF18)))
 (setf (gethash (lit "eightoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF738)))
 (setf (gethash (lit "eightparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247B)))
 (setf (gethash (lit "eightperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248F)))
 (setf (gethash (lit "eightpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F8)))
 (setf (gethash (lit "eightroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2177)))
 (setf (gethash (lit "eightsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2078)))
 (setf (gethash (lit "eightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E58)))
 (setf (gethash (lit "einvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0207)))
 (setf (gethash (lit "eiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0465)))
 (setf (gethash (lit "ekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A8)))
 (setf (gethash (lit "ekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF74)))
 (setf (gethash (lit "ekonkargurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A74)))
 (setf (gethash (lit "ekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3154)))
 (setf (gethash (lit "elcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043B)))
 (setf (gethash (lit "element") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2208)))
 (setf (gethash (lit "elevencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246A)))
 (setf (gethash (lit "elevenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247E)))
 (setf (gethash (lit "elevenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2492)))
 (setf (gethash (lit "elevenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x217A)))
 (setf (gethash (lit "ellipsis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2026)))
 (setf (gethash (lit "ellipsisvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22EE)))
 (setf (gethash (lit "emacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0113)))
 (setf (gethash (lit "emacronacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E17)))
 (setf (gethash (lit "emacrongrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E15)))
 (setf (gethash (lit "emcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043C)))
 (setf (gethash (lit "emdash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2014)))
 (setf (gethash (lit "emdashvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE31)))
 (setf (gethash (lit "emonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF45)))
 (setf (gethash (lit "emphasismarkarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055B)))
 (setf (gethash (lit "emptyset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2205)))
 (setf (gethash (lit "enbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3123)))
 (setf (gethash (lit "encyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043D)))
 (setf (gethash (lit "endash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2013)))
 (setf (gethash (lit "endashvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE32)))
 (setf (gethash (lit "endescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A3)))
 (setf (gethash (lit "eng") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014B)))
 (setf (gethash (lit "engbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3125)))
 (setf (gethash (lit "enghecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A5)))
 (setf (gethash (lit "enhookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C8)))
 (setf (gethash (lit "enspace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2002)))
 (setf (gethash (lit "eogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0119)))
 (setf (gethash (lit "eokorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3153)))
 (setf (gethash (lit "eopen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025B)))
 (setf (gethash (lit "eopenclosed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x029A)))
 (setf (gethash (lit "eopenreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025C)))
 (setf (gethash (lit "eopenreversedclosed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025E)))
 (setf (gethash (lit "eopenreversedhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025D)))
 (setf (gethash (lit "eparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A0)))
 (setf (gethash (lit "epsilon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B5)))
 (setf (gethash (lit "epsilontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AD)))
 (setf (gethash (lit "equal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003D)))
 (setf (gethash (lit "equalmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1D)))
 (setf (gethash (lit "equalsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE66)))
 (setf (gethash (lit "equalsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x207C)))
 (setf (gethash (lit "equivalence") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2261)))
 (setf (gethash (lit "erbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3126)))
 (setf (gethash (lit "ercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0440)))
 (setf (gethash (lit "ereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0258)))
 (setf (gethash (lit "ereversedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044D)))
 (setf (gethash (lit "escyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0441)))
 (setf (gethash (lit "esdescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AB)))
 (setf (gethash (lit "esh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0283)))
 (setf (gethash (lit "eshcurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0286)))
 (setf (gethash (lit "eshortdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090E)))
 (setf (gethash (lit "eshortvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0946)))
 (setf (gethash (lit "eshreversedloop") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AA)))
 (setf (gethash (lit "eshsquatreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0285)))
 (setf (gethash (lit "esmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3047)))
 (setf (gethash (lit "esmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A7)))
 (setf (gethash (lit "esmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6A)))
 (setf (gethash (lit "estimated") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x212E)))
 (setf (gethash (lit "esuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6EC)))
 (setf (gethash (lit "eta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B7)))
 (setf (gethash (lit "etarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0568)))
 (setf (gethash (lit "etatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AE)))
 (setf (gethash (lit "eth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F0)))
 (setf (gethash (lit "etilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EBD)))
 (setf (gethash (lit "etildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1B)))
 (setf (gethash (lit "etnahtafoukhhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0591)))
 (setf (gethash (lit "etnahtafoukhlefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0591)))
 (setf (gethash (lit "etnahtahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0591)))
 (setf (gethash (lit "etnahtalefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0591)))
 (setf (gethash (lit "eturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DD)))
 (setf (gethash (lit "eukorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3161)))
 (setf (gethash (lit "euro") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AC)))
 (setf (gethash (lit "evowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C7)))
 (setf (gethash (lit "evowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0947)))
 (setf (gethash (lit "evowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC7)))
 (setf (gethash (lit "exclam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0021)))
 (setf (gethash (lit "exclamarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055C)))
 (setf (gethash (lit "exclamdbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x203C)))
 (setf (gethash (lit "exclamdown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A1)))
 (setf (gethash (lit "exclamdownsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7A1)))
 (setf (gethash (lit "exclammonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF01)))
 (setf (gethash (lit "exclamsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF721)))
 (setf (gethash (lit "existential") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2203)))
 (setf (gethash (lit "ezh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0292)))
 (setf (gethash (lit "ezhcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01EF)))
 (setf (gethash (lit "ezhcurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0293)))
 (setf (gethash (lit "ezhreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B9)))
 (setf (gethash (lit "ezhtail") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BA)))
 (setf (gethash (lit "f") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0066)))
 (setf (gethash (lit "fadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095E)))
 (setf (gethash (lit "fagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A5E)))
 (setf (gethash (lit "fahrenheit") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2109)))
 (setf (gethash (lit "fathaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064E)))
 (setf (gethash (lit "fathalowarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064E)))
 (setf (gethash (lit "fathatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064B)))
 (setf (gethash (lit "fbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3108)))
 (setf (gethash (lit "fcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D5)))
 (setf (gethash (lit "fdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E1F)))
 (setf (gethash (lit "feharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0641)))
 (setf (gethash (lit "feharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0586)))
 (setf (gethash (lit "fehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED2)))
 (setf (gethash (lit "fehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED3)))
 (setf (gethash (lit "fehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED4)))
 (setf (gethash (lit "feicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E5)))
 (setf (gethash (lit "female") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2640)))
 (setf (gethash (lit "ff") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB00)))
 (setf (gethash (lit "ffi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB03)))
 (setf (gethash (lit "ffl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB04)))
 (setf (gethash (lit "fi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB01)))
 (setf (gethash (lit "fifteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246E)))
 (setf (gethash (lit "fifteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2482)))
 (setf (gethash (lit "fifteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2496)))
 (setf (gethash (lit "figuredash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2012)))
 (setf (gethash (lit "filledbox") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A0)))
 (setf (gethash (lit "filledrect") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AC)))
 (setf (gethash (lit "finalkaf") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)))
 (setf (gethash (lit "finalkafdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3A)))
 (setf (gethash (lit "finalkafdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3A)))
 (setf (gethash (lit "finalkafhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)))
 (setf (gethash (lit "finalkafqamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)(code-char #x05B8)))
 (setf (gethash (lit "finalkafqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)(code-char #x05B8)))
 (setf (gethash (lit "finalkafsheva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)(code-char #x05B0)))
 (setf (gethash (lit "finalkafshevahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DA)(code-char #x05B0)))
 (setf (gethash (lit "finalmem") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DD)))
 (setf (gethash (lit "finalmemhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DD)))
 (setf (gethash (lit "finalnun") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DF)))
 (setf (gethash (lit "finalnunhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DF)))
 (setf (gethash (lit "finalpe") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E3)))
 (setf (gethash (lit "finalpehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E3)))
 (setf (gethash (lit "finaltsadi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E5)))
 (setf (gethash (lit "finaltsadihebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E5)))
 (setf (gethash (lit "firsttonechinese") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C9)))
 (setf (gethash (lit "fisheye") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C9)))
 (setf (gethash (lit "fitacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0473)))
 (setf (gethash (lit "five") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0035)))
 (setf (gethash (lit "fivearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0665)))
 (setf (gethash (lit "fivebengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09EB)))
 (setf (gethash (lit "fivecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2464)))
 (setf (gethash (lit "fivecircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278E)))
 (setf (gethash (lit "fivedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096B)))
 (setf (gethash (lit "fiveeighths") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x215D)))
 (setf (gethash (lit "fivegujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AEB)))
 (setf (gethash (lit "fivegurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6B)))
 (setf (gethash (lit "fivehackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0665)))
 (setf (gethash (lit "fivehangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3025)))
 (setf (gethash (lit "fiveideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3224)))
 (setf (gethash (lit "fiveinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2085)))
 (setf (gethash (lit "fivemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF15)))
 (setf (gethash (lit "fiveoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF735)))
 (setf (gethash (lit "fiveparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2478)))
 (setf (gethash (lit "fiveperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248C)))
 (setf (gethash (lit "fivepersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F5)))
 (setf (gethash (lit "fiveroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2174)))
 (setf (gethash (lit "fivesuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2075)))
 (setf (gethash (lit "fivethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E55)))
 (setf (gethash (lit "fl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB02)))
 (setf (gethash (lit "florin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0192)))
 (setf (gethash (lit "fmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF46)))
 (setf (gethash (lit "fmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3399)))
 (setf (gethash (lit "fofanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1F)))
 (setf (gethash (lit "fofathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1D)))
 (setf (gethash (lit "fongmanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4F)))
 (setf (gethash (lit "forall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2200)))
 (setf (gethash (lit "four") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0034)))
 (setf (gethash (lit "fourarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0664)))
 (setf (gethash (lit "fourbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09EA)))
 (setf (gethash (lit "fourcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2463)))
 (setf (gethash (lit "fourcircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278D)))
 (setf (gethash (lit "fourdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096A)))
 (setf (gethash (lit "fourgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AEA)))
 (setf (gethash (lit "fourgurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6A)))
 (setf (gethash (lit "fourhackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0664)))
 (setf (gethash (lit "fourhangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3024)))
 (setf (gethash (lit "fourideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3223)))
 (setf (gethash (lit "fourinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2084)))
 (setf (gethash (lit "fourmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF14)))
 (setf (gethash (lit "fournumeratorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F7)))
 (setf (gethash (lit "fouroldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF734)))
 (setf (gethash (lit "fourparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2477)))
 (setf (gethash (lit "fourperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248B)))
 (setf (gethash (lit "fourpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F4)))
 (setf (gethash (lit "fourroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2173)))
 (setf (gethash (lit "foursuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2074)))
 (setf (gethash (lit "fourteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246D)))
 (setf (gethash (lit "fourteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2481)))
 (setf (gethash (lit "fourteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2495)))
 (setf (gethash (lit "fourthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E54)))
 (setf (gethash (lit "fourthtonechinese") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CB)))
 (setf (gethash (lit "fparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A1)))
 (setf (gethash (lit "fraction") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2044)))
 (setf (gethash (lit "franc") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A3)))
 (setf (gethash (lit "g") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0067)))
 (setf (gethash (lit "gabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0997)))
 (setf (gethash (lit "gacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01F5)))
 (setf (gethash (lit "gadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0917)))
 (setf (gethash (lit "gafarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06AF)))
 (setf (gethash (lit "gaffinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB93)))
 (setf (gethash (lit "gafinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB94)))
 (setf (gethash (lit "gafmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB95)))
 (setf (gethash (lit "gagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A97)))
 (setf (gethash (lit "gagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A17)))
 (setf (gethash (lit "gahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304C)))
 (setf (gethash (lit "gakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AC)))
 (setf (gethash (lit "gamma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B3)))
 (setf (gethash (lit "gammalatinsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0263)))
 (setf (gethash (lit "gammasuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E0)))
 (setf (gethash (lit "gangiacoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03EB)))
 (setf (gethash (lit "gbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310D)))
 (setf (gethash (lit "gbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011F)))
 (setf (gethash (lit "gcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E7)))
 (setf (gethash (lit "gcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0123)))
 (setf (gethash (lit "gcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D6)))
 (setf (gethash (lit "gcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x011D)))
 (setf (gethash (lit "gcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0123)))
 (setf (gethash (lit "gdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0121)))
 (setf (gethash (lit "gdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0121)))
 (setf (gethash (lit "gecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0433)))
 (setf (gethash (lit "gehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3052)))
 (setf (gethash (lit "gekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B2)))
 (setf (gethash (lit "geometricallyequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2251)))
 (setf (gethash (lit "gereshaccenthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059C)))
 (setf (gethash (lit "gereshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F3)))
 (setf (gethash (lit "gereshmuqdamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059D)))
 (setf (gethash (lit "germandbls") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00DF)))
 (setf (gethash (lit "gershayimaccenthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059E)))
 (setf (gethash (lit "gershayimhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F4)))
 (setf (gethash (lit "getamark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3013)))
 (setf (gethash (lit "ghabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0998)))
 (setf (gethash (lit "ghadarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0572)))
 (setf (gethash (lit "ghadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0918)))
 (setf (gethash (lit "ghagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A98)))
 (setf (gethash (lit "ghagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A18)))
 (setf (gethash (lit "ghainarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x063A)))
 (setf (gethash (lit "ghainfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFECE)))
 (setf (gethash (lit "ghaininitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFECF)))
 (setf (gethash (lit "ghainmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED0)))
 (setf (gethash (lit "ghemiddlehookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0495)))
 (setf (gethash (lit "ghestrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0493)))
 (setf (gethash (lit "gheupturncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0491)))
 (setf (gethash (lit "ghhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095A)))
 (setf (gethash (lit "ghhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A5A)))
 (setf (gethash (lit "ghook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0260)))
 (setf (gethash (lit "ghzsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3393)))
 (setf (gethash (lit "gihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304E)))
 (setf (gethash (lit "gikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AE)))
 (setf (gethash (lit "gimarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0563)))
 (setf (gethash (lit "gimel") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D2)))
 (setf (gethash (lit "gimeldagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB32)))
 (setf (gethash (lit "gimeldageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB32)))
 (setf (gethash (lit "gimelhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D2)))
 (setf (gethash (lit "gjecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0453)))
 (setf (gethash (lit "glottalinvertedstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BE)))
 (setf (gethash (lit "glottalstop") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0294)))
 (setf (gethash (lit "glottalstopinverted") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0296)))
 (setf (gethash (lit "glottalstopmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C0)))
 (setf (gethash (lit "glottalstopreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0295)))
 (setf (gethash (lit "glottalstopreversedmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C1)))
 (setf (gethash (lit "glottalstopreversedsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E4)))
 (setf (gethash (lit "glottalstopstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A1)))
 (setf (gethash (lit "glottalstopstrokereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A2)))
 (setf (gethash (lit "gmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E21)))
 (setf (gethash (lit "gmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF47)))
 (setf (gethash (lit "gohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3054)))
 (setf (gethash (lit "gokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B4)))
 (setf (gethash (lit "gparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A2)))
 (setf (gethash (lit "gpasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AC)))
 (setf (gethash (lit "gradient") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2207)))
 (setf (gethash (lit "grave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0060)))
 (setf (gethash (lit "gravebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0316)))
 (setf (gethash (lit "gravecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0300)))
 (setf (gethash (lit "gravecomb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0300)))
 (setf (gethash (lit "gravedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0953)))
 (setf (gethash (lit "gravelowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CE)))
 (setf (gethash (lit "gravemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF40)))
 (setf (gethash (lit "gravetonecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0340)))
 (setf (gethash (lit "greater") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003E)))
 (setf (gethash (lit "greaterequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2265)))
 (setf (gethash (lit "greaterequalorless") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22DB)))
 (setf (gethash (lit "greatermonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1E)))
 (setf (gethash (lit "greaterorequivalent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2273)))
 (setf (gethash (lit "greaterorless") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2277)))
 (setf (gethash (lit "greateroverequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2267)))
 (setf (gethash (lit "greatersmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE65)))
 (setf (gethash (lit "gscript") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0261)))
 (setf (gethash (lit "gstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E5)))
 (setf (gethash (lit "guhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3050)))
 (setf (gethash (lit "guillemotleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AB)))
 (setf (gethash (lit "guillemotright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BB)))
 (setf (gethash (lit "guilsinglleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2039)))
 (setf (gethash (lit "guilsinglright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x203A)))
 (setf (gethash (lit "gukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B0)))
 (setf (gethash (lit "guramusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3318)))
 (setf (gethash (lit "gysquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C9)))
 (setf (gethash (lit "h") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0068)))
 (setf (gethash (lit "haabkhasiancyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A9)))
 (setf (gethash (lit "haaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06C1)))
 (setf (gethash (lit "habengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B9)))
 (setf (gethash (lit "hadescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B3)))
 (setf (gethash (lit "hadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0939)))
 (setf (gethash (lit "hagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB9)))
 (setf (gethash (lit "hagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A39)))
 (setf (gethash (lit "haharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062D)))
 (setf (gethash (lit "hahfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA2)))
 (setf (gethash (lit "hahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA3)))
 (setf (gethash (lit "hahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306F)))
 (setf (gethash (lit "hahmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA4)))
 (setf (gethash (lit "haitusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x332A)))
 (setf (gethash (lit "hakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CF)))
 (setf (gethash (lit "hakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8A)))
 (setf (gethash (lit "halantgurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A4D)))
 (setf (gethash (lit "hamzaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)))
 (setf (gethash (lit "hamzadammaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x064F)))
 (setf (gethash (lit "hamzadammatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x064C)))
 (setf (gethash (lit "hamzafathaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x064E)))
 (setf (gethash (lit "hamzafathatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x064B)))
 (setf (gethash (lit "hamzalowarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)))
 (setf (gethash (lit "hamzalowkasraarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x0650)))
 (setf (gethash (lit "hamzalowkasratanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x064D)))
 (setf (gethash (lit "hamzasukunarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0621)(code-char #x0652)))
 (setf (gethash (lit "hangulfiller") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3164)))
 (setf (gethash (lit "hardsigncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044A)))
 (setf (gethash (lit "harpoonleftbarbup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21BC)))
 (setf (gethash (lit "harpoonrightbarbup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21C0)))
 (setf (gethash (lit "hasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33CA)))
 (setf (gethash (lit "hatafpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatah16") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatah23") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatah2f") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatahnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatahquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafpatahwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B2)))
 (setf (gethash (lit "hatafqamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamats1b") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamats28") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamats34") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamatsnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamatsquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafqamatswidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B3)))
 (setf (gethash (lit "hatafsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegol17") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegol24") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegol30") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegolnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegolquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hatafsegolwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B1)))
 (setf (gethash (lit "hbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0127)))
 (setf (gethash (lit "hbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310F)))
 (setf (gethash (lit "hbrevebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2B)))
 (setf (gethash (lit "hcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E29)))
 (setf (gethash (lit "hcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D7)))
 (setf (gethash (lit "hcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0125)))
 (setf (gethash (lit "hdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E27)))
 (setf (gethash (lit "hdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E23)))
 (setf (gethash (lit "hdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E25)))
 (setf (gethash (lit "he") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D4)))
 (setf (gethash (lit "heart") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2665)))
 (setf (gethash (lit "heartsuitblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2665)))
 (setf (gethash (lit "heartsuitwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2661)))
 (setf (gethash (lit "hedagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB34)))
 (setf (gethash (lit "hedageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB34)))
 (setf (gethash (lit "hehaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06C1)))
 (setf (gethash (lit "heharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0647)))
 (setf (gethash (lit "hehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D4)))
 (setf (gethash (lit "hehfinalaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBA7)))
 (setf (gethash (lit "hehfinalalttwoarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEEA)))
 (setf (gethash (lit "hehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEEA)))
 (setf (gethash (lit "hehhamzaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBA5)))
 (setf (gethash (lit "hehhamzaaboveisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBA4)))
 (setf (gethash (lit "hehinitialaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBA8)))
 (setf (gethash (lit "hehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEEB)))
 (setf (gethash (lit "hehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3078)))
 (setf (gethash (lit "hehmedialaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBA9)))
 (setf (gethash (lit "hehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEEC)))
 (setf (gethash (lit "heiseierasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x337B)))
 (setf (gethash (lit "hekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D8)))
 (setf (gethash (lit "hekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8D)))
 (setf (gethash (lit "hekutaarusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3336)))
 (setf (gethash (lit "henghook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0267)))
 (setf (gethash (lit "herutusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3339)))
 (setf (gethash (lit "het") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D7)))
 (setf (gethash (lit "hethebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D7)))
 (setf (gethash (lit "hhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0266)))
 (setf (gethash (lit "hhooksuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B1)))
 (setf (gethash (lit "hieuhacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x327B)))
 (setf (gethash (lit "hieuhaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x321B)))
 (setf (gethash (lit "hieuhcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326D)))
 (setf (gethash (lit "hieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314E)))
 (setf (gethash (lit "hieuhparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320D)))
 (setf (gethash (lit "hihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3072)))
 (setf (gethash (lit "hikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D2)))
 (setf (gethash (lit "hikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8B)))
 (setf (gethash (lit "hiriq") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriq14") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriq21") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriq2d") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriqnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriqquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hiriqwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B4)))
 (setf (gethash (lit "hlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E96)))
 (setf (gethash (lit "hmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF48)))
 (setf (gethash (lit "hoarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0570)))
 (setf (gethash (lit "hohipthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2B)))
 (setf (gethash (lit "hohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307B)))
 (setf (gethash (lit "hokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DB)))
 (setf (gethash (lit "hokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8E)))
 (setf (gethash (lit "holam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holam19") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holam26") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holam32") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holamnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holamquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "holamwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B9)))
 (setf (gethash (lit "honokhukthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2E)))
 (setf (gethash (lit "hookabovecomb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0309)))
 (setf (gethash (lit "hookcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0309)))
 (setf (gethash (lit "hookpalatalizedbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0321)))
 (setf (gethash (lit "hookretroflexbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0322)))
 (setf (gethash (lit "hoonsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3342)))
 (setf (gethash (lit "horicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E9)))
 (setf (gethash (lit "horizontalbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2015)))
 (setf (gethash (lit "horncmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031B)))
 (setf (gethash (lit "hotsprings") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2668)))
 (setf (gethash (lit "house") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2302)))
 (setf (gethash (lit "hparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A3)))
 (setf (gethash (lit "hsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B0)))
 (setf (gethash (lit "hturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0265)))
 (setf (gethash (lit "huhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3075)))
 (setf (gethash (lit "huiitosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3333)))
 (setf (gethash (lit "hukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D5)))
 (setf (gethash (lit "hukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8C)))
 (setf (gethash (lit "hungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DD)))
 (setf (gethash (lit "hungarumlautcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030B)))
 (setf (gethash (lit "hv") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0195)))
 (setf (gethash (lit "hyphen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002D)))
 (setf (gethash (lit "hypheninferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E5)))
 (setf (gethash (lit "hyphenmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0D)))
 (setf (gethash (lit "hyphensmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE63)))
 (setf (gethash (lit "hyphensuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E6)))
 (setf (gethash (lit "hyphentwo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2010)))
 (setf (gethash (lit "i") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0069)))
 (setf (gethash (lit "iacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00ED)))
 (setf (gethash (lit "iacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044F)))
 (setf (gethash (lit "ibengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0987)))
 (setf (gethash (lit "ibopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3127)))
 (setf (gethash (lit "ibreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012D)))
 (setf (gethash (lit "icaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D0)))
 (setf (gethash (lit "icircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D8)))
 (setf (gethash (lit "icircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00EE)))
 (setf (gethash (lit "icyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0456)))
 (setf (gethash (lit "idblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0209)))
 (setf (gethash (lit "ideographearthcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328F)))
 (setf (gethash (lit "ideographfirecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328B)))
 (setf (gethash (lit "ideographicallianceparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323F)))
 (setf (gethash (lit "ideographiccallparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323A)))
 (setf (gethash (lit "ideographiccentrecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A5)))
 (setf (gethash (lit "ideographicclose") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3006)))
 (setf (gethash (lit "ideographiccomma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3001)))
 (setf (gethash (lit "ideographiccommaleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF64)))
 (setf (gethash (lit "ideographiccongratulationparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3237)))
 (setf (gethash (lit "ideographiccorrectcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A3)))
 (setf (gethash (lit "ideographicearthparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322F)))
 (setf (gethash (lit "ideographicenterpriseparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323D)))
 (setf (gethash (lit "ideographicexcellentcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x329D)))
 (setf (gethash (lit "ideographicfestivalparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3240)))
 (setf (gethash (lit "ideographicfinancialcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3296)))
 (setf (gethash (lit "ideographicfinancialparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3236)))
 (setf (gethash (lit "ideographicfireparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322B)))
 (setf (gethash (lit "ideographichaveparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3232)))
 (setf (gethash (lit "ideographichighcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A4)))
 (setf (gethash (lit "ideographiciterationmark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3005)))
 (setf (gethash (lit "ideographiclaborcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3298)))
 (setf (gethash (lit "ideographiclaborparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3238)))
 (setf (gethash (lit "ideographicleftcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A7)))
 (setf (gethash (lit "ideographiclowcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A6)))
 (setf (gethash (lit "ideographicmedicinecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A9)))
 (setf (gethash (lit "ideographicmetalparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322E)))
 (setf (gethash (lit "ideographicmoonparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322A)))
 (setf (gethash (lit "ideographicnameparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3234)))
 (setf (gethash (lit "ideographicperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3002)))
 (setf (gethash (lit "ideographicprintcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x329E)))
 (setf (gethash (lit "ideographicreachparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3243)))
 (setf (gethash (lit "ideographicrepresentparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3239)))
 (setf (gethash (lit "ideographicresourceparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323E)))
 (setf (gethash (lit "ideographicrightcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x32A8)))
 (setf (gethash (lit "ideographicsecretcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3299)))
 (setf (gethash (lit "ideographicselfparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3242)))
 (setf (gethash (lit "ideographicsocietyparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3233)))
 (setf (gethash (lit "ideographicspace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3000)))
 (setf (gethash (lit "ideographicspecialparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3235)))
 (setf (gethash (lit "ideographicstockparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3231)))
 (setf (gethash (lit "ideographicstudyparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323B)))
 (setf (gethash (lit "ideographicsunparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3230)))
 (setf (gethash (lit "ideographicsuperviseparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x323C)))
 (setf (gethash (lit "ideographicwaterparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322C)))
 (setf (gethash (lit "ideographicwoodparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x322D)))
 (setf (gethash (lit "ideographiczero") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3007)))
 (setf (gethash (lit "ideographmetalcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328E)))
 (setf (gethash (lit "ideographmooncircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328A)))
 (setf (gethash (lit "ideographnamecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3294)))
 (setf (gethash (lit "ideographsuncircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3290)))
 (setf (gethash (lit "ideographwatercircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328C)))
 (setf (gethash (lit "ideographwoodcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x328D)))
 (setf (gethash (lit "ideva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0907)))
 (setf (gethash (lit "idieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00EF)))
 (setf (gethash (lit "idieresisacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2F)))
 (setf (gethash (lit "idieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E5)))
 (setf (gethash (lit "idotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECB)))
 (setf (gethash (lit "iebrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D7)))
 (setf (gethash (lit "iecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0435)))
 (setf (gethash (lit "ieungacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3275)))
 (setf (gethash (lit "ieungaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3215)))
 (setf (gethash (lit "ieungcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3267)))
 (setf (gethash (lit "ieungkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3147)))
 (setf (gethash (lit "ieungparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3207)))
 (setf (gethash (lit "igrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00EC)))
 (setf (gethash (lit "igujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A87)))
 (setf (gethash (lit "igurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A07)))
 (setf (gethash (lit "ihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3044)))
 (setf (gethash (lit "ihookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EC9)))
 (setf (gethash (lit "iibengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0988)))
 (setf (gethash (lit "iicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0438)))
 (setf (gethash (lit "iideva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0908)))
 (setf (gethash (lit "iigujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A88)))
 (setf (gethash (lit "iigurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A08)))
 (setf (gethash (lit "iimatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A40)))
 (setf (gethash (lit "iinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020B)))
 (setf (gethash (lit "iishortcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0439)))
 (setf (gethash (lit "iivowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C0)))
 (setf (gethash (lit "iivowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0940)))
 (setf (gethash (lit "iivowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC0)))
 (setf (gethash (lit "ij") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0133)))
 (setf (gethash (lit "ikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A4)))
 (setf (gethash (lit "ikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF72)))
 (setf (gethash (lit "ikorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3163)))
 (setf (gethash (lit "ilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DC)))
 (setf (gethash (lit "iluyhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AC)))
 (setf (gethash (lit "imacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012B)))
 (setf (gethash (lit "imacroncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E3)))
 (setf (gethash (lit "imageorapproximatelyequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2253)))
 (setf (gethash (lit "imatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A3F)))
 (setf (gethash (lit "imonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF49)))
 (setf (gethash (lit "increment") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2206)))
 (setf (gethash (lit "infinity") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x221E)))
 (setf (gethash (lit "iniarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056B)))
 (setf (gethash (lit "integral") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x222B)))
 (setf (gethash (lit "integralbottom") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2321)))
 (setf (gethash (lit "integralbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2321)))
 (setf (gethash (lit "integralex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F5)))
 (setf (gethash (lit "integraltop") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2320)))
 (setf (gethash (lit "integraltp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2320)))
 (setf (gethash (lit "intersection") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2229)))
 (setf (gethash (lit "intisquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3305)))
 (setf (gethash (lit "invbullet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D8)))
 (setf (gethash (lit "invcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D9)))
 (setf (gethash (lit "invsmileface") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263B)))
 (setf (gethash (lit "iocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0451)))
 (setf (gethash (lit "iogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x012F)))
 (setf (gethash (lit "iota") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B9)))
 (setf (gethash (lit "iotadieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03CA)))
 (setf (gethash (lit "iotadieresistonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0390)))
 (setf (gethash (lit "iotalatin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0269)))
 (setf (gethash (lit "iotatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03AF)))
 (setf (gethash (lit "iparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A4)))
 (setf (gethash (lit "irigurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A72)))
 (setf (gethash (lit "ismallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3043)))
 (setf (gethash (lit "ismallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A3)))
 (setf (gethash (lit "ismallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF68)))
 (setf (gethash (lit "issharbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09FA)))
 (setf (gethash (lit "istroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0268)))
 (setf (gethash (lit "isuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6ED)))
 (setf (gethash (lit "iterationhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x309D)))
 (setf (gethash (lit "iterationkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30FD)))
 (setf (gethash (lit "itilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0129)))
 (setf (gethash (lit "itildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E2D)))
 (setf (gethash (lit "iubopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3129)))
 (setf (gethash (lit "iucyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044E)))
 (setf (gethash (lit "ivowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09BF)))
 (setf (gethash (lit "ivowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x093F)))
 (setf (gethash (lit "ivowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ABF)))
 (setf (gethash (lit "izhitsacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0475)))
 (setf (gethash (lit "izhitsadblgravecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0477)))
 (setf (gethash (lit "j") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006A)))
 (setf (gethash (lit "jaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0571)))
 (setf (gethash (lit "jabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099C)))
 (setf (gethash (lit "jadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091C)))
 (setf (gethash (lit "jagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9C)))
 (setf (gethash (lit "jagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1C)))
 (setf (gethash (lit "jbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3110)))
 (setf (gethash (lit "jcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01F0)))
 (setf (gethash (lit "jcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24D9)))
 (setf (gethash (lit "jcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0135)))
 (setf (gethash (lit "jcrossedtail") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x029D)))
 (setf (gethash (lit "jdotlessstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025F)))
 (setf (gethash (lit "jecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0458)))
 (setf (gethash (lit "jeemarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062C)))
 (setf (gethash (lit "jeemfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE9E)))
 (setf (gethash (lit "jeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE9F)))
 (setf (gethash (lit "jeemmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA0)))
 (setf (gethash (lit "jeharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0698)))
 (setf (gethash (lit "jehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB8B)))
 (setf (gethash (lit "jhabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099D)))
 (setf (gethash (lit "jhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091D)))
 (setf (gethash (lit "jhagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9D)))
 (setf (gethash (lit "jhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1D)))
 (setf (gethash (lit "jheharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057B)))
 (setf (gethash (lit "jis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3004)))
 (setf (gethash (lit "jmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4A)))
 (setf (gethash (lit "jparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A5)))
 (setf (gethash (lit "jsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B2)))
 (setf (gethash (lit "k") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006B)))
 (setf (gethash (lit "kabashkircyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A1)))
 (setf (gethash (lit "kabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0995)))
 (setf (gethash (lit "kacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E31)))
 (setf (gethash (lit "kacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043A)))
 (setf (gethash (lit "kadescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049B)))
 (setf (gethash (lit "kadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0915)))
 (setf (gethash (lit "kaf") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DB)))
 (setf (gethash (lit "kafarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0643)))
 (setf (gethash (lit "kafdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3B)))
 (setf (gethash (lit "kafdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3B)))
 (setf (gethash (lit "kaffinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDA)))
 (setf (gethash (lit "kafhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DB)))
 (setf (gethash (lit "kafinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDB)))
 (setf (gethash (lit "kafmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDC)))
 (setf (gethash (lit "kafrafehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4D)))
 (setf (gethash (lit "kagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A95)))
 (setf (gethash (lit "kagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A15)))
 (setf (gethash (lit "kahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304B)))
 (setf (gethash (lit "kahookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C4)))
 (setf (gethash (lit "kakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AB)))
 (setf (gethash (lit "kakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF76)))
 (setf (gethash (lit "kappa") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BA)))
 (setf (gethash (lit "kappasymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03F0)))
 (setf (gethash (lit "kapyeounmieumkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3171)))
 (setf (gethash (lit "kapyeounphieuphkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3184)))
 (setf (gethash (lit "kapyeounpieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3178)))
 (setf (gethash (lit "kapyeounssangpieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3179)))
 (setf (gethash (lit "karoriisquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x330D)))
 (setf (gethash (lit "kashidaautoarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0640)))
 (setf (gethash (lit "kashidaautonosidebearingarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0640)))
 (setf (gethash (lit "kasmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F5)))
 (setf (gethash (lit "kasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3384)))
 (setf (gethash (lit "kasraarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0650)))
 (setf (gethash (lit "kasratanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064D)))
 (setf (gethash (lit "kastrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049F)))
 (setf (gethash (lit "katahiraprolongmarkhalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF70)))
 (setf (gethash (lit "kaverticalstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x049D)))
 (setf (gethash (lit "kbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310E)))
 (setf (gethash (lit "kcalsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3389)))
 (setf (gethash (lit "kcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01E9)))
 (setf (gethash (lit "kcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0137)))
 (setf (gethash (lit "kcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DA)))
 (setf (gethash (lit "kcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0137)))
 (setf (gethash (lit "kdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E33)))
 (setf (gethash (lit "keharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0584)))
 (setf (gethash (lit "kehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3051)))
 (setf (gethash (lit "kekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B1)))
 (setf (gethash (lit "kekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF79)))
 (setf (gethash (lit "kenarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056F)))
 (setf (gethash (lit "kesmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F6)))
 (setf (gethash (lit "kgreenlandic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0138)))
 (setf (gethash (lit "khabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0996)))
 (setf (gethash (lit "khacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0445)))
 (setf (gethash (lit "khadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0916)))
 (setf (gethash (lit "khagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A96)))
 (setf (gethash (lit "khagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A16)))
 (setf (gethash (lit "khaharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062E)))
 (setf (gethash (lit "khahfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA6)))
 (setf (gethash (lit "khahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA7)))
 (setf (gethash (lit "khahmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEA8)))
 (setf (gethash (lit "kheicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E7)))
 (setf (gethash (lit "khhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0959)))
 (setf (gethash (lit "khhagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A59)))
 (setf (gethash (lit "khieukhacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3278)))
 (setf (gethash (lit "khieukhaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3218)))
 (setf (gethash (lit "khieukhcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326A)))
 (setf (gethash (lit "khieukhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314B)))
 (setf (gethash (lit "khieukhparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320A)))
 (setf (gethash (lit "khokhaithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E02)))
 (setf (gethash (lit "khokhonthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E05)))
 (setf (gethash (lit "khokhuatthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E03)))
 (setf (gethash (lit "khokhwaithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E04)))
 (setf (gethash (lit "khomutthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E5B)))
 (setf (gethash (lit "khook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0199)))
 (setf (gethash (lit "khorakhangthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E06)))
 (setf (gethash (lit "khzsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3391)))
 (setf (gethash (lit "kihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304D)))
 (setf (gethash (lit "kikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AD)))
 (setf (gethash (lit "kikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF77)))
 (setf (gethash (lit "kiroguramusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3315)))
 (setf (gethash (lit "kiromeetorusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3316)))
 (setf (gethash (lit "kirosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3314)))
 (setf (gethash (lit "kiyeokacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326E)))
 (setf (gethash (lit "kiyeokaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320E)))
 (setf (gethash (lit "kiyeokcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3260)))
 (setf (gethash (lit "kiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3131)))
 (setf (gethash (lit "kiyeokparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3200)))
 (setf (gethash (lit "kiyeoksioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3133)))
 (setf (gethash (lit "kjecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045C)))
 (setf (gethash (lit "klinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E35)))
 (setf (gethash (lit "klsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3398)))
 (setf (gethash (lit "kmcubedsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A6)))
 (setf (gethash (lit "kmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4B)))
 (setf (gethash (lit "kmsquaredsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A2)))
 (setf (gethash (lit "kohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3053)))
 (setf (gethash (lit "kohmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C0)))
 (setf (gethash (lit "kokaithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E01)))
 (setf (gethash (lit "kokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B3)))
 (setf (gethash (lit "kokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7A)))
 (setf (gethash (lit "kooposquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x331E)))
 (setf (gethash (lit "koppacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0481)))
 (setf (gethash (lit "koreanstandardsymbol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x327F)))
 (setf (gethash (lit "koroniscmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0343)))
 (setf (gethash (lit "kparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A6)))
 (setf (gethash (lit "kpasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AA)))
 (setf (gethash (lit "ksicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046F)))
 (setf (gethash (lit "ktsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33CF)))
 (setf (gethash (lit "kturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x029E)))
 (setf (gethash (lit "kuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304F)))
 (setf (gethash (lit "kukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AF)))
 (setf (gethash (lit "kukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF78)))
 (setf (gethash (lit "kvsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B8)))
 (setf (gethash (lit "kwsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BE)))
 (setf (gethash (lit "l") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006C)))
 (setf (gethash (lit "labengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B2)))
 (setf (gethash (lit "lacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013A)))
 (setf (gethash (lit "ladeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0932)))
 (setf (gethash (lit "lagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB2)))
 (setf (gethash (lit "lagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A32)))
 (setf (gethash (lit "lakkhangyaothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E45)))
 (setf (gethash (lit "lamaleffinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEFC)))
 (setf (gethash (lit "lamalefhamzaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF8)))
 (setf (gethash (lit "lamalefhamzaaboveisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF7)))
 (setf (gethash (lit "lamalefhamzabelowfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEFA)))
 (setf (gethash (lit "lamalefhamzabelowisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF9)))
 (setf (gethash (lit "lamalefisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEFB)))
 (setf (gethash (lit "lamalefmaddaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF6)))
 (setf (gethash (lit "lamalefmaddaaboveisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF5)))
 (setf (gethash (lit "lamarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0644)))
 (setf (gethash (lit "lambda") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BB)))
 (setf (gethash (lit "lambdastroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019B)))
 (setf (gethash (lit "lamed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)))
 (setf (gethash (lit "lameddagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3C)))
 (setf (gethash (lit "lameddageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3C)))
 (setf (gethash (lit "lamedhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)))
 (setf (gethash (lit "lamedholam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)(code-char #x05B9)))
 (setf (gethash (lit "lamedholamdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)(code-char #x05B9)(code-char #x05BC)))
 (setf (gethash (lit "lamedholamdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)(code-char #x05B9)(code-char #x05BC)))
 (setf (gethash (lit "lamedholamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DC)(code-char #x05B9)))
 (setf (gethash (lit "lamfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDE)))
 (setf (gethash (lit "lamhahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCCA)))
 (setf (gethash (lit "laminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDF)))
 (setf (gethash (lit "lamjeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCC9)))
 (setf (gethash (lit "lamkhahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCCB)))
 (setf (gethash (lit "lamlamhehisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFDF2)))
 (setf (gethash (lit "lammedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE0)))
 (setf (gethash (lit "lammeemhahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFD88)))
 (setf (gethash (lit "lammeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCCC)))
 (setf (gethash (lit "lammeemjeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDF)(code-char #xFEE4)(code-char #xFEA0)))
 (setf (gethash (lit "lammeemkhahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEDF)(code-char #xFEE4)(code-char #xFEA8)))
 (setf (gethash (lit "largecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25EF)))
 (setf (gethash (lit "lbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019A)))
 (setf (gethash (lit "lbelt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x026C)))
 (setf (gethash (lit "lbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310C)))
 (setf (gethash (lit "lcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013E)))
 (setf (gethash (lit "lcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013C)))
 (setf (gethash (lit "lcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DB)))
 (setf (gethash (lit "lcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3D)))
 (setf (gethash (lit "lcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x013C)))
 (setf (gethash (lit "ldot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0140)))
 (setf (gethash (lit "ldotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0140)))
 (setf (gethash (lit "ldotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E37)))
 (setf (gethash (lit "ldotbelowmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E39)))
 (setf (gethash (lit "leftangleabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031A)))
 (setf (gethash (lit "lefttackbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0318)))
 (setf (gethash (lit "less") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003C)))
 (setf (gethash (lit "lessequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2264)))
 (setf (gethash (lit "lessequalorgreater") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22DA)))
 (setf (gethash (lit "lessmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1C)))
 (setf (gethash (lit "lessorequivalent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2272)))
 (setf (gethash (lit "lessorgreater") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2276)))
 (setf (gethash (lit "lessoverequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2266)))
 (setf (gethash (lit "lesssmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE64)))
 (setf (gethash (lit "lezh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x026E)))
 (setf (gethash (lit "lfblock") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x258C)))
 (setf (gethash (lit "lhookretroflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x026D)))
 (setf (gethash (lit "lira") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A4)))
 (setf (gethash (lit "liwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056C)))
 (setf (gethash (lit "lj") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01C9)))
 (setf (gethash (lit "ljecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0459)))
 (setf (gethash (lit "ll") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6C0)))
 (setf (gethash (lit "lladeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0933)))
 (setf (gethash (lit "llagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB3)))
 (setf (gethash (lit "llinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3B)))
 (setf (gethash (lit "llladeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0934)))
 (setf (gethash (lit "llvocalicbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E1)))
 (setf (gethash (lit "llvocalicdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0961)))
 (setf (gethash (lit "llvocalicvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E3)))
 (setf (gethash (lit "llvocalicvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0963)))
 (setf (gethash (lit "lmiddletilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x026B)))
 (setf (gethash (lit "lmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4C)))
 (setf (gethash (lit "lmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D0)))
 (setf (gethash (lit "lochulathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2C)))
 (setf (gethash (lit "logicaland") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2227)))
 (setf (gethash (lit "logicalnot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AC)))
 (setf (gethash (lit "logicalnotreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2310)))
 (setf (gethash (lit "logicalor") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2228)))
 (setf (gethash (lit "lolingthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E25)))
 (setf (gethash (lit "longs") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017F)))
 (setf (gethash (lit "lowlinecenterline") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4E)))
 (setf (gethash (lit "lowlinecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0332)))
 (setf (gethash (lit "lowlinedashed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4D)))
 (setf (gethash (lit "lozenge") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CA)))
 (setf (gethash (lit "lparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A7)))
 (setf (gethash (lit "lslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0142)))
 (setf (gethash (lit "lsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2113)))
 (setf (gethash (lit "lsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6EE)))
 (setf (gethash (lit "ltshade") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2591)))
 (setf (gethash (lit "luthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E26)))
 (setf (gethash (lit "lvocalicbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x098C)))
 (setf (gethash (lit "lvocalicdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090C)))
 (setf (gethash (lit "lvocalicvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E2)))
 (setf (gethash (lit "lvocalicvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0962)))
 (setf (gethash (lit "lxsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D3)))
 (setf (gethash (lit "m") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006D)))
 (setf (gethash (lit "mabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AE)))
 (setf (gethash (lit "macron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AF)))
 (setf (gethash (lit "macronbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0331)))
 (setf (gethash (lit "macroncmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0304)))
 (setf (gethash (lit "macronlowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CD)))
 (setf (gethash (lit "macronmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFFE3)))
 (setf (gethash (lit "macute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E3F)))
 (setf (gethash (lit "madeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092E)))
 (setf (gethash (lit "magujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAE)))
 (setf (gethash (lit "magurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2E)))
 (setf (gethash (lit "mahapakhhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A4)))
 (setf (gethash (lit "mahapakhlefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A4)))
 (setf (gethash (lit "mahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307E)))
 (setf (gethash (lit "maichattawalowleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF895)))
 (setf (gethash (lit "maichattawalowrightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF894)))
 (setf (gethash (lit "maichattawathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4B)))
 (setf (gethash (lit "maichattawaupperleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF893)))
 (setf (gethash (lit "maieklowleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88C)))
 (setf (gethash (lit "maieklowrightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88B)))
 (setf (gethash (lit "maiekthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E48)))
 (setf (gethash (lit "maiekupperleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88A)))
 (setf (gethash (lit "maihanakatleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF884)))
 (setf (gethash (lit "maihanakatthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E31)))
 (setf (gethash (lit "maitaikhuleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF889)))
 (setf (gethash (lit "maitaikhuthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E47)))
 (setf (gethash (lit "maitholowleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88F)))
 (setf (gethash (lit "maitholowrightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88E)))
 (setf (gethash (lit "maithothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E49)))
 (setf (gethash (lit "maithoupperleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF88D)))
 (setf (gethash (lit "maitrilowleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF892)))
 (setf (gethash (lit "maitrilowrightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF891)))
 (setf (gethash (lit "maitrithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4A)))
 (setf (gethash (lit "maitriupperleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF890)))
 (setf (gethash (lit "maiyamokthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E46)))
 (setf (gethash (lit "makatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DE)))
 (setf (gethash (lit "makatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF8F)))
 (setf (gethash (lit "male") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2642)))
 (setf (gethash (lit "mansyonsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3347)))
 (setf (gethash (lit "maqafhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BE)))
 (setf (gethash (lit "mars") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2642)))
 (setf (gethash (lit "masoracirclehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AF)))
 (setf (gethash (lit "masquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3383)))
 (setf (gethash (lit "mbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3107)))
 (setf (gethash (lit "mbsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D4)))
 (setf (gethash (lit "mcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DC)))
 (setf (gethash (lit "mcubedsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A5)))
 (setf (gethash (lit "mdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E41)))
 (setf (gethash (lit "mdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E43)))
 (setf (gethash (lit "meemarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0645)))
 (setf (gethash (lit "meemfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE2)))
 (setf (gethash (lit "meeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE3)))
 (setf (gethash (lit "meemmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE4)))
 (setf (gethash (lit "meemmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCD1)))
 (setf (gethash (lit "meemmeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC48)))
 (setf (gethash (lit "meetorusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x334D)))
 (setf (gethash (lit "mehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3081)))
 (setf (gethash (lit "meizierasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x337E)))
 (setf (gethash (lit "mekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E1)))
 (setf (gethash (lit "mekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF92)))
 (setf (gethash (lit "mem") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DE)))
 (setf (gethash (lit "memdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3E)))
 (setf (gethash (lit "memdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB3E)))
 (setf (gethash (lit "memhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05DE)))
 (setf (gethash (lit "menarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0574)))
 (setf (gethash (lit "merkhahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A5)))
 (setf (gethash (lit "merkhakefulahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A6)))
 (setf (gethash (lit "merkhakefulalefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A6)))
 (setf (gethash (lit "merkhalefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A5)))
 (setf (gethash (lit "mhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0271)))
 (setf (gethash (lit "mhzsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3392)))
 (setf (gethash (lit "middledotkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF65)))
 (setf (gethash (lit "middot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B7)))
 (setf (gethash (lit "mieumacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3272)))
 (setf (gethash (lit "mieumaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3212)))
 (setf (gethash (lit "mieumcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3264)))
 (setf (gethash (lit "mieumkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3141)))
 (setf (gethash (lit "mieumpansioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3170)))
 (setf (gethash (lit "mieumparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3204)))
 (setf (gethash (lit "mieumpieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316E)))
 (setf (gethash (lit "mieumsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316F)))
 (setf (gethash (lit "mihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307F)))
 (setf (gethash (lit "mikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DF)))
 (setf (gethash (lit "mikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF90)))
 (setf (gethash (lit "minus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2212)))
 (setf (gethash (lit "minusbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0320)))
 (setf (gethash (lit "minuscircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2296)))
 (setf (gethash (lit "minusmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D7)))
 (setf (gethash (lit "minusplus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2213)))
 (setf (gethash (lit "minute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2032)))
 (setf (gethash (lit "miribaarusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x334A)))
 (setf (gethash (lit "mirisquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3349)))
 (setf (gethash (lit "mlonglegturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0270)))
 (setf (gethash (lit "mlsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3396)))
 (setf (gethash (lit "mmcubedsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A3)))
 (setf (gethash (lit "mmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4D)))
 (setf (gethash (lit "mmsquaredsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339F)))
 (setf (gethash (lit "mohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3082)))
 (setf (gethash (lit "mohmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C1)))
 (setf (gethash (lit "mokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E2)))
 (setf (gethash (lit "mokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF93)))
 (setf (gethash (lit "molsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D6)))
 (setf (gethash (lit "momathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E21)))
 (setf (gethash (lit "moverssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A7)))
 (setf (gethash (lit "moverssquaredsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A8)))
 (setf (gethash (lit "mparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A8)))
 (setf (gethash (lit "mpasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AB)))
 (setf (gethash (lit "mssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B3)))
 (setf (gethash (lit "msuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6EF)))
 (setf (gethash (lit "mturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x026F)))
 (setf (gethash (lit "mu") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B5)))
 (setf (gethash (lit "mu1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B5)))
 (setf (gethash (lit "muasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3382)))
 (setf (gethash (lit "muchgreater") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x226B)))
 (setf (gethash (lit "muchless") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x226A)))
 (setf (gethash (lit "mufsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338C)))
 (setf (gethash (lit "mugreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BC)))
 (setf (gethash (lit "mugsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338D)))
 (setf (gethash (lit "muhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3080)))
 (setf (gethash (lit "mukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E0)))
 (setf (gethash (lit "mukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF91)))
 (setf (gethash (lit "mulsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3395)))
 (setf (gethash (lit "multiply") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00D7)))
 (setf (gethash (lit "mumsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339B)))
 (setf (gethash (lit "munahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A3)))
 (setf (gethash (lit "munahlefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A3)))
 (setf (gethash (lit "musicalnote") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266A)))
 (setf (gethash (lit "musicalnotedbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266B)))
 (setf (gethash (lit "musicflatsign") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266D)))
 (setf (gethash (lit "musicsharpsign") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x266F)))
 (setf (gethash (lit "mussquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B2)))
 (setf (gethash (lit "muvsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B6)))
 (setf (gethash (lit "muwsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BC)))
 (setf (gethash (lit "mvmegasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B9)))
 (setf (gethash (lit "mvsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B7)))
 (setf (gethash (lit "mwmegasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BF)))
 (setf (gethash (lit "mwsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BD)))
 (setf (gethash (lit "n") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006E)))
 (setf (gethash (lit "nabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A8)))
 (setf (gethash (lit "nabla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2207)))
 (setf (gethash (lit "nacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0144)))
 (setf (gethash (lit "nadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0928)))
 (setf (gethash (lit "nagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA8)))
 (setf (gethash (lit "nagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A28)))
 (setf (gethash (lit "nahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306A)))
 (setf (gethash (lit "nakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CA)))
 (setf (gethash (lit "nakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF85)))
 (setf (gethash (lit "napostrophe") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0149)))
 (setf (gethash (lit "nasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3381)))
 (setf (gethash (lit "nbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310B)))
 (setf (gethash (lit "nbspace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A0)))
 (setf (gethash (lit "ncaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0148)))
 (setf (gethash (lit "ncedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0146)))
 (setf (gethash (lit "ncircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DD)))
 (setf (gethash (lit "ncircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4B)))
 (setf (gethash (lit "ncommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0146)))
 (setf (gethash (lit "ndotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E45)))
 (setf (gethash (lit "ndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E47)))
 (setf (gethash (lit "nehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306D)))
 (setf (gethash (lit "nekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CD)))
 (setf (gethash (lit "nekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF88)))
 (setf (gethash (lit "newsheqelsign") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AA)))
 (setf (gethash (lit "nfsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338B)))
 (setf (gethash (lit "ngabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0999)))
 (setf (gethash (lit "ngadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0919)))
 (setf (gethash (lit "ngagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A99)))
 (setf (gethash (lit "ngagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A19)))
 (setf (gethash (lit "ngonguthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E07)))
 (setf (gethash (lit "nhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3093)))
 (setf (gethash (lit "nhookleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0272)))
 (setf (gethash (lit "nhookretroflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0273)))
 (setf (gethash (lit "nieunacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326F)))
 (setf (gethash (lit "nieunaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320F)))
 (setf (gethash (lit "nieuncieuckorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3135)))
 (setf (gethash (lit "nieuncirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3261)))
 (setf (gethash (lit "nieunhieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3136)))
 (setf (gethash (lit "nieunkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3134)))
 (setf (gethash (lit "nieunpansioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3168)))
 (setf (gethash (lit "nieunparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3201)))
 (setf (gethash (lit "nieunsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3167)))
 (setf (gethash (lit "nieuntikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3166)))
 (setf (gethash (lit "nihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306B)))
 (setf (gethash (lit "nikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CB)))
 (setf (gethash (lit "nikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF86)))
 (setf (gethash (lit "nikhahitleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF899)))
 (setf (gethash (lit "nikhahitthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4D)))
 (setf (gethash (lit "nine") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0039)))
 (setf (gethash (lit "ninearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0669)))
 (setf (gethash (lit "ninebengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09EF)))
 (setf (gethash (lit "ninecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2468)))
 (setf (gethash (lit "ninecircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2792)))
 (setf (gethash (lit "ninedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096F)))
 (setf (gethash (lit "ninegujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AEF)))
 (setf (gethash (lit "ninegurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6F)))
 (setf (gethash (lit "ninehackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0669)))
 (setf (gethash (lit "ninehangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3029)))
 (setf (gethash (lit "nineideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3228)))
 (setf (gethash (lit "nineinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2089)))
 (setf (gethash (lit "ninemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF19)))
 (setf (gethash (lit "nineoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF739)))
 (setf (gethash (lit "nineparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247C)))
 (setf (gethash (lit "nineperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2490)))
 (setf (gethash (lit "ninepersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F9)))
 (setf (gethash (lit "nineroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2178)))
 (setf (gethash (lit "ninesuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2079)))
 (setf (gethash (lit "nineteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2472)))
 (setf (gethash (lit "nineteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2486)))
 (setf (gethash (lit "nineteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249A)))
 (setf (gethash (lit "ninethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E59)))
 (setf (gethash (lit "nj") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01CC)))
 (setf (gethash (lit "njecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045A)))
 (setf (gethash (lit "nkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F3)))
 (setf (gethash (lit "nkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9D)))
 (setf (gethash (lit "nlegrightlong") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x019E)))
 (setf (gethash (lit "nlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E49)))
 (setf (gethash (lit "nmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4E)))
 (setf (gethash (lit "nmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339A)))
 (setf (gethash (lit "nnabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A3)))
 (setf (gethash (lit "nnadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0923)))
 (setf (gethash (lit "nnagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA3)))
 (setf (gethash (lit "nnagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A23)))
 (setf (gethash (lit "nnnadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0929)))
 (setf (gethash (lit "nohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306E)))
 (setf (gethash (lit "nokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CE)))
 (setf (gethash (lit "nokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF89)))
 (setf (gethash (lit "nonbreakingspace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A0)))
 (setf (gethash (lit "nonenthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E13)))
 (setf (gethash (lit "nonuthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E19)))
 (setf (gethash (lit "noonarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0646)))
 (setf (gethash (lit "noonfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE6)))
 (setf (gethash (lit "noonghunnaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06BA)))
 (setf (gethash (lit "noonghunnafinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB9F)))
 (setf (gethash (lit "noonhehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE7)(code-char #xFEEC)))
 (setf (gethash (lit "nooninitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE7)))
 (setf (gethash (lit "noonjeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCD2)))
 (setf (gethash (lit "noonjeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC4B)))
 (setf (gethash (lit "noonmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEE8)))
 (setf (gethash (lit "noonmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCD5)))
 (setf (gethash (lit "noonmeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC4E)))
 (setf (gethash (lit "noonnoonfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC8D)))
 (setf (gethash (lit "notcontains") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x220C)))
 (setf (gethash (lit "notelement") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2209)))
 (setf (gethash (lit "notelementof") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2209)))
 (setf (gethash (lit "notequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2260)))
 (setf (gethash (lit "notgreater") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x226F)))
 (setf (gethash (lit "notgreaternorequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2271)))
 (setf (gethash (lit "notgreaternorless") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2279)))
 (setf (gethash (lit "notidentical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2262)))
 (setf (gethash (lit "notless") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x226E)))
 (setf (gethash (lit "notlessnorequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2270)))
 (setf (gethash (lit "notparallel") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2226)))
 (setf (gethash (lit "notprecedes") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2280)))
 (setf (gethash (lit "notsubset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2284)))
 (setf (gethash (lit "notsucceeds") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2281)))
 (setf (gethash (lit "notsuperset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2285)))
 (setf (gethash (lit "nowarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0576)))
 (setf (gethash (lit "nparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24A9)))
 (setf (gethash (lit "nssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B1)))
 (setf (gethash (lit "nsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x207F)))
 (setf (gethash (lit "ntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F1)))
 (setf (gethash (lit "nu") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BD)))
 (setf (gethash (lit "nuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x306C)))
 (setf (gethash (lit "nukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30CC)))
 (setf (gethash (lit "nukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF87)))
 (setf (gethash (lit "nuktabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09BC)))
 (setf (gethash (lit "nuktadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x093C)))
 (setf (gethash (lit "nuktagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ABC)))
 (setf (gethash (lit "nuktagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A3C)))
 (setf (gethash (lit "numbersign") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0023)))
 (setf (gethash (lit "numbersignmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF03)))
 (setf (gethash (lit "numbersignsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5F)))
 (setf (gethash (lit "numeralsigngreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0374)))
 (setf (gethash (lit "numeralsignlowergreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0375)))
 (setf (gethash (lit "numero") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2116)))
 (setf (gethash (lit "nun") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E0)))
 (setf (gethash (lit "nundagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB40)))
 (setf (gethash (lit "nundageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB40)))
 (setf (gethash (lit "nunhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E0)))
 (setf (gethash (lit "nvsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B5)))
 (setf (gethash (lit "nwsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BB)))
 (setf (gethash (lit "nyabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099E)))
 (setf (gethash (lit "nyadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091E)))
 (setf (gethash (lit "nyagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9E)))
 (setf (gethash (lit "nyagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1E)))
 (setf (gethash (lit "o") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x006F)))
 (setf (gethash (lit "oacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F3)))
 (setf (gethash (lit "oangthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2D)))
 (setf (gethash (lit "obarred") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0275)))
 (setf (gethash (lit "obarredcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E9)))
 (setf (gethash (lit "obarreddieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04EB)))
 (setf (gethash (lit "obengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0993)))
 (setf (gethash (lit "obopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x311B)))
 (setf (gethash (lit "obreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014F)))
 (setf (gethash (lit "ocandradeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0911)))
 (setf (gethash (lit "ocandragujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A91)))
 (setf (gethash (lit "ocandravowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0949)))
 (setf (gethash (lit "ocandravowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC9)))
 (setf (gethash (lit "ocaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D2)))
 (setf (gethash (lit "ocircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DE)))
 (setf (gethash (lit "ocircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F4)))
 (setf (gethash (lit "ocircumflexacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED1)))
 (setf (gethash (lit "ocircumflexdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED9)))
 (setf (gethash (lit "ocircumflexgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED3)))
 (setf (gethash (lit "ocircumflexhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED5)))
 (setf (gethash (lit "ocircumflextilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ED7)))
 (setf (gethash (lit "ocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043E)))
 (setf (gethash (lit "odblacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0151)))
 (setf (gethash (lit "odblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020D)))
 (setf (gethash (lit "odeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0913)))
 (setf (gethash (lit "odieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F6)))
 (setf (gethash (lit "odieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04E7)))
 (setf (gethash (lit "odotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECD)))
 (setf (gethash (lit "oe") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0153)))
 (setf (gethash (lit "oekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315A)))
 (setf (gethash (lit "ogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DB)))
 (setf (gethash (lit "ogonekcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0328)))
 (setf (gethash (lit "ograve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F2)))
 (setf (gethash (lit "ogujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A93)))
 (setf (gethash (lit "oharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0585)))
 (setf (gethash (lit "ohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x304A)))
 (setf (gethash (lit "ohookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1ECF)))
 (setf (gethash (lit "ohorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A1)))
 (setf (gethash (lit "ohornacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDB)))
 (setf (gethash (lit "ohorndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE3)))
 (setf (gethash (lit "ohorngrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDD)))
 (setf (gethash (lit "ohornhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EDF)))
 (setf (gethash (lit "ohorntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE1)))
 (setf (gethash (lit "ohungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0151)))
 (setf (gethash (lit "oi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A3)))
 (setf (gethash (lit "oinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x020F)))
 (setf (gethash (lit "okatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30AA)))
 (setf (gethash (lit "okatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF75)))
 (setf (gethash (lit "okorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3157)))
 (setf (gethash (lit "olehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AB)))
 (setf (gethash (lit "omacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x014D)))
 (setf (gethash (lit "omacronacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E53)))
 (setf (gethash (lit "omacrongrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E51)))
 (setf (gethash (lit "omdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0950)))
 (setf (gethash (lit "omega") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C9)))
 (setf (gethash (lit "omega1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D6)))
 (setf (gethash (lit "omegacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0461)))
 (setf (gethash (lit "omegalatinclosed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0277)))
 (setf (gethash (lit "omegaroundcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047B)))
 (setf (gethash (lit "omegatitlocyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047D)))
 (setf (gethash (lit "omegatonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03CE)))
 (setf (gethash (lit "omgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AD0)))
 (setf (gethash (lit "omicron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BF)))
 (setf (gethash (lit "omicrontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03CC)))
 (setf (gethash (lit "omonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF4F)))
 (setf (gethash (lit "one") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0031)))
 (setf (gethash (lit "onearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0661)))
 (setf (gethash (lit "onebengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E7)))
 (setf (gethash (lit "onecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2460)))
 (setf (gethash (lit "onecircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278A)))
 (setf (gethash (lit "onedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0967)))
 (setf (gethash (lit "onedotenleader") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2024)))
 (setf (gethash (lit "oneeighth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x215B)))
 (setf (gethash (lit "onefitted") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DC)))
 (setf (gethash (lit "onegujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AE7)))
 (setf (gethash (lit "onegurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A67)))
 (setf (gethash (lit "onehackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0661)))
 (setf (gethash (lit "onehalf") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BD)))
 (setf (gethash (lit "onehangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3021)))
 (setf (gethash (lit "oneideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3220)))
 (setf (gethash (lit "oneinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2081)))
 (setf (gethash (lit "onemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF11)))
 (setf (gethash (lit "onenumeratorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F4)))
 (setf (gethash (lit "oneoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF731)))
 (setf (gethash (lit "oneparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2474)))
 (setf (gethash (lit "oneperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2488)))
 (setf (gethash (lit "onepersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F1)))
 (setf (gethash (lit "onequarter") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BC)))
 (setf (gethash (lit "oneroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2170)))
 (setf (gethash (lit "onesuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B9)))
 (setf (gethash (lit "onethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E51)))
 (setf (gethash (lit "onethird") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2153)))
 (setf (gethash (lit "oogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01EB)))
 (setf (gethash (lit "oogonekmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01ED)))
 (setf (gethash (lit "oogurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A13)))
 (setf (gethash (lit "oomatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A4B)))
 (setf (gethash (lit "oopen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0254)))
 (setf (gethash (lit "oparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AA)))
 (setf (gethash (lit "openbullet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E6)))
 (setf (gethash (lit "option") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2325)))
 (setf (gethash (lit "ordfeminine") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AA)))
 (setf (gethash (lit "ordmasculine") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BA)))
 (setf (gethash (lit "orthogonal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x221F)))
 (setf (gethash (lit "oshortdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0912)))
 (setf (gethash (lit "oshortvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x094A)))
 (setf (gethash (lit "oslash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F8)))
 (setf (gethash (lit "oslashacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FF)))
 (setf (gethash (lit "osmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3049)))
 (setf (gethash (lit "osmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A9)))
 (setf (gethash (lit "osmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6B)))
 (setf (gethash (lit "ostrokeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01FF)))
 (setf (gethash (lit "osuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F0)))
 (setf (gethash (lit "otcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x047F)))
 (setf (gethash (lit "otilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F5)))
 (setf (gethash (lit "otildeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4D)))
 (setf (gethash (lit "otildedieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E4F)))
 (setf (gethash (lit "oubopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3121)))
 (setf (gethash (lit "overline") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x203E)))
 (setf (gethash (lit "overlinecenterline") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4A)))
 (setf (gethash (lit "overlinecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0305)))
 (setf (gethash (lit "overlinedashed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE49)))
 (setf (gethash (lit "overlinedblwavy") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4C)))
 (setf (gethash (lit "overlinewavy") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4B)))
 (setf (gethash (lit "overscore") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AF)))
 (setf (gethash (lit "ovowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09CB)))
 (setf (gethash (lit "ovowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x094B)))
 (setf (gethash (lit "ovowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ACB)))
 (setf (gethash (lit "p") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0070)))
 (setf (gethash (lit "paampssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3380)))
 (setf (gethash (lit "paasentosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x332B)))
 (setf (gethash (lit "pabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AA)))
 (setf (gethash (lit "pacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E55)))
 (setf (gethash (lit "padeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092A)))
 (setf (gethash (lit "pagedown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21DF)))
 (setf (gethash (lit "pageup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x21DE)))
 (setf (gethash (lit "pagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAA)))
 (setf (gethash (lit "pagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2A)))
 (setf (gethash (lit "pahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3071)))
 (setf (gethash (lit "paiyannoithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2F)))
 (setf (gethash (lit "pakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D1)))
 (setf (gethash (lit "palatalizationcyrilliccmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0484)))
 (setf (gethash (lit "palochkacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C0)))
 (setf (gethash (lit "pansioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317F)))
 (setf (gethash (lit "paragraph") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B6)))
 (setf (gethash (lit "parallel") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2225)))
 (setf (gethash (lit "parenleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0028)))
 (setf (gethash (lit "parenleftaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFD3E)))
 (setf (gethash (lit "parenleftbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8ED)))
 (setf (gethash (lit "parenleftex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8EC)))
 (setf (gethash (lit "parenleftinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x208D)))
 (setf (gethash (lit "parenleftmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF08)))
 (setf (gethash (lit "parenleftsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE59)))
 (setf (gethash (lit "parenleftsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x207D)))
 (setf (gethash (lit "parenlefttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8EB)))
 (setf (gethash (lit "parenleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE35)))
 (setf (gethash (lit "parenright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0029)))
 (setf (gethash (lit "parenrightaltonearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFD3F)))
 (setf (gethash (lit "parenrightbt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F8)))
 (setf (gethash (lit "parenrightex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F7)))
 (setf (gethash (lit "parenrightinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x208E)))
 (setf (gethash (lit "parenrightmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF09)))
 (setf (gethash (lit "parenrightsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5A)))
 (setf (gethash (lit "parenrightsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x207E)))
 (setf (gethash (lit "parenrighttp") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8F6)))
 (setf (gethash (lit "parenrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE36)))
 (setf (gethash (lit "partialdiff") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2202)))
 (setf (gethash (lit "paseqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C0)))
 (setf (gethash (lit "pashtahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0599)))
 (setf (gethash (lit "pasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A9)))
 (setf (gethash (lit "patah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patah11") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patah1d") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patah2a") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patahnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patahquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "patahwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B7)))
 (setf (gethash (lit "pazerhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A1)))
 (setf (gethash (lit "pbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3106)))
 (setf (gethash (lit "pcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24DF)))
 (setf (gethash (lit "pdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E57)))
 (setf (gethash (lit "pe") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E4)))
 (setf (gethash (lit "pecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x043F)))
 (setf (gethash (lit "pedagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB44)))
 (setf (gethash (lit "pedageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB44)))
 (setf (gethash (lit "peezisquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x333B)))
 (setf (gethash (lit "pefinaldageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB43)))
 (setf (gethash (lit "peharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x067E)))
 (setf (gethash (lit "peharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057A)))
 (setf (gethash (lit "pehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E4)))
 (setf (gethash (lit "pehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB57)))
 (setf (gethash (lit "pehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB58)))
 (setf (gethash (lit "pehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307A)))
 (setf (gethash (lit "pehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB59)))
 (setf (gethash (lit "pekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DA)))
 (setf (gethash (lit "pemiddlehookcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04A7)))
 (setf (gethash (lit "perafehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4E)))
 (setf (gethash (lit "percent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0025)))
 (setf (gethash (lit "percentarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066A)))
 (setf (gethash (lit "percentmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF05)))
 (setf (gethash (lit "percentsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE6A)))
 (setf (gethash (lit "period") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002E)))
 (setf (gethash (lit "periodarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0589)))
 (setf (gethash (lit "periodcentered") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B7)))
 (setf (gethash (lit "periodhalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF61)))
 (setf (gethash (lit "periodinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E7)))
 (setf (gethash (lit "periodmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0E)))
 (setf (gethash (lit "periodsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE52)))
 (setf (gethash (lit "periodsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6E8)))
 (setf (gethash (lit "perispomenigreekcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0342)))
 (setf (gethash (lit "perpendicular") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22A5)))
 (setf (gethash (lit "perthousand") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2030)))
 (setf (gethash (lit "peseta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A7)))
 (setf (gethash (lit "pfsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338A)))
 (setf (gethash (lit "phabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AB)))
 (setf (gethash (lit "phadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092B)))
 (setf (gethash (lit "phagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAB)))
 (setf (gethash (lit "phagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2B)))
 (setf (gethash (lit "phi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C6)))
 (setf (gethash (lit "phi1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D5)))
 (setf (gethash (lit "phieuphacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x327A)))
 (setf (gethash (lit "phieuphaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x321A)))
 (setf (gethash (lit "phieuphcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326C)))
 (setf (gethash (lit "phieuphkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314D)))
 (setf (gethash (lit "phieuphparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320C)))
 (setf (gethash (lit "philatin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0278)))
 (setf (gethash (lit "phinthuthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E3A)))
 (setf (gethash (lit "phisymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D5)))
 (setf (gethash (lit "phook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A5)))
 (setf (gethash (lit "phophanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1E)))
 (setf (gethash (lit "phophungthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1C)))
 (setf (gethash (lit "phosamphaothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E20)))
 (setf (gethash (lit "pi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C0)))
 (setf (gethash (lit "pieupacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3273)))
 (setf (gethash (lit "pieupaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3213)))
 (setf (gethash (lit "pieupcieuckorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3176)))
 (setf (gethash (lit "pieupcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3265)))
 (setf (gethash (lit "pieupkiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3172)))
 (setf (gethash (lit "pieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3142)))
 (setf (gethash (lit "pieupparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3205)))
 (setf (gethash (lit "pieupsioskiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3174)))
 (setf (gethash (lit "pieupsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3144)))
 (setf (gethash (lit "pieupsiostikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3175)))
 (setf (gethash (lit "pieupthieuthkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3177)))
 (setf (gethash (lit "pieuptikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3173)))
 (setf (gethash (lit "pihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3074)))
 (setf (gethash (lit "pikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D4)))
 (setf (gethash (lit "pisymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D6)))
 (setf (gethash (lit "piwrarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0583)))
 (setf (gethash (lit "plus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002B)))
 (setf (gethash (lit "plusbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031F)))
 (setf (gethash (lit "pluscircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2295)))
 (setf (gethash (lit "plusminus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B1)))
 (setf (gethash (lit "plusmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D6)))
 (setf (gethash (lit "plusmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0B)))
 (setf (gethash (lit "plussmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE62)))
 (setf (gethash (lit "plussuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x207A)))
 (setf (gethash (lit "pmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF50)))
 (setf (gethash (lit "pmsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D8)))
 (setf (gethash (lit "pohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x307D)))
 (setf (gethash (lit "pointingindexdownwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x261F)))
 (setf (gethash (lit "pointingindexleftwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x261C)))
 (setf (gethash (lit "pointingindexrightwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x261E)))
 (setf (gethash (lit "pointingindexupwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x261D)))
 (setf (gethash (lit "pokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30DD)))
 (setf (gethash (lit "poplathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E1B)))
 (setf (gethash (lit "postalmark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3012)))
 (setf (gethash (lit "postalmarkface") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3020)))
 (setf (gethash (lit "pparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AB)))
 (setf (gethash (lit "precedes") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x227A)))
 (setf (gethash (lit "prescription") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x211E)))
 (setf (gethash (lit "primemod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B9)))
 (setf (gethash (lit "primereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2035)))
 (setf (gethash (lit "product") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x220F)))
 (setf (gethash (lit "projective") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2305)))
 (setf (gethash (lit "prolongedkana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30FC)))
 (setf (gethash (lit "propellor") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2318)))
 (setf (gethash (lit "propersubset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2282)))
 (setf (gethash (lit "propersuperset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2283)))
 (setf (gethash (lit "proportion") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2237)))
 (setf (gethash (lit "proportional") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x221D)))
 (setf (gethash (lit "psi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C8)))
 (setf (gethash (lit "psicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0471)))
 (setf (gethash (lit "psilipneumatacyrilliccmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0486)))
 (setf (gethash (lit "pssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B0)))
 (setf (gethash (lit "puhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3077)))
 (setf (gethash (lit "pukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30D7)))
 (setf (gethash (lit "pvsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33B4)))
 (setf (gethash (lit "pwsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33BA)))
 (setf (gethash (lit "q") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0071)))
 (setf (gethash (lit "qadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0958)))
 (setf (gethash (lit "qadmahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A8)))
 (setf (gethash (lit "qafarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0642)))
 (setf (gethash (lit "qaffinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED6)))
 (setf (gethash (lit "qafinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED7)))
 (setf (gethash (lit "qafmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFED8)))
 (setf (gethash (lit "qamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats10") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats1a") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats1c") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats27") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats29") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamats33") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsqatanhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsqatannarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsqatanquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsqatanwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatsquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qamatswidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B8)))
 (setf (gethash (lit "qarneyparahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059F)))
 (setf (gethash (lit "qbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3111)))
 (setf (gethash (lit "qcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E0)))
 (setf (gethash (lit "qhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A0)))
 (setf (gethash (lit "qmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF51)))
 (setf (gethash (lit "qof") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)))
 (setf (gethash (lit "qofdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB47)))
 (setf (gethash (lit "qofdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB47)))
 (setf (gethash (lit "qofhatafpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B2)))
 (setf (gethash (lit "qofhatafpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B2)))
 (setf (gethash (lit "qofhatafsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B1)))
 (setf (gethash (lit "qofhatafsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B1)))
 (setf (gethash (lit "qofhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)))
 (setf (gethash (lit "qofhiriq") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B4)))
 (setf (gethash (lit "qofhiriqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B4)))
 (setf (gethash (lit "qofholam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B9)))
 (setf (gethash (lit "qofholamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B9)))
 (setf (gethash (lit "qofpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B7)))
 (setf (gethash (lit "qofpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B7)))
 (setf (gethash (lit "qofqamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B8)))
 (setf (gethash (lit "qofqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B8)))
 (setf (gethash (lit "qofqubuts") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05BB)))
 (setf (gethash (lit "qofqubutshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05BB)))
 (setf (gethash (lit "qofsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B6)))
 (setf (gethash (lit "qofsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B6)))
 (setf (gethash (lit "qofsheva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B0)))
 (setf (gethash (lit "qofshevahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B0)))
 (setf (gethash (lit "qoftsere") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B5)))
 (setf (gethash (lit "qoftserehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E7)(code-char #x05B5)))
 (setf (gethash (lit "qparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AC)))
 (setf (gethash (lit "quarternote") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2669)))
 (setf (gethash (lit "qubuts") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubuts18") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubuts25") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubuts31") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubutshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubutsnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubutsquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "qubutswidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BB)))
 (setf (gethash (lit "question") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003F)))
 (setf (gethash (lit "questionarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x061F)))
 (setf (gethash (lit "questionarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x055E)))
 (setf (gethash (lit "questiondown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BF)))
 (setf (gethash (lit "questiondownsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF7BF)))
 (setf (gethash (lit "questiongreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x037E)))
 (setf (gethash (lit "questionmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1F)))
 (setf (gethash (lit "questionsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF73F)))
 (setf (gethash (lit "quotedbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0022)))
 (setf (gethash (lit "quotedblbase") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201E)))
 (setf (gethash (lit "quotedblleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201C)))
 (setf (gethash (lit "quotedblmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF02)))
 (setf (gethash (lit "quotedblprime") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x301E)))
 (setf (gethash (lit "quotedblprimereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x301D)))
 (setf (gethash (lit "quotedblright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201D)))
 (setf (gethash (lit "quoteleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2018)))
 (setf (gethash (lit "quoteleftreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201B)))
 (setf (gethash (lit "quotereversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201B)))
 (setf (gethash (lit "quoteright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2019)))
 (setf (gethash (lit "quoterightn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0149)))
 (setf (gethash (lit "quotesinglbase") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x201A)))
 (setf (gethash (lit "quotesingle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0027)))
 (setf (gethash (lit "quotesinglemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF07)))
 (setf (gethash (lit "r") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0072)))
 (setf (gethash (lit "raarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057C)))
 (setf (gethash (lit "rabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B0)))
 (setf (gethash (lit "racute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0155)))
 (setf (gethash (lit "radeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0930)))
 (setf (gethash (lit "radical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x221A)))
 (setf (gethash (lit "radicalex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8E5)))
 (setf (gethash (lit "radoverssquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AE)))
 (setf (gethash (lit "radoverssquaredsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AF)))
 (setf (gethash (lit "radsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33AD)))
 (setf (gethash (lit "rafe") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BF)))
 (setf (gethash (lit "rafehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BF)))
 (setf (gethash (lit "ragujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB0)))
 (setf (gethash (lit "ragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A30)))
 (setf (gethash (lit "rahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3089)))
 (setf (gethash (lit "rakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E9)))
 (setf (gethash (lit "rakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF97)))
 (setf (gethash (lit "ralowerdiagonalbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F1)))
 (setf (gethash (lit "ramiddlediagonalbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F0)))
 (setf (gethash (lit "ramshorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0264)))
 (setf (gethash (lit "ratio") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2236)))
 (setf (gethash (lit "rbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3116)))
 (setf (gethash (lit "rcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0159)))
 (setf (gethash (lit "rcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0157)))
 (setf (gethash (lit "rcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E1)))
 (setf (gethash (lit "rcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0157)))
 (setf (gethash (lit "rdblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0211)))
 (setf (gethash (lit "rdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E59)))
 (setf (gethash (lit "rdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5B)))
 (setf (gethash (lit "rdotbelowmacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5D)))
 (setf (gethash (lit "referencemark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x203B)))
 (setf (gethash (lit "reflexsubset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2286)))
 (setf (gethash (lit "reflexsuperset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2287)))
 (setf (gethash (lit "registered") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AE)))
 (setf (gethash (lit "registersans") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8E8)))
 (setf (gethash (lit "registerserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DA)))
 (setf (gethash (lit "reharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0631)))
 (setf (gethash (lit "reharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0580)))
 (setf (gethash (lit "rehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEAE)))
 (setf (gethash (lit "rehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308C)))
 (setf (gethash (lit "rehyehaleflamarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0631)(code-char #xFEF3)(code-char #xFE8E)(code-char #x0644)))
 (setf (gethash (lit "rekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30EC)))
 (setf (gethash (lit "rekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9A)))
 (setf (gethash (lit "resh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)))
 (setf (gethash (lit "reshdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB48)))
 (setf (gethash (lit "reshhatafpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B2)))
 (setf (gethash (lit "reshhatafpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B2)))
 (setf (gethash (lit "reshhatafsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B1)))
 (setf (gethash (lit "reshhatafsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B1)))
 (setf (gethash (lit "reshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)))
 (setf (gethash (lit "reshhiriq") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B4)))
 (setf (gethash (lit "reshhiriqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B4)))
 (setf (gethash (lit "reshholam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B9)))
 (setf (gethash (lit "reshholamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B9)))
 (setf (gethash (lit "reshpatah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B7)))
 (setf (gethash (lit "reshpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B7)))
 (setf (gethash (lit "reshqamats") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B8)))
 (setf (gethash (lit "reshqamatshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B8)))
 (setf (gethash (lit "reshqubuts") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05BB)))
 (setf (gethash (lit "reshqubutshebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05BB)))
 (setf (gethash (lit "reshsegol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B6)))
 (setf (gethash (lit "reshsegolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B6)))
 (setf (gethash (lit "reshsheva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B0)))
 (setf (gethash (lit "reshshevahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B0)))
 (setf (gethash (lit "reshtsere") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B5)))
 (setf (gethash (lit "reshtserehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E8)(code-char #x05B5)))
 (setf (gethash (lit "reversedtilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x223D)))
 (setf (gethash (lit "reviahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0597)))
 (setf (gethash (lit "reviamugrashhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0597)))
 (setf (gethash (lit "revlogicalnot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2310)))
 (setf (gethash (lit "rfishhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027E)))
 (setf (gethash (lit "rfishhookreversed") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027F)))
 (setf (gethash (lit "rhabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09DD)))
 (setf (gethash (lit "rhadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095D)))
 (setf (gethash (lit "rho") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C1)))
 (setf (gethash (lit "rhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027D)))
 (setf (gethash (lit "rhookturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027B)))
 (setf (gethash (lit "rhookturnedsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B5)))
 (setf (gethash (lit "rhosymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03F1)))
 (setf (gethash (lit "rhotichookmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DE)))
 (setf (gethash (lit "rieulacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3271)))
 (setf (gethash (lit "rieulaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3211)))
 (setf (gethash (lit "rieulcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3263)))
 (setf (gethash (lit "rieulhieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3140)))
 (setf (gethash (lit "rieulkiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313A)))
 (setf (gethash (lit "rieulkiyeoksioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3169)))
 (setf (gethash (lit "rieulkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3139)))
 (setf (gethash (lit "rieulmieumkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313B)))
 (setf (gethash (lit "rieulpansioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316C)))
 (setf (gethash (lit "rieulparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3203)))
 (setf (gethash (lit "rieulphieuphkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313F)))
 (setf (gethash (lit "rieulpieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313C)))
 (setf (gethash (lit "rieulpieupsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316B)))
 (setf (gethash (lit "rieulsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313D)))
 (setf (gethash (lit "rieulthieuthkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x313E)))
 (setf (gethash (lit "rieultikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316A)))
 (setf (gethash (lit "rieulyeorinhieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x316D)))
 (setf (gethash (lit "rightangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x221F)))
 (setf (gethash (lit "righttackbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0319)))
 (setf (gethash (lit "righttriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22BF)))
 (setf (gethash (lit "rihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308A)))
 (setf (gethash (lit "rikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30EA)))
 (setf (gethash (lit "rikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF98)))
 (setf (gethash (lit "ring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DA)))
 (setf (gethash (lit "ringbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0325)))
 (setf (gethash (lit "ringcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030A)))
 (setf (gethash (lit "ringhalfleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BF)))
 (setf (gethash (lit "ringhalfleftarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0559)))
 (setf (gethash (lit "ringhalfleftbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031C)))
 (setf (gethash (lit "ringhalfleftcentered") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D3)))
 (setf (gethash (lit "ringhalfright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02BE)))
 (setf (gethash (lit "ringhalfrightbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0339)))
 (setf (gethash (lit "ringhalfrightcentered") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D2)))
 (setf (gethash (lit "rinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0213)))
 (setf (gethash (lit "rittorusquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3351)))
 (setf (gethash (lit "rlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E5F)))
 (setf (gethash (lit "rlongleg") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027C)))
 (setf (gethash (lit "rlonglegturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x027A)))
 (setf (gethash (lit "rmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF52)))
 (setf (gethash (lit "rohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308D)))
 (setf (gethash (lit "rokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30ED)))
 (setf (gethash (lit "rokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9B)))
 (setf (gethash (lit "roruathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E23)))
 (setf (gethash (lit "rparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AD)))
 (setf (gethash (lit "rrabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09DC)))
 (setf (gethash (lit "rradeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0931)))
 (setf (gethash (lit "rragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A5C)))
 (setf (gethash (lit "rreharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0691)))
 (setf (gethash (lit "rrehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB8D)))
 (setf (gethash (lit "rrvocalicbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E0)))
 (setf (gethash (lit "rrvocalicdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0960)))
 (setf (gethash (lit "rrvocalicgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AE0)))
 (setf (gethash (lit "rrvocalicvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C4)))
 (setf (gethash (lit "rrvocalicvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0944)))
 (setf (gethash (lit "rrvocalicvowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC4)))
 (setf (gethash (lit "rsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F1)))
 (setf (gethash (lit "rtblock") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2590)))
 (setf (gethash (lit "rturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0279)))
 (setf (gethash (lit "rturnedsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B4)))
 (setf (gethash (lit "ruhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308B)))
 (setf (gethash (lit "rukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30EB)))
 (setf (gethash (lit "rukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF99)))
 (setf (gethash (lit "rupeemarkbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F2)))
 (setf (gethash (lit "rupeesignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F3)))
 (setf (gethash (lit "rupiah") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DD)))
 (setf (gethash (lit "ruthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E24)))
 (setf (gethash (lit "rvocalicbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x098B)))
 (setf (gethash (lit "rvocalicdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090B)))
 (setf (gethash (lit "rvocalicgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A8B)))
 (setf (gethash (lit "rvocalicvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C3)))
 (setf (gethash (lit "rvocalicvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0943)))
 (setf (gethash (lit "rvocalicvowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC3)))
 (setf (gethash (lit "s") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0073)))
 (setf (gethash (lit "sabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B8)))
 (setf (gethash (lit "sacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015B)))
 (setf (gethash (lit "sacutedotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E65)))
 (setf (gethash (lit "sadarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0635)))
 (setf (gethash (lit "sadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0938)))
 (setf (gethash (lit "sadfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEBA)))
 (setf (gethash (lit "sadinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEBB)))
 (setf (gethash (lit "sadmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEBC)))
 (setf (gethash (lit "sagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB8)))
 (setf (gethash (lit "sagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A38)))
 (setf (gethash (lit "sahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3055)))
 (setf (gethash (lit "sakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B5)))
 (setf (gethash (lit "sakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7B)))
 (setf (gethash (lit "sallallahoualayhewasallamarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFDFA)))
 (setf (gethash (lit "samekh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E1)))
 (setf (gethash (lit "samekhdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB41)))
 (setf (gethash (lit "samekhdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB41)))
 (setf (gethash (lit "samekhhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E1)))
 (setf (gethash (lit "saraaathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E32)))
 (setf (gethash (lit "saraaethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E41)))
 (setf (gethash (lit "saraaimaimalaithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E44)))
 (setf (gethash (lit "saraaimaimuanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E43)))
 (setf (gethash (lit "saraamthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E33)))
 (setf (gethash (lit "saraathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E30)))
 (setf (gethash (lit "saraethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E40)))
 (setf (gethash (lit "saraiileftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF886)))
 (setf (gethash (lit "saraiithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E35)))
 (setf (gethash (lit "saraileftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF885)))
 (setf (gethash (lit "saraithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E34)))
 (setf (gethash (lit "saraothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E42)))
 (setf (gethash (lit "saraueeleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF888)))
 (setf (gethash (lit "saraueethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E37)))
 (setf (gethash (lit "saraueleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF887)))
 (setf (gethash (lit "sarauethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E36)))
 (setf (gethash (lit "sarauthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E38)))
 (setf (gethash (lit "sarauuthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E39)))
 (setf (gethash (lit "sbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3119)))
 (setf (gethash (lit "scaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0161)))
 (setf (gethash (lit "scarondotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E67)))
 (setf (gethash (lit "scedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015F)))
 (setf (gethash (lit "schwa") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0259)))
 (setf (gethash (lit "schwacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04D9)))
 (setf (gethash (lit "schwadieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DB)))
 (setf (gethash (lit "schwahook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x025A)))
 (setf (gethash (lit "scircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E2)))
 (setf (gethash (lit "scircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x015D)))
 (setf (gethash (lit "scommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0219)))
 (setf (gethash (lit "sdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E61)))
 (setf (gethash (lit "sdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E63)))
 (setf (gethash (lit "sdotbelowdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E69)))
 (setf (gethash (lit "seagullbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033C)))
 (setf (gethash (lit "second") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2033)))
 (setf (gethash (lit "secondtonechinese") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CA)))
 (setf (gethash (lit "section") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A7)))
 (setf (gethash (lit "seenarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0633)))
 (setf (gethash (lit "seenfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB2)))
 (setf (gethash (lit "seeninitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB3)))
 (setf (gethash (lit "seenmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB4)))
 (setf (gethash (lit "segol") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segol13") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segol1f") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segol2c") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segolnarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segolquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "segoltahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0592)))
 (setf (gethash (lit "segolwidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B6)))
 (setf (gethash (lit "seharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057D)))
 (setf (gethash (lit "sehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305B)))
 (setf (gethash (lit "sekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BB)))
 (setf (gethash (lit "sekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7E)))
 (setf (gethash (lit "semicolon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x003B)))
 (setf (gethash (lit "semicolonarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x061B)))
 (setf (gethash (lit "semicolonmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF1B)))
 (setf (gethash (lit "semicolonsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE54)))
 (setf (gethash (lit "semivoicedmarkkana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x309C)))
 (setf (gethash (lit "semivoicedmarkkanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9F)))
 (setf (gethash (lit "sentisquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3322)))
 (setf (gethash (lit "sentosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3323)))
 (setf (gethash (lit "seven") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0037)))
 (setf (gethash (lit "sevenarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0667)))
 (setf (gethash (lit "sevenbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09ED)))
 (setf (gethash (lit "sevencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2466)))
 (setf (gethash (lit "sevencircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2790)))
 (setf (gethash (lit "sevendeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096D)))
 (setf (gethash (lit "seveneighths") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x215E)))
 (setf (gethash (lit "sevengujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AED)))
 (setf (gethash (lit "sevengurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6D)))
 (setf (gethash (lit "sevenhackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0667)))
 (setf (gethash (lit "sevenhangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3027)))
 (setf (gethash (lit "sevenideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3226)))
 (setf (gethash (lit "seveninferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2087)))
 (setf (gethash (lit "sevenmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF17)))
 (setf (gethash (lit "sevenoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF737)))
 (setf (gethash (lit "sevenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247A)))
 (setf (gethash (lit "sevenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248E)))
 (setf (gethash (lit "sevenpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F7)))
 (setf (gethash (lit "sevenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2176)))
 (setf (gethash (lit "sevensuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2077)))
 (setf (gethash (lit "seventeencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2470)))
 (setf (gethash (lit "seventeenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2484)))
 (setf (gethash (lit "seventeenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2498)))
 (setf (gethash (lit "seventhai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E57)))
 (setf (gethash (lit "sfthyphen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AD)))
 (setf (gethash (lit "shaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0577)))
 (setf (gethash (lit "shabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B6)))
 (setf (gethash (lit "shacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0448)))
 (setf (gethash (lit "shaddaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0651)))
 (setf (gethash (lit "shaddadammaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC61)))
 (setf (gethash (lit "shaddadammatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC5E)))
 (setf (gethash (lit "shaddafathaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC60)))
 (setf (gethash (lit "shaddafathatanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0651)(code-char #x064B)))
 (setf (gethash (lit "shaddakasraarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC62)))
 (setf (gethash (lit "shaddakasratanarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC5F)))
 (setf (gethash (lit "shade") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2592)))
 (setf (gethash (lit "shadedark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2593)))
 (setf (gethash (lit "shadelight") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2591)))
 (setf (gethash (lit "shademedium") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2592)))
 (setf (gethash (lit "shadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0936)))
 (setf (gethash (lit "shagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB6)))
 (setf (gethash (lit "shagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A36)))
 (setf (gethash (lit "shalshelethebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0593)))
 (setf (gethash (lit "shbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3115)))
 (setf (gethash (lit "shchacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0449)))
 (setf (gethash (lit "sheenarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0634)))
 (setf (gethash (lit "sheenfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB6)))
 (setf (gethash (lit "sheeninitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB7)))
 (setf (gethash (lit "sheenmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB8)))
 (setf (gethash (lit "sheicoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03E3)))
 (setf (gethash (lit "sheqel") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AA)))
 (setf (gethash (lit "sheqelhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20AA)))
 (setf (gethash (lit "sheva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "sheva115") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "sheva15") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "sheva22") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "sheva2e") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "shevahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "shevanarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "shevaquarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "shevawidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B0)))
 (setf (gethash (lit "shhacyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04BB)))
 (setf (gethash (lit "shimacoptic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03ED)))
 (setf (gethash (lit "shin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E9)))
 (setf (gethash (lit "shindagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB49)))
 (setf (gethash (lit "shindageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB49)))
 (setf (gethash (lit "shindageshshindot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2C)))
 (setf (gethash (lit "shindageshshindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2C)))
 (setf (gethash (lit "shindageshsindot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2D)))
 (setf (gethash (lit "shindageshsindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2D)))
 (setf (gethash (lit "shindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C1)))
 (setf (gethash (lit "shinhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E9)))
 (setf (gethash (lit "shinshindot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2A)))
 (setf (gethash (lit "shinshindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2A)))
 (setf (gethash (lit "shinsindot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2B)))
 (setf (gethash (lit "shinsindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB2B)))
 (setf (gethash (lit "shook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0282)))
 (setf (gethash (lit "sigma") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C3)))
 (setf (gethash (lit "sigma1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C2)))
 (setf (gethash (lit "sigmafinal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C2)))
 (setf (gethash (lit "sigmalunatesymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03F2)))
 (setf (gethash (lit "sihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3057)))
 (setf (gethash (lit "sikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B7)))
 (setf (gethash (lit "sikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7C)))
 (setf (gethash (lit "siluqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BD)))
 (setf (gethash (lit "siluqlefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05BD)))
 (setf (gethash (lit "similar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x223C)))
 (setf (gethash (lit "sindothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C2)))
 (setf (gethash (lit "siosacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3274)))
 (setf (gethash (lit "siosaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3214)))
 (setf (gethash (lit "sioscieuckorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317E)))
 (setf (gethash (lit "sioscirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3266)))
 (setf (gethash (lit "sioskiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317A)))
 (setf (gethash (lit "sioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3145)))
 (setf (gethash (lit "siosnieunkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317B)))
 (setf (gethash (lit "siosparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3206)))
 (setf (gethash (lit "siospieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317D)))
 (setf (gethash (lit "siostikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x317C)))
 (setf (gethash (lit "six") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0036)))
 (setf (gethash (lit "sixarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0666)))
 (setf (gethash (lit "sixbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09EC)))
 (setf (gethash (lit "sixcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2465)))
 (setf (gethash (lit "sixcircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278F)))
 (setf (gethash (lit "sixdeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x096C)))
 (setf (gethash (lit "sixgujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AEC)))
 (setf (gethash (lit "sixgurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A6C)))
 (setf (gethash (lit "sixhackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0666)))
 (setf (gethash (lit "sixhangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3026)))
 (setf (gethash (lit "sixideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3225)))
 (setf (gethash (lit "sixinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2086)))
 (setf (gethash (lit "sixmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF16)))
 (setf (gethash (lit "sixoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF736)))
 (setf (gethash (lit "sixparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2479)))
 (setf (gethash (lit "sixperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248D)))
 (setf (gethash (lit "sixpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F6)))
 (setf (gethash (lit "sixroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2175)))
 (setf (gethash (lit "sixsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2076)))
 (setf (gethash (lit "sixteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246F)))
 (setf (gethash (lit "sixteencurrencydenominatorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F9)))
 (setf (gethash (lit "sixteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2483)))
 (setf (gethash (lit "sixteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2497)))
 (setf (gethash (lit "sixthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E56)))
 (setf (gethash (lit "slash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x002F)))
 (setf (gethash (lit "slashmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF0F)))
 (setf (gethash (lit "slong") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017F)))
 (setf (gethash (lit "slongdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E9B)))
 (setf (gethash (lit "smileface") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263A)))
 (setf (gethash (lit "smonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF53)))
 (setf (gethash (lit "sofpasuqhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C3)))
 (setf (gethash (lit "softhyphen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00AD)))
 (setf (gethash (lit "softsigncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044C)))
 (setf (gethash (lit "sohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305D)))
 (setf (gethash (lit "sokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BD)))
 (setf (gethash (lit "sokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7F)))
 (setf (gethash (lit "soliduslongoverlaycmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0338)))
 (setf (gethash (lit "solidusshortoverlaycmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0337)))
 (setf (gethash (lit "sorusithai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E29)))
 (setf (gethash (lit "sosalathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E28)))
 (setf (gethash (lit "sosothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0B)))
 (setf (gethash (lit "sosuathai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E2A)))
 (setf (gethash (lit "space") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0020)))
 (setf (gethash (lit "spacehackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0020)))
 (setf (gethash (lit "spade") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2660)))
 (setf (gethash (lit "spadesuitblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2660)))
 (setf (gethash (lit "spadesuitwhite") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2664)))
 (setf (gethash (lit "sparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AE)))
 (setf (gethash (lit "squarebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033B)))
 (setf (gethash (lit "squarecc") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33C4)))
 (setf (gethash (lit "squarecm") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339D)))
 (setf (gethash (lit "squarediagonalcrosshatchfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A9)))
 (setf (gethash (lit "squarehorizontalfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A4)))
 (setf (gethash (lit "squarekg") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338F)))
 (setf (gethash (lit "squarekm") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339E)))
 (setf (gethash (lit "squarekmcapital") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33CE)))
 (setf (gethash (lit "squareln") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D1)))
 (setf (gethash (lit "squarelog") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D2)))
 (setf (gethash (lit "squaremg") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x338E)))
 (setf (gethash (lit "squaremil") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33D5)))
 (setf (gethash (lit "squaremm") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x339C)))
 (setf (gethash (lit "squaremsquared") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33A1)))
 (setf (gethash (lit "squareorthogonalcrosshatchfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A6)))
 (setf (gethash (lit "squareupperlefttolowerrightfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A7)))
 (setf (gethash (lit "squareupperrighttolowerleftfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A8)))
 (setf (gethash (lit "squareverticalfill") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A5)))
 (setf (gethash (lit "squarewhitewithsmallblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A3)))
 (setf (gethash (lit "srsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33DB)))
 (setf (gethash (lit "ssabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09B7)))
 (setf (gethash (lit "ssadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0937)))
 (setf (gethash (lit "ssagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB7)))
 (setf (gethash (lit "ssangcieuckorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3149)))
 (setf (gethash (lit "ssanghieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3185)))
 (setf (gethash (lit "ssangieungkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3180)))
 (setf (gethash (lit "ssangkiyeokkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3132)))
 (setf (gethash (lit "ssangnieunkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3165)))
 (setf (gethash (lit "ssangpieupkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3143)))
 (setf (gethash (lit "ssangsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3146)))
 (setf (gethash (lit "ssangtikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3138)))
 (setf (gethash (lit "ssuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F2)))
 (setf (gethash (lit "sterling") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A3)))
 (setf (gethash (lit "sterlingmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFFE1)))
 (setf (gethash (lit "strokelongoverlaycmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0336)))
 (setf (gethash (lit "strokeshortoverlaycmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0335)))
 (setf (gethash (lit "subset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2282)))
 (setf (gethash (lit "subsetnotequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x228A)))
 (setf (gethash (lit "subsetorequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2286)))
 (setf (gethash (lit "succeeds") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x227B)))
 (setf (gethash (lit "suchthat") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x220B)))
 (setf (gethash (lit "suhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3059)))
 (setf (gethash (lit "sukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B9)))
 (setf (gethash (lit "sukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF7D)))
 (setf (gethash (lit "sukunarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0652)))
 (setf (gethash (lit "summation") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2211)))
 (setf (gethash (lit "sun") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263C)))
 (setf (gethash (lit "superset") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2283)))
 (setf (gethash (lit "supersetnotequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x228B)))
 (setf (gethash (lit "supersetorequal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2287)))
 (setf (gethash (lit "svsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33DC)))
 (setf (gethash (lit "syouwaerasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x337C)))
 (setf (gethash (lit "t") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0074)))
 (setf (gethash (lit "tabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A4)))
 (setf (gethash (lit "tackdown") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22A4)))
 (setf (gethash (lit "tackleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x22A3)))
 (setf (gethash (lit "tadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0924)))
 (setf (gethash (lit "tagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA4)))
 (setf (gethash (lit "tagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A24)))
 (setf (gethash (lit "taharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0637)))
 (setf (gethash (lit "tahfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC2)))
 (setf (gethash (lit "tahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC3)))
 (setf (gethash (lit "tahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305F)))
 (setf (gethash (lit "tahmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC4)))
 (setf (gethash (lit "taisyouerasquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x337D)))
 (setf (gethash (lit "takatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BF)))
 (setf (gethash (lit "takatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF80)))
 (setf (gethash (lit "tatweelarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0640)))
 (setf (gethash (lit "tau") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C4)))
 (setf (gethash (lit "tav") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05EA)))
 (setf (gethash (lit "tavdages") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4A)))
 (setf (gethash (lit "tavdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4A)))
 (setf (gethash (lit "tavdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4A)))
 (setf (gethash (lit "tavhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05EA)))
 (setf (gethash (lit "tbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0167)))
 (setf (gethash (lit "tbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x310A)))
 (setf (gethash (lit "tcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0165)))
 (setf (gethash (lit "tccurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A8)))
 (setf (gethash (lit "tcedilla") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0163)))
 (setf (gethash (lit "tcheharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0686)))
 (setf (gethash (lit "tchehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB7B)))
 (setf (gethash (lit "tchehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB7C)))
 (setf (gethash (lit "tchehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB7D)))
 (setf (gethash (lit "tchehmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB7C)(code-char #xFEE4)))
 (setf (gethash (lit "tcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E3)))
 (setf (gethash (lit "tcircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E71)))
 (setf (gethash (lit "tcommaaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0163)))
 (setf (gethash (lit "tdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E97)))
 (setf (gethash (lit "tdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6B)))
 (setf (gethash (lit "tdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6D)))
 (setf (gethash (lit "tecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0442)))
 (setf (gethash (lit "tedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AD)))
 (setf (gethash (lit "teharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062A)))
 (setf (gethash (lit "tehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE96)))
 (setf (gethash (lit "tehhahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCA2)))
 (setf (gethash (lit "tehhahisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC0C)))
 (setf (gethash (lit "tehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE97)))
 (setf (gethash (lit "tehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3066)))
 (setf (gethash (lit "tehjeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCA1)))
 (setf (gethash (lit "tehjeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC0B)))
 (setf (gethash (lit "tehmarbutaarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0629)))
 (setf (gethash (lit "tehmarbutafinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE94)))
 (setf (gethash (lit "tehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE98)))
 (setf (gethash (lit "tehmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCA4)))
 (setf (gethash (lit "tehmeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC0E)))
 (setf (gethash (lit "tehnoonfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC73)))
 (setf (gethash (lit "tekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C6)))
 (setf (gethash (lit "tekatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF83)))
 (setf (gethash (lit "telephone") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2121)))
 (setf (gethash (lit "telephoneblack") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x260E)))
 (setf (gethash (lit "telishagedolahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A0)))
 (setf (gethash (lit "telishaqetanahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05A9)))
 (setf (gethash (lit "tencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2469)))
 (setf (gethash (lit "tenideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3229)))
 (setf (gethash (lit "tenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247D)))
 (setf (gethash (lit "tenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2491)))
 (setf (gethash (lit "tenroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2179)))
 (setf (gethash (lit "tesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A7)))
 (setf (gethash (lit "tet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D8)))
 (setf (gethash (lit "tetdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB38)))
 (setf (gethash (lit "tetdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB38)))
 (setf (gethash (lit "tethebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D8)))
 (setf (gethash (lit "tetsecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B5)))
 (setf (gethash (lit "tevirhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059B)))
 (setf (gethash (lit "tevirlefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059B)))
 (setf (gethash (lit "thabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A5)))
 (setf (gethash (lit "thadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0925)))
 (setf (gethash (lit "thagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA5)))
 (setf (gethash (lit "thagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A25)))
 (setf (gethash (lit "thalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0630)))
 (setf (gethash (lit "thalfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEAC)))
 (setf (gethash (lit "thanthakhatlowleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF898)))
 (setf (gethash (lit "thanthakhatlowrightthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF897)))
 (setf (gethash (lit "thanthakhatthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4C)))
 (setf (gethash (lit "thanthakhatupperleftthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF896)))
 (setf (gethash (lit "theharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x062B)))
 (setf (gethash (lit "thehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE9A)))
 (setf (gethash (lit "thehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE9B)))
 (setf (gethash (lit "thehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE9C)))
 (setf (gethash (lit "thereexists") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2203)))
 (setf (gethash (lit "therefore") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2234)))
 (setf (gethash (lit "theta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B8)))
 (setf (gethash (lit "theta1") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D1)))
 (setf (gethash (lit "thetasymbolgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03D1)))
 (setf (gethash (lit "thieuthacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3279)))
 (setf (gethash (lit "thieuthaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3219)))
 (setf (gethash (lit "thieuthcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x326B)))
 (setf (gethash (lit "thieuthkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x314C)))
 (setf (gethash (lit "thieuthparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x320B)))
 (setf (gethash (lit "thirteencircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246C)))
 (setf (gethash (lit "thirteenparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2480)))
 (setf (gethash (lit "thirteenperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2494)))
 (setf (gethash (lit "thonangmonthothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E11)))
 (setf (gethash (lit "thook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AD)))
 (setf (gethash (lit "thophuthaothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E12)))
 (setf (gethash (lit "thorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FE)))
 (setf (gethash (lit "thothahanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E17)))
 (setf (gethash (lit "thothanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E10)))
 (setf (gethash (lit "thothongthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E18)))
 (setf (gethash (lit "thothungthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E16)))
 (setf (gethash (lit "thousandcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0482)))
 (setf (gethash (lit "thousandsseparatorarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066C)))
 (setf (gethash (lit "thousandsseparatorpersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x066C)))
 (setf (gethash (lit "three") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0033)))
 (setf (gethash (lit "threearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0663)))
 (setf (gethash (lit "threebengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E9)))
 (setf (gethash (lit "threecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2462)))
 (setf (gethash (lit "threecircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278C)))
 (setf (gethash (lit "threedeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0969)))
 (setf (gethash (lit "threeeighths") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x215C)))
 (setf (gethash (lit "threegujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AE9)))
 (setf (gethash (lit "threegurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A69)))
 (setf (gethash (lit "threehackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0663)))
 (setf (gethash (lit "threehangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3023)))
 (setf (gethash (lit "threeideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3222)))
 (setf (gethash (lit "threeinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2083)))
 (setf (gethash (lit "threemonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF13)))
 (setf (gethash (lit "threenumeratorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F6)))
 (setf (gethash (lit "threeoldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF733)))
 (setf (gethash (lit "threeparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2476)))
 (setf (gethash (lit "threeperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x248A)))
 (setf (gethash (lit "threepersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F3)))
 (setf (gethash (lit "threequarters") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00BE)))
 (setf (gethash (lit "threequartersemdash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DE)))
 (setf (gethash (lit "threeroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2172)))
 (setf (gethash (lit "threesuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B3)))
 (setf (gethash (lit "threethai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E53)))
 (setf (gethash (lit "thzsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3394)))
 (setf (gethash (lit "tihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3061)))
 (setf (gethash (lit "tikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C1)))
 (setf (gethash (lit "tikatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF81)))
 (setf (gethash (lit "tikeutacirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3270)))
 (setf (gethash (lit "tikeutaparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3210)))
 (setf (gethash (lit "tikeutcirclekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3262)))
 (setf (gethash (lit "tikeutkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3137)))
 (setf (gethash (lit "tikeutparenkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3202)))
 (setf (gethash (lit "tilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02DC)))
 (setf (gethash (lit "tildebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0330)))
 (setf (gethash (lit "tildecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0303)))
 (setf (gethash (lit "tildecomb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0303)))
 (setf (gethash (lit "tildedoublecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0360)))
 (setf (gethash (lit "tildeoperator") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x223C)))
 (setf (gethash (lit "tildeoverlaycmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0334)))
 (setf (gethash (lit "tildeverticalcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033E)))
 (setf (gethash (lit "timescircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2297)))
 (setf (gethash (lit "tipehahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0596)))
 (setf (gethash (lit "tipehalefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0596)))
 (setf (gethash (lit "tippigurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A70)))
 (setf (gethash (lit "titlocyrilliccmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0483)))
 (setf (gethash (lit "tiwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057F)))
 (setf (gethash (lit "tlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E6F)))
 (setf (gethash (lit "tmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF54)))
 (setf (gethash (lit "toarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0569)))
 (setf (gethash (lit "tohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3068)))
 (setf (gethash (lit "tokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C8)))
 (setf (gethash (lit "tokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF84)))
 (setf (gethash (lit "tonebarextrahighmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E5)))
 (setf (gethash (lit "tonebarextralowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E9)))
 (setf (gethash (lit "tonebarhighmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E6)))
 (setf (gethash (lit "tonebarlowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E8)))
 (setf (gethash (lit "tonebarmidmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E7)))
 (setf (gethash (lit "tonefive") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BD)))
 (setf (gethash (lit "tonesix") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0185)))
 (setf (gethash (lit "tonetwo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A8)))
 (setf (gethash (lit "tonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0384)))
 (setf (gethash (lit "tonsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3327)))
 (setf (gethash (lit "topatakthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0F)))
 (setf (gethash (lit "tortoiseshellbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3014)))
 (setf (gethash (lit "tortoiseshellbracketleftsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5D)))
 (setf (gethash (lit "tortoiseshellbracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE39)))
 (setf (gethash (lit "tortoiseshellbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3015)))
 (setf (gethash (lit "tortoiseshellbracketrightsmall") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE5E)))
 (setf (gethash (lit "tortoiseshellbracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE3A)))
 (setf (gethash (lit "totaothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E15)))
 (setf (gethash (lit "tpalatalhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01AB)))
 (setf (gethash (lit "tparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24AF)))
 (setf (gethash (lit "trademark") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2122)))
 (setf (gethash (lit "trademarksans") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF8EA)))
 (setf (gethash (lit "trademarkserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6DB)))
 (setf (gethash (lit "tretroflexhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0288)))
 (setf (gethash (lit "triagdn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BC)))
 (setf (gethash (lit "triaglf") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C4)))
 (setf (gethash (lit "triagrt") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BA)))
 (setf (gethash (lit "triagup") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B2)))
 (setf (gethash (lit "ts") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02A6)))
 (setf (gethash (lit "tsadi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E6)))
 (setf (gethash (lit "tsadidagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB46)))
 (setf (gethash (lit "tsadidageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB46)))
 (setf (gethash (lit "tsadihebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05E6)))
 (setf (gethash (lit "tsecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0446)))
 (setf (gethash (lit "tsere") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tsere12") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tsere1e") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tsere2b") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tserehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tserenarrowhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tserequarterhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tserewidehebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05B5)))
 (setf (gethash (lit "tshecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045B)))
 (setf (gethash (lit "tsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF6F3)))
 (setf (gethash (lit "ttabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x099F)))
 (setf (gethash (lit "ttadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x091F)))
 (setf (gethash (lit "ttagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A9F)))
 (setf (gethash (lit "ttagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A1F)))
 (setf (gethash (lit "tteharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0679)))
 (setf (gethash (lit "ttehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB67)))
 (setf (gethash (lit "ttehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB68)))
 (setf (gethash (lit "ttehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB69)))
 (setf (gethash (lit "tthabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09A0)))
 (setf (gethash (lit "tthadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0920)))
 (setf (gethash (lit "tthagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AA0)))
 (setf (gethash (lit "tthagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A20)))
 (setf (gethash (lit "tturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0287)))
 (setf (gethash (lit "tuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3064)))
 (setf (gethash (lit "tukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C4)))
 (setf (gethash (lit "tukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF82)))
 (setf (gethash (lit "tusmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3063)))
 (setf (gethash (lit "tusmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30C3)))
 (setf (gethash (lit "tusmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6F)))
 (setf (gethash (lit "twelvecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x246B)))
 (setf (gethash (lit "twelveparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x247F)))
 (setf (gethash (lit "twelveperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2493)))
 (setf (gethash (lit "twelveroman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x217B)))
 (setf (gethash (lit "twentycircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2473)))
 (setf (gethash (lit "twentyhangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x5344)))
 (setf (gethash (lit "twentyparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2487)))
 (setf (gethash (lit "twentyperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x249B)))
 (setf (gethash (lit "two") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0032)))
 (setf (gethash (lit "twoarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0662)))
 (setf (gethash (lit "twobengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E8)))
 (setf (gethash (lit "twocircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2461)))
 (setf (gethash (lit "twocircleinversesansserif") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x278B)))
 (setf (gethash (lit "twodeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0968)))
 (setf (gethash (lit "twodotenleader") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2025)))
 (setf (gethash (lit "twodotleader") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2025)))
 (setf (gethash (lit "twodotleadervertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE30)))
 (setf (gethash (lit "twogujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AE8)))
 (setf (gethash (lit "twogurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A68)))
 (setf (gethash (lit "twohackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0662)))
 (setf (gethash (lit "twohangzhou") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3022)))
 (setf (gethash (lit "twoideographicparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3221)))
 (setf (gethash (lit "twoinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2082)))
 (setf (gethash (lit "twomonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF12)))
 (setf (gethash (lit "twonumeratorbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09F5)))
 (setf (gethash (lit "twooldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF732)))
 (setf (gethash (lit "twoparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2475)))
 (setf (gethash (lit "twoperiod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2489)))
 (setf (gethash (lit "twopersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F2)))
 (setf (gethash (lit "tworoman") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2171)))
 (setf (gethash (lit "twostroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BB)))
 (setf (gethash (lit "twosuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00B2)))
 (setf (gethash (lit "twothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E52)))
 (setf (gethash (lit "twothirds") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2154)))
 (setf (gethash (lit "u") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0075)))
 (setf (gethash (lit "uacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FA)))
 (setf (gethash (lit "ubar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0289)))
 (setf (gethash (lit "ubengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0989)))
 (setf (gethash (lit "ubopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3128)))
 (setf (gethash (lit "ubreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016D)))
 (setf (gethash (lit "ucaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D4)))
 (setf (gethash (lit "ucircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E4)))
 (setf (gethash (lit "ucircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FB)))
 (setf (gethash (lit "ucircumflexbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E77)))
 (setf (gethash (lit "ucyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0443)))
 (setf (gethash (lit "udattadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0951)))
 (setf (gethash (lit "udblacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0171)))
 (setf (gethash (lit "udblgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0215)))
 (setf (gethash (lit "udeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0909)))
 (setf (gethash (lit "udieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FC)))
 (setf (gethash (lit "udieresisacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D8)))
 (setf (gethash (lit "udieresisbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E73)))
 (setf (gethash (lit "udieresiscaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DA)))
 (setf (gethash (lit "udieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F1)))
 (setf (gethash (lit "udieresisgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01DC)))
 (setf (gethash (lit "udieresismacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01D6)))
 (setf (gethash (lit "udotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE5)))
 (setf (gethash (lit "ugrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00F9)))
 (setf (gethash (lit "ugujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A89)))
 (setf (gethash (lit "ugurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A09)))
 (setf (gethash (lit "uhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3046)))
 (setf (gethash (lit "uhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE7)))
 (setf (gethash (lit "uhorn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B0)))
 (setf (gethash (lit "uhornacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EE9)))
 (setf (gethash (lit "uhorndotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF1)))
 (setf (gethash (lit "uhorngrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EEB)))
 (setf (gethash (lit "uhornhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EED)))
 (setf (gethash (lit "uhorntilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EEF)))
 (setf (gethash (lit "uhungarumlaut") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0171)))
 (setf (gethash (lit "uhungarumlautcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F3)))
 (setf (gethash (lit "uinvertedbreve") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0217)))
 (setf (gethash (lit "ukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A6)))
 (setf (gethash (lit "ukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF73)))
 (setf (gethash (lit "ukcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0479)))
 (setf (gethash (lit "ukorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315C)))
 (setf (gethash (lit "umacron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016B)))
 (setf (gethash (lit "umacroncyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04EF)))
 (setf (gethash (lit "umacrondieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7B)))
 (setf (gethash (lit "umatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A41)))
 (setf (gethash (lit "umonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF55)))
 (setf (gethash (lit "underscore") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x005F)))
 (setf (gethash (lit "underscoredbl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2017)))
 (setf (gethash (lit "underscoremonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF3F)))
 (setf (gethash (lit "underscorevertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE33)))
 (setf (gethash (lit "underscorewavy") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE4F)))
 (setf (gethash (lit "union") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x222A)))
 (setf (gethash (lit "universal") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2200)))
 (setf (gethash (lit "uogonek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0173)))
 (setf (gethash (lit "uparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B0)))
 (setf (gethash (lit "upblock") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2580)))
 (setf (gethash (lit "upperdothebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05C4)))
 (setf (gethash (lit "upsilon") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03C5)))
 (setf (gethash (lit "upsilondieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03CB)))
 (setf (gethash (lit "upsilondieresistonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B0)))
 (setf (gethash (lit "upsilonlatin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x028A)))
 (setf (gethash (lit "upsilontonos") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03CD)))
 (setf (gethash (lit "uptackbelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x031D)))
 (setf (gethash (lit "uptackmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02D4)))
 (setf (gethash (lit "uragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A73)))
 (setf (gethash (lit "uring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x016F)))
 (setf (gethash (lit "ushortcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x045E)))
 (setf (gethash (lit "usmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3045)))
 (setf (gethash (lit "usmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30A5)))
 (setf (gethash (lit "usmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF69)))
 (setf (gethash (lit "ustraightcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04AF)))
 (setf (gethash (lit "ustraightstrokecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04B1)))
 (setf (gethash (lit "utilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0169)))
 (setf (gethash (lit "utildeacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E79)))
 (setf (gethash (lit "utildebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E75)))
 (setf (gethash (lit "uubengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x098A)))
 (setf (gethash (lit "uudeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x090A)))
 (setf (gethash (lit "uugujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A8A)))
 (setf (gethash (lit "uugurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A0A)))
 (setf (gethash (lit "uumatragurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A42)))
 (setf (gethash (lit "uuvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C2)))
 (setf (gethash (lit "uuvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0942)))
 (setf (gethash (lit "uuvowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC2)))
 (setf (gethash (lit "uvowelsignbengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09C1)))
 (setf (gethash (lit "uvowelsigndeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0941)))
 (setf (gethash (lit "uvowelsigngujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AC1)))
 (setf (gethash (lit "v") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0076)))
 (setf (gethash (lit "vadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0935)))
 (setf (gethash (lit "vagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AB5)))
 (setf (gethash (lit "vagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A35)))
 (setf (gethash (lit "vakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F7)))
 (setf (gethash (lit "vav") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D5)))
 (setf (gethash (lit "vavdagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB35)))
 (setf (gethash (lit "vavdagesh65") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB35)))
 (setf (gethash (lit "vavdageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB35)))
 (setf (gethash (lit "vavhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D5)))
 (setf (gethash (lit "vavholam") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4B)))
 (setf (gethash (lit "vavholamhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB4B)))
 (setf (gethash (lit "vavvavhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F0)))
 (setf (gethash (lit "vavyodhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F1)))
 (setf (gethash (lit "vcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E5)))
 (setf (gethash (lit "vdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7F)))
 (setf (gethash (lit "vecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0432)))
 (setf (gethash (lit "veharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06A4)))
 (setf (gethash (lit "vehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB6B)))
 (setf (gethash (lit "vehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB6C)))
 (setf (gethash (lit "vehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB6D)))
 (setf (gethash (lit "vekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F9)))
 (setf (gethash (lit "venus") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2640)))
 (setf (gethash (lit "verticalbar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007C)))
 (setf (gethash (lit "verticallineabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x030D)))
 (setf (gethash (lit "verticallinebelowcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0329)))
 (setf (gethash (lit "verticallinelowmod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02CC)))
 (setf (gethash (lit "verticallinemod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02C8)))
 (setf (gethash (lit "vewarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x057E)))
 (setf (gethash (lit "vhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x028B)))
 (setf (gethash (lit "vikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F8)))
 (setf (gethash (lit "viramabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09CD)))
 (setf (gethash (lit "viramadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x094D)))
 (setf (gethash (lit "viramagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0ACD)))
 (setf (gethash (lit "visargabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0983)))
 (setf (gethash (lit "visargadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0903)))
 (setf (gethash (lit "visargagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A83)))
 (setf (gethash (lit "vmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF56)))
 (setf (gethash (lit "voarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0578)))
 (setf (gethash (lit "voicediterationhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x309E)))
 (setf (gethash (lit "voicediterationkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30FE)))
 (setf (gethash (lit "voicedmarkkana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x309B)))
 (setf (gethash (lit "voicedmarkkanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9E)))
 (setf (gethash (lit "vokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30FA)))
 (setf (gethash (lit "vparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B1)))
 (setf (gethash (lit "vtilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E7D)))
 (setf (gethash (lit "vturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x028C)))
 (setf (gethash (lit "vuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3094)))
 (setf (gethash (lit "vukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F4)))
 (setf (gethash (lit "w") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0077)))
 (setf (gethash (lit "wacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E83)))
 (setf (gethash (lit "waekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3159)))
 (setf (gethash (lit "wahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308F)))
 (setf (gethash (lit "wakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30EF)))
 (setf (gethash (lit "wakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF9C)))
 (setf (gethash (lit "wakorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3158)))
 (setf (gethash (lit "wasmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x308E)))
 (setf (gethash (lit "wasmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30EE)))
 (setf (gethash (lit "wattosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3357)))
 (setf (gethash (lit "wavedash") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x301C)))
 (setf (gethash (lit "wavyunderscorevertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE34)))
 (setf (gethash (lit "wawarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0648)))
 (setf (gethash (lit "wawfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEEE)))
 (setf (gethash (lit "wawhamzaabovearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0624)))
 (setf (gethash (lit "wawhamzaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE86)))
 (setf (gethash (lit "wbsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x33DD)))
 (setf (gethash (lit "wcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E6)))
 (setf (gethash (lit "wcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0175)))
 (setf (gethash (lit "wdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E85)))
 (setf (gethash (lit "wdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E87)))
 (setf (gethash (lit "wdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E89)))
 (setf (gethash (lit "wehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3091)))
 (setf (gethash (lit "weierstrass") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2118)))
 (setf (gethash (lit "wekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F1)))
 (setf (gethash (lit "wekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315E)))
 (setf (gethash (lit "weokorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315D)))
 (setf (gethash (lit "wgrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E81)))
 (setf (gethash (lit "whitebullet") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25E6)))
 (setf (gethash (lit "whitecircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25CB)))
 (setf (gethash (lit "whitecircleinverse") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25D9)))
 (setf (gethash (lit "whitecornerbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300E)))
 (setf (gethash (lit "whitecornerbracketleftvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE43)))
 (setf (gethash (lit "whitecornerbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x300F)))
 (setf (gethash (lit "whitecornerbracketrightvertical") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE44)))
 (setf (gethash (lit "whitediamond") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C7)))
 (setf (gethash (lit "whitediamondcontainingblacksmalldiamond") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C8)))
 (setf (gethash (lit "whitedownpointingsmalltriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BF)))
 (setf (gethash (lit "whitedownpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25BD)))
 (setf (gethash (lit "whiteleftpointingsmalltriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C3)))
 (setf (gethash (lit "whiteleftpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25C1)))
 (setf (gethash (lit "whitelenticularbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3016)))
 (setf (gethash (lit "whitelenticularbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3017)))
 (setf (gethash (lit "whiterightpointingsmalltriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B9)))
 (setf (gethash (lit "whiterightpointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B7)))
 (setf (gethash (lit "whitesmallsquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25AB)))
 (setf (gethash (lit "whitesmilingface") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x263A)))
 (setf (gethash (lit "whitesquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25A1)))
 (setf (gethash (lit "whitestar") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2606)))
 (setf (gethash (lit "whitetelephone") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x260F)))
 (setf (gethash (lit "whitetortoiseshellbracketleft") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3018)))
 (setf (gethash (lit "whitetortoiseshellbracketright") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3019)))
 (setf (gethash (lit "whiteuppointingsmalltriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B5)))
 (setf (gethash (lit "whiteuppointingtriangle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x25B3)))
 (setf (gethash (lit "wihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3090)))
 (setf (gethash (lit "wikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F0)))
 (setf (gethash (lit "wikorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315F)))
 (setf (gethash (lit "wmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF57)))
 (setf (gethash (lit "wohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3092)))
 (setf (gethash (lit "wokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30F2)))
 (setf (gethash (lit "wokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF66)))
 (setf (gethash (lit "won") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x20A9)))
 (setf (gethash (lit "wonmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFFE6)))
 (setf (gethash (lit "wowaenthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E27)))
 (setf (gethash (lit "wparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B2)))
 (setf (gethash (lit "wring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E98)))
 (setf (gethash (lit "wsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B7)))
 (setf (gethash (lit "wturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x028D)))
 (setf (gethash (lit "wynn") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01BF)))
 (setf (gethash (lit "x") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0078)))
 (setf (gethash (lit "xabovecmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x033D)))
 (setf (gethash (lit "xbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3112)))
 (setf (gethash (lit "xcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E7)))
 (setf (gethash (lit "xdieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8D)))
 (setf (gethash (lit "xdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8B)))
 (setf (gethash (lit "xeharmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056D)))
 (setf (gethash (lit "xi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03BE)))
 (setf (gethash (lit "xmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF58)))
 (setf (gethash (lit "xparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B3)))
 (setf (gethash (lit "xsuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02E3)))
 (setf (gethash (lit "y") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0079)))
 (setf (gethash (lit "yaadosquare") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x334E)))
 (setf (gethash (lit "yabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09AF)))
 (setf (gethash (lit "yacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FD)))
 (setf (gethash (lit "yadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x092F)))
 (setf (gethash (lit "yaekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3152)))
 (setf (gethash (lit "yagujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AAF)))
 (setf (gethash (lit "yagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A2F)))
 (setf (gethash (lit "yahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3084)))
 (setf (gethash (lit "yakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E4)))
 (setf (gethash (lit "yakatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF94)))
 (setf (gethash (lit "yakorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3151)))
 (setf (gethash (lit "yamakkanthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E4E)))
 (setf (gethash (lit "yasmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3083)))
 (setf (gethash (lit "yasmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E3)))
 (setf (gethash (lit "yasmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6C)))
 (setf (gethash (lit "yatcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0463)))
 (setf (gethash (lit "ycircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E8)))
 (setf (gethash (lit "ycircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0177)))
 (setf (gethash (lit "ydieresis") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00FF)))
 (setf (gethash (lit "ydotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E8F)))
 (setf (gethash (lit "ydotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF5)))
 (setf (gethash (lit "yeharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x064A)))
 (setf (gethash (lit "yehbarreearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06D2)))
 (setf (gethash (lit "yehbarreefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFBAF)))
 (setf (gethash (lit "yehfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF2)))
 (setf (gethash (lit "yehhamzaabovearabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0626)))
 (setf (gethash (lit "yehhamzaabovefinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE8A)))
 (setf (gethash (lit "yehhamzaaboveinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE8B)))
 (setf (gethash (lit "yehhamzaabovemedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFE8C)))
 (setf (gethash (lit "yehinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF3)))
 (setf (gethash (lit "yehmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEF4)))
 (setf (gethash (lit "yehmeeminitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFCDD)))
 (setf (gethash (lit "yehmeemisolatedarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC58)))
 (setf (gethash (lit "yehnoonfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFC94)))
 (setf (gethash (lit "yehthreedotsbelowarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06D1)))
 (setf (gethash (lit "yekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3156)))
 (setf (gethash (lit "yen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x00A5)))
 (setf (gethash (lit "yenmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFFE5)))
 (setf (gethash (lit "yeokorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3155)))
 (setf (gethash (lit "yeorinhieuhkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3186)))
 (setf (gethash (lit "yerahbenyomohebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AA)))
 (setf (gethash (lit "yerahbenyomolefthebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AA)))
 (setf (gethash (lit "yericyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x044B)))
 (setf (gethash (lit "yerudieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04F9)))
 (setf (gethash (lit "yesieungkorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3181)))
 (setf (gethash (lit "yesieungpansioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3183)))
 (setf (gethash (lit "yesieungsioskorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3182)))
 (setf (gethash (lit "yetivhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x059A)))
 (setf (gethash (lit "ygrave") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF3)))
 (setf (gethash (lit "yhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B4)))
 (setf (gethash (lit "yhookabove") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF7)))
 (setf (gethash (lit "yiarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0575)))
 (setf (gethash (lit "yicyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0457)))
 (setf (gethash (lit "yikorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3162)))
 (setf (gethash (lit "yinyang") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x262F)))
 (setf (gethash (lit "yiwnarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0582)))
 (setf (gethash (lit "ymonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF59)))
 (setf (gethash (lit "yod") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D9)))
 (setf (gethash (lit "yoddagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB39)))
 (setf (gethash (lit "yoddageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB39)))
 (setf (gethash (lit "yodhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D9)))
 (setf (gethash (lit "yodyodhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05F2)))
 (setf (gethash (lit "yodyodpatahhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB1F)))
 (setf (gethash (lit "yohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3088)))
 (setf (gethash (lit "yoikorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3189)))
 (setf (gethash (lit "yokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E8)))
 (setf (gethash (lit "yokatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF96)))
 (setf (gethash (lit "yokorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x315B)))
 (setf (gethash (lit "yosmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3087)))
 (setf (gethash (lit "yosmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E7)))
 (setf (gethash (lit "yosmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6E)))
 (setf (gethash (lit "yotgreek") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03F3)))
 (setf (gethash (lit "yoyaekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3188)))
 (setf (gethash (lit "yoyakorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3187)))
 (setf (gethash (lit "yoyakthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E22)))
 (setf (gethash (lit "yoyingthai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E0D)))
 (setf (gethash (lit "yparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B4)))
 (setf (gethash (lit "ypogegrammeni") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x037A)))
 (setf (gethash (lit "ypogegrammenigreekcmb") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0345)))
 (setf (gethash (lit "yr") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01A6)))
 (setf (gethash (lit "yring") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E99)))
 (setf (gethash (lit "ysuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x02B8)))
 (setf (gethash (lit "ytilde") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1EF9)))
 (setf (gethash (lit "yturned") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x028E)))
 (setf (gethash (lit "yuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3086)))
 (setf (gethash (lit "yuikorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x318C)))
 (setf (gethash (lit "yukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E6)))
 (setf (gethash (lit "yukatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF95)))
 (setf (gethash (lit "yukorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3160)))
 (setf (gethash (lit "yusbigcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046B)))
 (setf (gethash (lit "yusbigiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x046D)))
 (setf (gethash (lit "yuslittlecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0467)))
 (setf (gethash (lit "yuslittleiotifiedcyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0469)))
 (setf (gethash (lit "yusmallhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3085)))
 (setf (gethash (lit "yusmallkatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30E5)))
 (setf (gethash (lit "yusmallkatakanahalfwidth") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF6D)))
 (setf (gethash (lit "yuyekorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x318B)))
 (setf (gethash (lit "yuyeokorean") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x318A)))
 (setf (gethash (lit "yyabengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09DF)))
 (setf (gethash (lit "yyadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095F)))
 (setf (gethash (lit "z") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x007A)))
 (setf (gethash (lit "zaarmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0566)))
 (setf (gethash (lit "zacute") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017A)))
 (setf (gethash (lit "zadeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x095B)))
 (setf (gethash (lit "zagurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A5B)))
 (setf (gethash (lit "zaharabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0638)))
 (setf (gethash (lit "zahfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC6)))
 (setf (gethash (lit "zahinitialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC7)))
 (setf (gethash (lit "zahiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3056)))
 (setf (gethash (lit "zahmedialarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEC8)))
 (setf (gethash (lit "zainarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0632)))
 (setf (gethash (lit "zainfinalarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEB0)))
 (setf (gethash (lit "zakatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B6)))
 (setf (gethash (lit "zaqefgadolhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0595)))
 (setf (gethash (lit "zaqefqatanhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0594)))
 (setf (gethash (lit "zarqahebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0598)))
 (setf (gethash (lit "zayin") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D6)))
 (setf (gethash (lit "zayindagesh") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB36)))
 (setf (gethash (lit "zayindageshhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFB36)))
 (setf (gethash (lit "zayinhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05D6)))
 (setf (gethash (lit "zbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3117)))
 (setf (gethash (lit "zcaron") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017E)))
 (setf (gethash (lit "zcircle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24E9)))
 (setf (gethash (lit "zcircumflex") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E91)))
 (setf (gethash (lit "zcurl") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0291)))
 (setf (gethash (lit "zdot") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017C)))
 (setf (gethash (lit "zdotaccent") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x017C)))
 (setf (gethash (lit "zdotbelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E93)))
 (setf (gethash (lit "zecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0437)))
 (setf (gethash (lit "zedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0499)))
 (setf (gethash (lit "zedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DF)))
 (setf (gethash (lit "zehiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305C)))
 (setf (gethash (lit "zekatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BC)))
 (setf (gethash (lit "zero") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0030)))
 (setf (gethash (lit "zeroarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0660)))
 (setf (gethash (lit "zerobengali") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x09E6)))
 (setf (gethash (lit "zerodeva") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0966)))
 (setf (gethash (lit "zerogujarati") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0AE6)))
 (setf (gethash (lit "zerogurmukhi") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0A66)))
 (setf (gethash (lit "zerohackarabic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0660)))
 (setf (gethash (lit "zeroinferior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2080)))
 (setf (gethash (lit "zeromonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF10)))
 (setf (gethash (lit "zerooldstyle") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xF730)))
 (setf (gethash (lit "zeropersian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x06F0)))
 (setf (gethash (lit "zerosuperior") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x2070)))
 (setf (gethash (lit "zerothai") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0E50)))
 (setf (gethash (lit "zerowidthjoiner") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFEFF)))
 (setf (gethash (lit "zerowidthnonjoiner") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200C)))
 (setf (gethash (lit "zerowidthspace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x200B)))
 (setf (gethash (lit "zeta") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x03B6)))
 (setf (gethash (lit "zhbopomofo") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3113)))
 (setf (gethash (lit "zhearmenian") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x056A)))
 (setf (gethash (lit "zhebrevecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04C2)))
 (setf (gethash (lit "zhecyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0436)))
 (setf (gethash (lit "zhedescendercyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0497)))
 (setf (gethash (lit "zhedieresiscyrillic") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x04DD)))
 (setf (gethash (lit "zihiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x3058)))
 (setf (gethash (lit "zikatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30B8)))
 (setf (gethash (lit "zinorhebrew") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x05AE)))
 (setf (gethash (lit "zlinebelow") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x1E95)))
 (setf (gethash (lit "zmonospace") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #xFF5A)))
 (setf (gethash (lit "zohiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305E)))
 (setf (gethash (lit "zokatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BE)))
 (setf (gethash (lit "zparen") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x24B5)))
 (setf (gethash (lit "zretroflexhook") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x0290)))
 (setf (gethash (lit "zstroke") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x01B6)))
 (setf (gethash (lit "zuhiragana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x305A)))
 (setf (gethash (lit "zukatakana") +glyphname2unicode+) (format nil "~@{~C~}"(code-char #x30BA)))
